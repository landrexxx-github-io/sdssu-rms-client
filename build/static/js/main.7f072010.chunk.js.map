{"version":3,"sources":["context/AccountContext.js","components/layouts/Header.js","components/layouts/SideMenu.js","api/index.js","redux/actions/proposal_action.js","redux/actions/completed_action.js","redux/actions/presentation_action.js","redux/actions/publication_action.js","redux/actions/utilization_action.js","redux/actions/innovation_action.js","components/pages/researches/dashboard/Faculties.jsx","redux/actions/department_action.js","redux/actions/account_action.js","components/pages/researches/dashboard/Administrator.jsx","components/pages/researches/Proposal.jsx","components/pages/researches/Completed.jsx","components/pages/researches/Presentation.jsx","components/pages/researches/Publication.jsx","components/pages/researches/Utilization.jsx","components/pages/researches/Innovation.jsx","components/pages/researches/Seminar.jsx","redux/actions/seminar_action.js","redux/actions/campus_action.js","components/pages/manage/Campus.js","components/pages/manage/Department.js","images/profile-picture.svg","components/pages/manage/Account.jsx","components/pages/manage/Profile.jsx","components/pages/manage/ChangePassword.jsx","redux/actions/auth_action.js","images/sdssu-logo.webp","images/research-collaboration.svg","components/auth/Login.jsx","components/auth/Registration.jsx","components/pages/error/PageNotFound.jsx","components/layouts/Content.js","components/layouts/Footer.js","components/layouts/Main.js","App.js","redux/reducers/proposal.js","redux/reducers/completed.js","redux/reducers/presentation.js","redux/reducers/publication.js","redux/reducers/utilization.js","redux/reducers/innovation.js","redux/reducers/seminar.js","redux/reducers/campus.js","redux/reducers/department.js","redux/reducers/account.js","redux/reducers/authentication.js","redux/reducers/index.js","index.js"],"names":["createContext","Header","useContext","AccountContext","userData","setUserData","history","useHistory","useState","user","first_name","firstName","setFirstName","last_name","lastName","setLastName","position","setPosition","college","setCollege","user_type","setUserType","useEffect","undefined","Fragment","className","data-navbarbg","data-logobg","href","src","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","data-feather","aria-haspopup","width","to","onClick","token","localStorage","setItem","push","SideMenu","userType","typeOfUser","data-sidebarbg","url","createProposal","data","axios","post","updateProposal","patch","deleteProposal","research_id","delete","params","updateProposalCompleted","createPresentation","updatePresentation","deletePresentation","createPublication","updatePublication","deletePublication","createUtilization","updateUtilization","deleteUtilization","createInnovation","updateInnovation","deleteInnovation","innovation_id","createCampus","updateCampus","deleteCampus","campus_id","createDepartment","updateDepartment","deleteDepartment","department_id","createAccount","updateAccount","createSeminar","updateSeminar","deleteSeminar","seminar_id","changePassword","credentials","getProposal","dispatch","a","get","type","payload","results","console","log","getProposalCompleted","updateProposalCompletedApprovedRemarks","proposal","api","toast","success","error","getPresentation","getPublication","getUtilization","createUtilizaition","utilization","getInnovation","USER_TYPE","Faculties","currentUser","useSelector","state","proposals","completed","presentation","presentations","publication","publications","utilizations","innovation","innovations","useDispatch","currentHour","moment","format","getGreetingTime","filter","prop","created_by","user_id","length","class","xmlns","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","is_completed","points","x1","y1","x2","y2","x","y","rx","ry","getDepartment","getAccount","message","Administrator","faculty","account","accounts","department","departments","colleges","setColleges","getTotalFacultyByCollege","getTotalProposal","getTotalCompleted","getTotalPresented","getTotalPublished","getTotalUtilized","getTotalInnovated","name","value","onChange","e","target","i","department_code","_id","getColleges","labels","datasets","label","Math","floor","backgroundColor","hoverOffset","animatedComponents","makeAnimated","REMARKS","MODAL_TYPE","formSchema","yup","shape","title_of_research","required","type_of_research","source_of_funding","total_funds","Proposal","useForm","resolver","yupResolver","handleSubmit","register","errors","formState","watch","modal","setModal","modalPrompt","setModalPrompt","modalType","setModaType","activeTab","setActiveTab","researchId","setResearchId","titleOfResearch","setTitleOfResearch","typeOfResearch","setTypeOfResearch","author","setAuthor","sourceOfFunding","setSourceOfFunding","totalFunds","setTotalFunds","nameOfAgency","setNameOfAgency","Date","dateOfCompletion","setDateOfCompletion","remarks","setRemarks","status","full_name","campus","createdBy","dtColumns","key","align","cell","Button","size","showEditForm","showModalPrompt","text","sortable","charAt","toUpperCase","substring","isSearchable","aria-labelledby","dtConfig","key_column","page_size","length_menu","button","extra","dtExtraButtons","title","children","aria-hidden","toggleModal","modal_type","toggleTab","tabId","name_of_agency","onSubmitUpdateStatusOrDelete","updateProposalRemarks","getPendingProposal","currentUserId","pending","author_list","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Modal","isOpen","toggle","ModalHeader","ModalBody","Label","ModalFooter","color","Form","onSubmit","authors","map","list","details","join","Container","FormGroup","defaultValue","for","closeMenuOnSelect","components","isMulti","options","getAuthorOptions","styles","borderRadius","Row","Col","md","aria-current","fluid","Card","CardBody","Nav","tabs","pills","NavItem","NavLink","TabContent","TabPane","tHeadClassName","config","records","columns","extraButtons","submitted","created_by_id","created_by_name","created_by_type","getSubmittedProposal","evaluated","getEvaluatedProposal","for_approval","getForApprovalProposal","approved","getApprovedProposal","disapproved","getDisApprovedProposal","date_of_completion","getUsersProposal","abstract","date_started","date_completed","duration","Completed","proposal_approved","reset","setModalType","dateStarted","dateCompleted","isCompleted","setIsCompleted","updatedAt","setUpdatedAt","updatedBy","updated_at","updated_by","created_at","list_of_research","getResearchesOptions","rows","Alert","file_name","complete","getCompletedProposal","getUserCompleted","presentor","date_presented","title_of_forum","type_of_forum","venue_of_forum","Presentation","presentationId","setPresentationId","setPresentor","datePresented","setDatePresented","typeOfForum","setTypeOfForum","venueOfForum","setVenueOfForum","titleOfForum","setTitleOfForum","onClickDelete","onSubmitUpdateRemarks","presentation_id","window","confirm","selectedResearch","document","getElementById","titleOfTheResearch","selectedIndex","list_of_presentor","j","getPresentorsOptions","getPendingPresentations","getCompletedPresentations","getPresentations","title_of_publication","date_of_publication","test","title_of_journal","type_of_journal","issn_isbn_no","volume_issue_no","Publication","publicationId","setPublicationId","setTitleOfPublication","dateOfPublication","setDateOfPublication","titleOfJournal","setTitleOfJournal","typeOfJournal","setTypeOfJournal","issnIsbn","setIssnIsbn","volumeNo","setVolumeNo","clearForm","issn_isbn","volume_no","publication_id","nameOfTheResearch","getPendingPublications","getCompletedPublications","getPublications","beneficiary","date_of_utilization","Utilization","utilizationId","setUtilizationId","setBeneficiary","dateOfUtilization","setDateOfUtilization","utilization_id","getPendingUtilization","__id","getCompletedUtilization","getUtilizations","title_of_innovation","type_of_innovation","is_submitted_or_granted","Innovation","innovationId","setInnovationId","facultyDetails","setFacultyDetails","titleOfInnovation","setTitleOfInnovation","typeOfInnovation","setTypeOfInnovation","setStatus","dateSubmitted","setDateSubmitted","grantCode","setGrantCode","dateGranted","setDateGranted","showToast","Toast","ToastHeader","ToastBody","faculty_id","faculty_name","date_submitted","grant_code","date_granted","getFacultyOption","Input","getPendingInnovations","getCompletedInnovations","getInnovations","date_of_seminar","title_of_activity","type_of_participant","venue_of_the_activity","scope_of_the_activity","Seminar","seminar","seminars","seminarId","setSeminarId","dateOfSeminar","setDateOfSeminar","titleOfActivity","setTitleOfActivity","typeOfParticipant","setTypeOfParticipant","venueOfActivity","setVenueOfActivity","scopeOfActivity","setScopeOfActivity","getSeminarByUser","getCampus","Campus","campuses","campusId","setCampusId","campusName","setCampusName","campusAddress","setCampusAddress","alert","campus_name","campus_address","preventDefault","Department","deptId","setDeptId","deptCode","setDeptCode","deptName","setDeptName","department_name","index","nativeEvent","nameOfCampus","opt","CREATE_UPDATE","ACTIVATE_ACCOUNT","Account","setModalAccount","modalActivateAccount","setModalAccountActivateAccount","setAccountId","setMiddleInitial","fullName","setFullName","fieldOfSpecialization","setFieldOfSpecialization","educationalAttainment","setEducationalAttainment","username","setUsername","password","setPassword","showPassword","setShowPassword","middle_initial","educational_attainment","field_of_specialization","DefaultAvatar","contentEditable","htmlFor","style","check","disabled","Profile","userId","middleInitial","account_details","profileData","marginLeft","borderLeft","float","old_password","new_password","confirm_password","oneOf","ChangePassword","location","Login","setUserName","onSubmitFormLogin","loginResponse","margin","top","bottom","zIndex","COVERPHOTO","boxShadow","padding","left","SDSSULOGO","marginTop","border","autoComplete","placeholder","fontSize","Registration","defaultValues","account_data","data-campus","toLocaleLowerCase","trim","getAllCampus","year","getFullYear","fname","lname","uname","split","pword","onGenerateCredentials","PageNotFound","data-name","gradientUnits","offset","stop-color","stop-opacity","cx","cy","opacity","transform","Content","display","exact","path","render","component","Footer","Main","App","getItem","headers","userResponse","getloggedInAccount","Provider","initialState","proposalReducer","action","updatedState","filteredRemarks","deletedState","proposalCompletedReducer","filteredState","presentationReducer","publicationReducer","utilizationReducer","innovationReducer","seminarReducer","campusReducer","departmentReducer","accountReducer","updatedPassword","logged_accounts","loggedAccountReducer","logged_in","combineReducers","proposal_reducer","completed_reducer","presentation_reducer","publication_reducer","utilization_reducer","innovation_reducer","seminar_reducer","campus_reducer","department_reducer","account_reducer","logged_account","logged_account_reducer","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7f072010.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext(null); ","/* eslint-disable jsx-a11y/role-supports-aria-props */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AccountContext from \"../../context/AccountContext\";\r\n// import RMSLOGO from \"../../../public/assets/images/rms-logo.png\";\r\n\r\nconst Header = () => {\r\n    const { userData, setUserData } = useContext(AccountContext);\r\n    const history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState(\r\n        userData.user ? userData.user.first_name : \"\"\r\n    );\r\n    const [lastName, setLastName] = useState(\r\n        userData.user ? userData.user.last_name : \"\"\r\n    );\r\n    const [position, setPosition] = useState(\r\n        userData.user ? userData.user.position : \"\"\r\n    );\r\n    const [college, setCollege] = useState(\r\n        userData.user ? userData.user.college : \"\"\r\n    );\r\n    const [userType, setUserType] = useState(\r\n        userData.user ? userData.user.user_type : \"\"\r\n    );\r\n\r\n    const onLogOut = () => {\r\n        setUserData({\r\n            token: undefined,\r\n            user: undefined,\r\n        });\r\n\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userData.user && userData.user !== undefined) {\r\n            setFirstName(userData.user.first_name);\r\n            setLastName(userData.user.last_name);\r\n            setPosition(userData.user.position);\r\n            setCollege(userData.user.college);\r\n            setUserType(userData.user.user_type);\r\n        }\r\n    }, [userData.user]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header\r\n                className={userData.user ? \"topbar\" : \"hidden\"}\r\n                data-navbarbg=\"skin6\"\r\n            >\r\n                <nav className=\"navbar top-navbar navbar-expand-md\">\r\n                    <div className=\"navbar-header bg-dark\" data-logobg=\"skin6\">\r\n                        <a\r\n                            className=\"nav-toggler waves-effect waves-light d-block d-md-none\"\r\n                            href=\"#\"\r\n                        >\r\n                            <i className=\"ti-menu ti-close\" />\r\n                        </a>\r\n                        <div className=\"navbar-brand\">\r\n                            <a href=\"index.html\">\r\n                                \r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/rms-logo.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/rms-label.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t{/*\r\n\t\t\t\t\t\t\t<span className=\"logo-text\">\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-text.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-light-text.png\" className=\"light-logo\" alt=\"homepage\" />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                <span className=\"logo-text text-white\">\r\n                                    {/* [ System ni Candia ] */}\r\n                                </span>\r\n                            </a>\r\n                        </div>\r\n                        <a\r\n                            className=\"topbartoggler d-block d-md-none waves-effect waves-light\"\r\n                            href=\"#\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarSupportedContent\"\r\n                            aria-controls=\"navbarSupportedContent\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\"\r\n                        >\r\n                            <i className=\"ti-more\" />\r\n                        </a>\r\n                    </div>\r\n                    <div\r\n                        className=\"navbar-collapse collapse\"\r\n                        id=\"navbarSupportedContent\"\r\n                    >\r\n                        <ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                {/* <a\r\n                                    className=\"nav-link dropdown-toggle pl-md-3 position-relative\"\r\n                                    href=\"#\"\r\n                                    id=\"bell\"\r\n                                    role=\"button\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <span>\r\n                                        <i\r\n                                            data-feather=\"bell\"\r\n                                            className=\"svg-icon\"\r\n                                        />\r\n                                    </span>\r\n                                    <span className=\"badge badge-primary notify-no rounded-circle\">\r\n                                        5\r\n                                    </span>\r\n                                </a> */}\r\n                                <div className=\"dropdown-menu dropdown-menu-left mailbox animated bounceInDown\">\r\n                                    <ul className=\"list-style-none\">\r\n                                        <li>\r\n                                            <div className=\"message-center notifications position-relative\">\r\n                                                <a\r\n                                                    href=\"#\"\r\n                                                    className=\"message-item d-flex align-items-center border-bottom px-3 py-2\"\r\n                                                >\r\n                                                    <div className=\"btn btn-danger rounded-circle btn-circle\">\r\n                                                        <i\r\n                                                            data-feather=\"airplay\"\r\n                                                            className=\"text-white\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"w-75 d-inline-block v-middle pl-2\">\r\n                                                        <h6 className=\"message-title mb-0 mt-1\">\r\n                                                            Luanch Admin\r\n                                                        </h6>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted\">\r\n                                                            Just see the my new\r\n                                                            admin!\r\n                                                        </span>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted\">\r\n                                                            9:30 AM\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </a>\r\n                                                <a\r\n                                                    href=\"#\"\r\n                                                    className=\"message-item d-flex align-items-center border-bottom px-3 py-2\"\r\n                                                >\r\n                                                    <span className=\"btn btn-success text-white rounded-circle btn-circle\">\r\n                                                        <i\r\n                                                            data-feather=\"calendar\"\r\n                                                            className=\"text-white\"\r\n                                                        />\r\n                                                    </span>\r\n                                                    <div className=\"w-75 d-inline-block v-middle pl-2\">\r\n                                                        <h6 className=\"message-title mb-0 mt-1\">\r\n                                                            Event today\r\n                                                        </h6>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted text-truncate\">\r\n                                                            Just a reminder that\r\n                                                            you have event\r\n                                                        </span>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted\">\r\n                                                            9:10 AM\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </a>\r\n                                                <a\r\n                                                    href=\"#\"\r\n                                                    className=\"message-item d-flex align-items-center border-bottom px-3 py-2\"\r\n                                                >\r\n                                                    <span className=\"btn btn-info rounded-circle btn-circle\">\r\n                                                        <i\r\n                                                            data-feather=\"settings\"\r\n                                                            className=\"text-white\"\r\n                                                        />\r\n                                                    </span>\r\n                                                    <div className=\"w-75 d-inline-block v-middle pl-2\">\r\n                                                        <h6 className=\"message-title mb-0 mt-1\">\r\n                                                            Settings\r\n                                                        </h6>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted text-truncate\">\r\n                                                            You can customize\r\n                                                            this template as you\r\n                                                            want\r\n                                                        </span>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted\">\r\n                                                            9:08 AM\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </a>\r\n                                                <a\r\n                                                    href=\"#\"\r\n                                                    className=\"message-item d-flex align-items-center border-bottom px-3 py-2\"\r\n                                                >\r\n                                                    <span className=\"btn btn-primary rounded-circle btn-circle\">\r\n                                                        <i\r\n                                                            data-feather=\"box\"\r\n                                                            className=\"text-white\"\r\n                                                        />\r\n                                                    </span>\r\n                                                    <div className=\"w-75 d-inline-block v-middle pl-2\">\r\n                                                        <h6 className=\"message-title mb-0 mt-1\">\r\n                                                            Pavan kumar\r\n                                                        </h6>{\" \"}\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted\">\r\n                                                            Just see the my\r\n                                                            admin!\r\n                                                        </span>\r\n                                                        <span className=\"font-12 text-nowrap d-block text-muted\">\r\n                                                            9:02 AM\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a\r\n                                                className=\"nav-link pt-3 text-center text-dark\"\r\n                                                href=\"#\"\r\n                                            >\r\n                                                <strong>\r\n                                                    Check all notifications\r\n                                                </strong>\r\n                                                <i className=\"fa fa-angle-right\" />\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    id=\"navbarDropdown\"\r\n                                    role=\"button\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"settings\"\r\n                                        className=\"svg-icon\"\r\n                                    />\r\n                                </a>\r\n                                <div\r\n                                    className=\"dropdown-menu\"\r\n                                    aria-labelledby=\"navbarDropdown\"\r\n                                >\r\n                                    <a className=\"dropdown-item\" href=\"#\">\r\n                                        Action\r\n                                    </a>\r\n                                    <a className=\"dropdown-item\" href=\"#\">\r\n                                        Another action\r\n                                    </a>\r\n                                    <div className=\"dropdown-divider\" />\r\n                                    <a className=\"dropdown-item\" href=\"#\">\r\n                                        Something else here\r\n                                    </a>\r\n                                </div>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item d-none d-md-block\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<div className=\"customize-input\">\r\n\t\t\t\t\t\t\t\t<select className=\"custom-select form-control bg-white custom-radius custom-shadow border-0\">\r\n\t\t\t\t\t\t\t\t\t<option>EN</option>\r\n\t\t\t\t\t\t\t\t\t<option value={1}>AB</option>\r\n\t\t\t\t\t\t\t\t\t<option value={2}>AK</option>\r\n\t\t\t\t\t\t\t\t\t<option value={3}>BE</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li> */}\r\n                        </ul>\r\n                        <ul className=\"navbar-nav float-right\">\r\n                            {/* <li className=\"nav-item d-none d-md-block\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<div className=\"customize-input\">\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control custom-shadow custom-radius border-0 bg-white\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\t\t\t\t\t\t\t\t\t<i className=\"form-control-icon\" data-feather=\"search\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li> */}\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    href=\"#\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <img\r\n                                        src=\"../assets/images/profile-picture.svg\"\r\n                                        alt=\"user\"\r\n                                        className=\"rounded-circle\"\r\n                                        width={40}\r\n                                    />\r\n                                    <span className=\"ml-2 d-none d-lg-inline-block\">\r\n                                        <span>Hello,</span>{\" \"}\r\n                                        <span className=\"text-dark\">\r\n                                            {firstName} {lastName}\r\n                                        </span>{\" \"}\r\n                                        <i\r\n                                            data-feather=\"chevron-down\"\r\n                                            className=\"svg-icon\"\r\n                                        />\r\n                                    </span>\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\r\n                                    <a className=\"dropdown-item\" href=\"/profile\">\r\n                                        <i\r\n                                            data-feather=\"user\"\r\n                                            className=\"svg-icon mr-2 ml-1\"\r\n                                        />{\" \"}\r\n                                        My Profile\r\n                                    </a>\r\n                                    {/* <a className=\"dropdown-item\" href=\"#\"><i data-feather=\"mail\" className=\"svg-icon mr-2 ml-1\" /> Inbox</a> */}\r\n                                    {/* <div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"settings\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\tAccount Setting\r\n\t\t\t\t\t\t\t\t\t</a> */}\r\n                                    <div className=\"dropdown-divider\" />\r\n                                    {/* <a className=\"dropdown-item\" href=\"#\"><i data-feather=\"log-out\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t</a> */}\r\n                                    <Link\r\n                                        className=\"dropdown-item\"\r\n                                        to=\"#\"\r\n                                        onClick={() => {\r\n                                            onLogOut();\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"log-out\"\r\n                                            className=\"svg-icon mr-2 ml-1\"\r\n                                        />\r\n                                        Logout\r\n                                    </Link>\r\n                                    <div className=\"dropdown-divider\" />\r\n                                    {/* <div className=\"pl-4 p-3\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"btn btn-sm btn-info\">View\r\n\t\t\t\t\t\t\t\t\t\tProfile\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountContext from \"../../context/AccountContext\";\r\n\r\nconst SideMenu = () => {\r\n    const [userType, setUserType] = useState(\"\");\r\n\r\n    const { userData, setUserData } = useContext(AccountContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (userData.user && userData.user !== undefined) {\r\n            const typeOfUser = userData.user.user_type;\r\n            setUserType(typeOfUser);\r\n        }\r\n    }, [userData.user]);\r\n\r\n\tconst onLogout = () => {\r\n\t\tsetUserData({\r\n            token: undefined,\r\n            user: undefined,\r\n        });\r\n\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        history.push(\"/login\");\r\n\t}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <aside\r\n                className={userData.user ? \"left-sidebar\" : \"hidden\"}\r\n                data-sidebarbg=\"skin6\"\r\n            >\r\n                <div className=\"scroll-sidebar bg-dark\" data-sidebarbg=\"skin6\">\r\n                    <nav className=\"sidebar-nav bg-dark\">\r\n                        <ul id=\"sidebarnav\" className=\"bg-dark\">\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/dashboard\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"layout\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">Dashboard</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"list-divider\" />\r\n                            <li className=\"nav-small-cap\">\r\n                                <span className=\"hide-menu text-white\">\r\n                                    Research\r\n                                </span>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    href=\"/proposal\"\r\n                                    className=\"sidebar-link text-white\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"edit-3\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">Proposal</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/completed\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"check-circle\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">Completed</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/presentation\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"pie-chart\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">\r\n                                        Presentation\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/publication\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"book-open\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">\r\n                                        Publication\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/utilization\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"file-text\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">\r\n                                        Utilization\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/innovation\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"monitor\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">\r\n                                        Innovation\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"sidebar-item\">\r\n                                <a\r\n                                    className=\"sidebar-link text-white\"\r\n                                    href=\"/seminar\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <i\r\n                                        data-feather=\"share-2\"\r\n                                        className=\"feather-icon\"\r\n                                    />\r\n                                    <span className=\"hide-menu\">\r\n                                        Seminar\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n\r\n\r\n                            { userType === \"rh\" || userType === \"admin\" ? <>\r\n                            \r\n                                <li className=\"list-divider\" />\r\n                                <li className=\"nav-small-cap\">\r\n                                    <span className=\"hide-menu text-white\">\r\n                                        Settings\r\n                                    </span>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"/campus\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"trello\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Campus\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"/department\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"trello\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Departments\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"/account\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"users\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Faculty\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"/registration\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"user-plus\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Register Account\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">&nbsp;</li>\r\n\r\n                            </> : <>\r\n                            \r\n                            <li className=\"list-divider\" />\r\n                                <li className=\"nav-small-cap\">\r\n                                    <span className=\"hide-menu text-white\">\r\n                                        Settings\r\n                                    </span>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"/profile\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"user-check\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Update Profile\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"/change-password\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"settings\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Change Password\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">\r\n                                    <a\r\n                                        className=\"sidebar-link text-white\"\r\n                                        href=\"#\"\r\n                                        onClick={() => onLogout()}\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <i\r\n                                            data-feather=\"log-out\"\r\n                                            className=\"feather-icon\"\r\n                                        />\r\n                                        <span className=\"hide-menu\">\r\n                                            Logout\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"sidebar-item\">&nbsp;</li>\r\n\r\n                            </> }\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </aside>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SideMenu;\r\n","import axios from 'axios';\r\n\r\n// const url = 'http://localhost:3001';\r\nconst url = 'https://sdssu-rms.herokuapp.com/';\r\n\r\nexport const fetchProposal = () => axios.get(`${url}/proposal`);\r\nexport const createProposal = (data) => axios.post(`${url}/proposal`, data);\r\nexport const updateProposal = (data) => axios.patch(`${url}/proposal`, data);\r\nexport const deleteProposal = (research_id) => axios.delete(`${url}/proposal`, { params: { research_id } });\r\n\r\nexport const fetchProposalSubmitted = () => axios.get(`${url}/proposal_submitted`);\r\nexport const fetchProposalEvaluated = () => axios.get(`${url}/proposal_evaluated`);\r\nexport const fetchProposalForApproval = () => axios.get(`${url}/proposal_for_approval`);\r\n// export const fetchProposalApproved = () => axios.get(`${url}/proposal_approved`);\r\n\r\nexport const fetchCompleted = () => axios.get(`${url}/completed`);\r\nexport const createProposalCompleted = (data) => axios.post(`${url}/completed`, data);\r\nexport const updateProposalCompleted = (data) => axios.patch(`${url}/completed`, data);\r\n// export const updateCompleted = (data) => axios.patch(`${url}/completed`, data);\r\n\r\nexport const fetchCompletedApproved = () => axios.get(`${url}/completed_approved`);\r\nexport const fetchCompletedApprovedAuthorsByResearchId = (research_id) => axios.get(`${url}/completed_approved_presentor`, { params: { research_id } });\r\n\r\nexport const fetchPresentation = () => axios.get(`${url}/presentation`);\r\nexport const createPresentation = (data) => axios.post(`${url}/presentation`, data);\r\nexport const updatePresentation = (data) => axios.patch(`${url}/presentation`, data);\r\nexport const deletePresentation = (research_id) => axios.delete(`${url}/presentation`, { params: { research_id } });\r\n\r\nexport const fetchPublication = () => axios.get(`${url}/publication`);\r\nexport const createPublication = (data) => axios.post(`${url}/publication`, data);\r\nexport const updatePublication = (data) => axios.patch(`${url}/publication`, data);\r\nexport const deletePublication = (research_id) => axios.delete(`${url}/publication`, { params: { research_id } });\r\n\r\nexport const fetchUtilization = () => axios.get(`${url}/utilization`);\r\nexport const createUtilization = (data) => axios.post(`${url}/utilization`, data);\r\nexport const updateUtilization = (data) => axios.patch(`${url}/utilization`, data);\r\nexport const deleteUtilization = (research_id) => axios.delete(`${url}/utilization`, { params: { research_id } });\r\n\r\nexport const fetchInnovation = () => axios.get(`${url}/innovation`);\r\nexport const createInnovation = (data) => axios.post(`${url}/innovation`, data);\r\nexport const updateInnovation = (data) => axios.patch(`${url}/innovation`, data);\r\nexport const deleteInnovation = (innovation_id) => axios.delete(`${url}/innovation`, { params: { innovation_id } });\r\n\r\nexport const fetchCampus = () => axios.get(`${url}/campus`);\r\nexport const createCampus = (data) => axios.post(`${url}/campus`, data);\r\nexport const updateCampus = (data) => axios.patch(`${url}/campus`, data);\r\nexport const deleteCampus = (campus_id) => axios.delete(`${url}/campus`, { params: { campus_id } });\r\n\r\nexport const fetchDepartment = () => axios.get(`${url}/department`);\r\nexport const createDepartment = (data) => axios.post(`${url}/department`, data);\r\nexport const updateDepartment = (data) => axios.patch(`${url}/department`, data);\r\nexport const deleteDepartment = (department_id) => axios.delete(`${url}/department`, { params: { department_id } });\r\n\r\nexport const fetchAccount = () => axios.get(`${url}/account`);\r\nexport const createAccount = (data) => axios.post(`${url}/account/create`, data);\r\nexport const updateAccount = (data) => axios.patch(`${url}/account/update`, data);\r\nexport const deleteAccount = (account_id) => axios.delete(`${url}/account`, { params: { account_id } });\r\n\r\nexport const fetchSeminar = () => axios.get(`${url}/seminar`);\r\nexport const createSeminar = (data) => axios.post(`${url}/seminar`, data);\r\nexport const updateSeminar = (data) => axios.patch(`${url}/seminar`, data);\r\nexport const deleteSeminar = (seminar_id) => axios.delete(`${url}/seminar`, { params: { seminar_id } });\r\n\r\nexport const loginAccount = (credentials) => axios.post(`${url}/account/login`, credentials);\r\nexport const changePassword = (credentials) => axios.patch(`${url}/account/change_password`, credentials);\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getProposal = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchProposal();\r\n\r\n        dispatch({\r\n            type: 'FETCH_PROPOSAL',\r\n            payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\nexport const createProposal = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createProposal(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'CREATE_PROPOSAL', \r\n            payload: data.results \r\n        });\r\n        \r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateProposal = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateProposal(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_PROPOSAL'\r\n            , payload: data \r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateProposalRemarks = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateProposal(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_PROPOSAL_REMARKS'\r\n            // type: 'UPDATE_PROPOSAL'\r\n            , payload: data \r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const deleteProposal = (research_id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteProposal(research_id);\r\n\r\n        dispatch({ \r\n            type: 'DELETE_PROPOSAL'\r\n            , payload: research_id \r\n        });\r\n\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getProposalCompleted = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchCompleted();\r\n        \r\n        dispatch({\r\n            type: 'FETCH_PROPOSAL_COMPLETED'\r\n            , payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\nexport const createProposalCompleted = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createProposalCompleted(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'CREATE_PROPOSAL_COMPLETED'\r\n            , payload: data.results \r\n        });\r\n        \r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateProposalCompleted = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateProposalCompleted(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_PROPOSAL_COMPLETED'\r\n            , payload: data \r\n        });\r\n        \r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateProposalCompletedApprovedRemarks = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateProposal(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_PROPOSAL_COMPLETED_REMARKS'\r\n            , payload: data \r\n        });\r\n        \r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\n// export const deleteProposal = (research_id) => async (dispatch) => {\r\n//     try {\r\n//         await api.deleteProposal(research_id);\r\n\r\n//         dispatch({ type: 'DELETE_PROPOSAL', payload: research_id });\r\n//         toast.success(\"Deleted successfully\");\r\n//     } catch (error) {\r\n//         toast.error(\"Unable to delete this data.\");\r\n//         console.log('Error: ', error);\r\n//     }\r\n// }\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getPresentation = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPresentation();\r\n\r\n        dispatch({\r\n            type: 'FETCH_PRESENTATION',\r\n            payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\nexport const createPresentation = (proposal) => async (dispatch) => {\r\n\r\n    try {\r\n        const { data } = await api.createPresentation(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'CREATE_PRESENTATION', \r\n            payload: data.results \r\n        });\r\n        \r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updatePresentation = (proposal) => async (dispatch) => {\r\n    console.log(\"Proposal\", proposal);\r\n    try {\r\n        const { data } = await api.updatePresentation(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_PRESENTATION'\r\n            , payload: data \r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const deletePresentation = (research_id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePresentation(research_id);\r\n\r\n        dispatch({ \r\n            type: 'DELETE_PRESENTATION'\r\n            , payload: research_id \r\n        });\r\n\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getPublication = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPublication();\r\n\r\n        dispatch({\r\n            type: 'FETCH_PUBLICATION',\r\n            payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\nexport const createPublication = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPublication(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'CREATE_PUBLICATION', \r\n            payload: data.results \r\n        });\r\n        \r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updatePublication = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePublication(proposal);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_PUBLICATION'\r\n            , payload: data \r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const deletePublication = (research_id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePublication(research_id);\r\n\r\n        dispatch({ \r\n            type: 'DELETE_PUBLICATION'\r\n            , payload: research_id \r\n        });\r\n\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getUtilization = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchUtilization();\r\n\r\n        dispatch({\r\n            type: 'FETCH_UTILIZATION',\r\n            payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\nexport const createUtilizaition = (utilization) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createUtilization(utilization);\r\n        \r\n        dispatch({ \r\n            type: 'CREATE_UTILIZATION', \r\n            payload: data.results \r\n        });\r\n        \r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateUtilization = (utilization) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateUtilization(utilization);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_UTILIZATION'\r\n            , payload: data \r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const deleteUtilization = (research_id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteUtilization(research_id);\r\n\r\n        dispatch({ \r\n            type: 'DELETE_UTILIZATION'\r\n            , payload: research_id \r\n        });\r\n\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","import * as api from \"../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// action creators\r\nexport const getInnovation = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchInnovation();\r\n\r\n        dispatch({\r\n            type: \"FETCH_INNOVATION\",\r\n            payload: data.results,\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n};\r\n\r\nexport const createInnovation = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createInnovation(proposal);\r\n\r\n        dispatch({\r\n            type: \"CREATE_INNOVATION\",\r\n            payload: data.results,\r\n        });\r\n\r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log(\"Error: \", error);\r\n    }\r\n};\r\n\r\nexport const updateInnovation = (proposal) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateInnovation(proposal);\r\n\r\n        dispatch({\r\n            type: \"UPDATE_INNOVATION\",\r\n            payload: data,\r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log(\"Error: \", error);\r\n    }\r\n};\r\n\r\nexport const deleteInnovation = (innovation_id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteInnovation(innovation_id);\r\n\r\n        dispatch({\r\n            type: \"DELETE_INNOVATION\",\r\n            payload: innovation_id,\r\n        });\r\n\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log(\"Error: \", error);\r\n    }\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getProposal } from \"../../../../redux/actions/proposal_action\";\r\nimport { getProposalCompleted } from \"../../../../redux/actions/completed_action\";\r\nimport { getPresentation } from \"../../../../redux/actions/presentation_action\";\r\nimport { getPublication } from \"../../../../redux/actions/publication_action\";\r\nimport { getUtilization } from \"../../../../redux/actions/utilization_action\";\r\nimport { getInnovation } from \"../../../../redux/actions/innovation_action\";\r\n\r\nimport AccountContext from \"../../../../context/AccountContext\";\r\nimport moment from \"moment\";\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", //? research director\r\n    RH: \"rh\", //? research head\r\n    CD: \"cd\", //? campus director\r\n};\r\n\r\nconst Faculties = ({ currentUser }) => {\r\n    const proposal = useSelector((state) => state.proposal.proposals);\r\n    const completed = useSelector((state) => state.completed.completed);\r\n    const presentation = useSelector(\r\n        (state) => state.presentation.presentations\r\n    );\r\n    const publication = useSelector((state) => state.publication.publications);\r\n    const utilization = useSelector((state) => state.utilization.utilizations);\r\n    const innovation = useSelector((state) => state.innovation.innovations);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { userData } = useContext(AccountContext);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (userData.user !== undefined) {\r\n            const { first_name } = userData.user;\r\n            setFirstName(first_name);\r\n        }\r\n\r\n        dispatch(getProposal());\r\n        dispatch(getProposalCompleted());\r\n        dispatch(getPresentation());\r\n        dispatch(getPublication());\r\n        dispatch(getUtilization());\r\n        dispatch(getInnovation());\r\n    }, [dispatch, userData.user]);\r\n\r\n    const getGreetingTime = () => {\r\n        let greetings = null;\r\n        const currentHour = moment().format(\"HH\");\r\n\r\n        if (currentHour === 0 || currentHour < 12) greetings = \"Good morning\";\r\n        else if (currentHour < 18) greetings = \"Good afternoon\";\r\n        else greetings = \"Good evening\";\r\n\r\n        return greetings;\r\n    };\r\n\r\n    const getTotalProposal = () => {\r\n        let numOfProposal = proposal.filter((prop) => {\r\n            return (\r\n                prop.created_by.user_type === USER_TYPE.USR &&\r\n                prop.created_by.user_id === currentUser.id\r\n            );\r\n        });\r\n\r\n        return numOfProposal.length;\r\n    };\r\n\r\n    const getTotalCompleted = () => {\r\n        let numOfCompleted = completed.filter((prop) => {\r\n            return (\r\n                prop.created_by.user_type === USER_TYPE.USR &&\r\n                prop.created_by.user_id === currentUser.id &&\r\n                (prop.is_completed === \"N\" || prop.is_completed === \"Y\")\r\n            );\r\n        });\r\n\r\n        return numOfCompleted.length;\r\n    };\r\n\r\n    const getTotalPresented = () => {\r\n        let numOfPresented = presentation.filter((prop) => {\r\n            return (\r\n                prop.created_by.user_type === USER_TYPE.USR &&\r\n                prop.created_by.user_id === currentUser.id &&\r\n                (prop.is_completed === \"N\" || prop.is_completed === \"Y\")\r\n            );\r\n        });\r\n\r\n        return numOfPresented.length;\r\n    };\r\n\r\n    const getTotalPublished = () => {\r\n        let numOfPublished = publication.filter((prop) => {\r\n            return (\r\n                prop.created_by.user_type === USER_TYPE.USR &&\r\n                prop.created_by.user_id === currentUser.id &&\r\n                (prop.is_completed === \"N\" || prop.is_completed === \"Y\")\r\n            );\r\n        });\r\n\r\n        return numOfPublished.length;\r\n    };\r\n\r\n    const getTotalUtilized = () => {\r\n        let numOfUtilized = utilization.filter((prop) => {\r\n            return (\r\n                prop.created_by.user_type === USER_TYPE.USR &&\r\n                prop.created_by.user_id === currentUser.id &&\r\n                (prop.is_completed === \"N\" || prop.is_completed === \"Y\")\r\n            );\r\n        });\r\n\r\n        return numOfUtilized.length;\r\n    };\r\n\r\n    const getTotalInnovated = () => {\r\n        let numOfInnovated = innovation.filter((prop) => {\r\n            return (\r\n                prop.created_by.user_type === USER_TYPE.USR &&\r\n                prop.created_by.user_id === currentUser.id &&\r\n                (prop.is_completed === \"N\" || prop.is_completed === \"Y\")\r\n            );\r\n        });\r\n\r\n        return numOfInnovated.length;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            {getGreetingTime()} {firstName}!\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"index.html\">Dashboard</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"col-5 align-self-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"customize-input float-right\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Overall</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ getColleges() }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* This is where the content will be displayed. */}\r\n            <div className=\"container-fluid\">\r\n                <div className=\"card-group\">\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-primary text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalProposal()}\r\n                                        </h2>\r\n                                        {/* <span className=\"badge bg-ino font-12 text-dark font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    </div>\r\n                                    <h6>Proposals</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-edit-3\"\r\n                                        >\r\n                                            <path d=\"M12 20h9\"></path>\r\n                                            <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-cyan text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalCompleted()}\r\n                                        </h2>\r\n                                        {/* <span className=\"badge bg-primary font-12 text-white font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    </div>\r\n                                    <h6>Completed</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-check-circle\"\r\n                                        >\r\n                                            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                                            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-success text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalPresented()}\r\n                                        </h2>\r\n                                        {/* <span className=\"badge bg-primary font-12 text-white font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    </div>\r\n                                    <h6>Presentations</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-pie-chart\"\r\n                                        >\r\n                                            <path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path>\r\n                                            <path d=\"M22 12A10 10 0 0 0 12 2v10z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-danger text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalPublished()}\r\n                                        </h2>\r\n                                        {/* <span className=\"badge bg-primary font-12 text-white font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    </div>\r\n                                    <h6>Publications</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-book-open\"\r\n                                        >\r\n                                            <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\r\n                                            <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row-fluid\">\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card border-right\">\r\n                            <div className=\"card-body bg-danger text-white\">\r\n                                <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                    <div>\r\n                                        <div className=\"d-inline-flex align-items-center\">\r\n                                            <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                                {getTotalUtilized()}\r\n                                            </h2>\r\n                                            {/* <span className=\"badge bg-primary font-12 text-white font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                        </div>\r\n                                        <h6>Utilizations</h6>\r\n                                    </div>\r\n                                    <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                        <span class=\"opacity-10 text-white\">\r\n                                            <svg\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                width=\"30\"\r\n                                                height=\"30\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                fill=\"none\"\r\n                                                stroke=\"currentColor\"\r\n                                                stroke-width=\"2\"\r\n                                                stroke-linecap=\"round\"\r\n                                                stroke-linejoin=\"round\"\r\n                                                class=\"feather feather-file-text\"\r\n                                            >\r\n                                                <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                                                <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                                                <line\r\n                                                    x1=\"16\"\r\n                                                    y1=\"13\"\r\n                                                    x2=\"8\"\r\n                                                    y2=\"13\"\r\n                                                ></line>\r\n                                                <line\r\n                                                    x1=\"16\"\r\n                                                    y1=\"17\"\r\n                                                    x2=\"8\"\r\n                                                    y2=\"17\"\r\n                                                ></line>\r\n                                                <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card border-right\">\r\n                            <div className=\"card-body bg-success text-white\">\r\n                                <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                    <div>\r\n                                        <div className=\"d-inline-flex align-items-center\">\r\n                                            <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                                {getTotalInnovated()}\r\n                                            </h2>\r\n                                            {/* <span className=\"badge bg-primary font-12 text-white font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                        </div>\r\n                                        <h6>Innovations</h6>\r\n                                    </div>\r\n                                    <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                        <span class=\"opacity-10 text-white\">\r\n                                            <svg\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                width=\"30\"\r\n                                                height=\"30\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                fill=\"none\"\r\n                                                stroke=\"currentColor\"\r\n                                                stroke-width=\"2\"\r\n                                                stroke-linecap=\"round\"\r\n                                                stroke-linejoin=\"round\"\r\n                                                class=\"feather feather-monitor\"\r\n                                            >\r\n                                                <rect\r\n                                                    x=\"2\"\r\n                                                    y=\"3\"\r\n                                                    width=\"20\"\r\n                                                    height=\"14\"\r\n                                                    rx=\"2\"\r\n                                                    ry=\"2\"\r\n                                                ></rect>\r\n                                                <line\r\n                                                    x1=\"8\"\r\n                                                    y1=\"21\"\r\n                                                    x2=\"16\"\r\n                                                    y2=\"21\"\r\n                                                ></line>\r\n                                                <line\r\n                                                    x1=\"12\"\r\n                                                    y1=\"17\"\r\n                                                    x2=\"12\"\r\n                                                    y2=\"21\"\r\n                                                ></line>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {/* <div className=\"card-body\"> */}\r\n                            {/* <div className=\"d-flex d-lg-flex d-md-block align-items-center\"> */}\r\n                            {/* <div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"text-dark mb-1 font-weight-medium\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getTotalInnovated()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"badge bg-primary font-12 text-white font-weight-medium badge-pill ml-2 d-lg-block d-md-none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+18.33%\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>Innovations</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div></div> */}\r\n                            {/* </div> */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                        <div className=\"card\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Faculties;\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getDepartment = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchDepartment();\r\n\r\n        dispatch({ type: 'FETCH_DEPT', payload: data.results });\r\n    } catch (error) {\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const createDepartment = (department) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createDepartment(department);\r\n        \r\n        dispatch({ type: 'CREATE_DEPT', payload: data.results });\r\n        toast.success(\"Create successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateDepartment = (department) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateDepartment(department);\r\n        \r\n        dispatch({ type: 'UPDATE_DEPT', payload: data });\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\n\r\nexport const deleteDepartment = (department_id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteDepartment(department_id);\r\n\r\n        dispatch({ type: 'DELETE_DEPT', payload: department_id });\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// action creators\r\nexport const getAccount = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchAccount();\r\n\r\n        if(data.success) {\r\n            dispatch({ \r\n                type: 'FETCH_ACCOUNT', \r\n                payload: data.results \r\n            });\r\n        } else {\r\n            console.log(\"Error:\", data.message);\r\n        }\r\n    } catch (error) {\r\n        console.log('Error: ', error.message);\r\n    }\r\n}\r\n\r\nexport const createAccount = (account_data) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createAccount(account_data);\r\n\r\n        if(data.success) {\r\n            dispatch({ \r\n                type: 'CREATE_ACCOUNT', \r\n                payload: data.results \r\n            });\r\n\r\n            toast.success(data.message);\r\n        } else {\r\n            toast.error(data.message);\r\n        }\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateAccount = (account_details) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateAccount(account_details);\r\n        \r\n        dispatch({ type: 'UPDATE_ACCOUNT', payload: data });\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\n\r\nexport const deleteAccount = (department_id) => async (dispatch) => {\r\n    // try {\r\n    //     await api.deleteDepartment(department_id);\r\n\r\n    //     dispatch({ type: 'DELETE_DEPT', payload: department_id });\r\n    //     toast.success(\"Deleted successfully\");\r\n    // } catch (error) {\r\n    //     toast.error(\"Unable to delete this data.\");\r\n    //     console.log('Error: ', error);\r\n    // }\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getProposal } from \"../../../../redux/actions/proposal_action\";\r\nimport { getProposalCompleted } from \"../../../../redux/actions/completed_action\";\r\nimport { getPresentation } from \"../../../../redux/actions/presentation_action\";\r\nimport { getPublication } from \"../../../../redux/actions/publication_action\";\r\nimport { getUtilization } from \"../../../../redux/actions/utilization_action\";\r\nimport { getInnovation } from \"../../../../redux/actions/innovation_action\";\r\n\r\nimport { getDepartment } from \"../../../../redux/actions/department_action\";\r\nimport { getAccount } from \"../../../../redux/actions/account_action\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport AccountContext from \"../../../../context/AccountContext\";\r\nimport moment from \"moment\";\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", // research director\r\n    RH: \"rh\", // research head\r\n    CD: \"cd\", // campus director\r\n};\r\n\r\nconst Administrator = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate faculty data\r\n    const college = useSelector((state) => state.department.departments);\r\n    const proposal = useSelector((state) => state.proposal.proposals);\r\n    const completed = useSelector((state) => state.completed.completed);\r\n    const presentation = useSelector(\r\n        (state) => state.presentation.presentations\r\n    );\r\n    const publication = useSelector((state) => state.publication.publications);\r\n    const utilization = useSelector((state) => state.utilization.utilizations);\r\n    const innovation = useSelector((state) => state.innovation.innovations);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { userData } = useContext(AccountContext);\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [colleges, setColleges] = useState(\"\");\r\n    const [totalProposal, setTotalProposal] = useState(0);\r\n    const [totalCompleted, setTotalCompleted] = useState(0);\r\n    const [totalPresentation, setTotalPresentation] = useState(0);\r\n    const [totalPublication, setTotalPublication] = useState(0);\r\n    const [totalUtilization, setTotalUtilization] = useState(0);\r\n    const [totalInnovation, setTotalInnovation] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (typeof userData !== undefined || userData !== null) {\r\n            const { first_name } = userData.user;\r\n            setFirstName(first_name);\r\n\r\n            dispatch(getAccount());\r\n            dispatch(getDepartment());\r\n            dispatch(getProposal());\r\n            dispatch(getProposalCompleted());\r\n            dispatch(getPresentation());\r\n            dispatch(getPublication());\r\n            dispatch(getUtilization());\r\n            dispatch(getInnovation());\r\n        }\r\n    }, [dispatch, userData]);\r\n\r\n    const getGreetingTime = () => {\r\n        let greetings = null;\r\n        const currentHour = moment().format(\"HH\");\r\n\r\n        if (currentHour === 0 || currentHour < 12) greetings = \"Good morning\";\r\n        else if (currentHour < 18) greetings = \"Good afternoon\";\r\n        else greetings = \"Good evening\";\r\n\r\n        return greetings;\r\n    };\r\n\r\n    const getTotalFacultyByCollege = () => {\r\n        if (colleges !== \"\") {\r\n            return faculty.filter((prop) => {\r\n                return prop.college === colleges;\r\n            }).length;\r\n        } else {\r\n            return faculty.length;\r\n        }\r\n    };\r\n\r\n    // return number of proposals based on colleges\r\n    const getTotalProposal = () => {\r\n        if (colleges !== \"\") {\r\n            return proposal.filter((prop) => {\r\n                return prop.created_by.college === colleges;\r\n            }).length;\r\n        } else {\r\n            return proposal.length;\r\n        }\r\n    };\r\n\r\n    const getTotalCompleted = () => {\r\n        if (colleges !== \"\") {\r\n            return completed.filter((prop) => {\r\n                return (\r\n                    prop.created_by.college === colleges &&\r\n                    prop.is_completed !== \"\"\r\n                );\r\n            }).length;\r\n        } else {\r\n            return completed.filter((prop) => {\r\n                return prop.is_completed === \"N\" || prop.is_completed === \"Y\";\r\n            }).length;\r\n        }\r\n    };\r\n\r\n    const getTotalPresented = () => {\r\n        if (colleges !== \"\") {\r\n            return presentation.filter((prop) => {\r\n                return prop.created_by.college === colleges;\r\n            }).length;\r\n        } else {\r\n            return presentation.length;\r\n        }\r\n    };\r\n\r\n    const getTotalPublished = () => {\r\n        if (colleges !== \"\") {\r\n            return publication.filter((prop) => {\r\n                return prop.created_by.college === colleges;\r\n            }).length;\r\n        } else {\r\n            return publication.length;\r\n        }\r\n    };\r\n\r\n    const getTotalUtilized = () => {\r\n        if (colleges !== \"\") {\r\n            return utilization.filter((prop) => {\r\n                return prop.created_by.college === colleges;\r\n            }).length;\r\n        } else {\r\n            return utilization.length;\r\n        }\r\n    };\r\n\r\n    const getTotalInnovated = () => {\r\n        if (colleges !== \"\") {\r\n            return innovation.filter((prop) => {\r\n                return prop.created_by.college === colleges;\r\n            }).length;\r\n        } else {\r\n            return innovation.length;\r\n        }\r\n    };\r\n\r\n    const getColleges = () => {\r\n        const colleges = [];\r\n\r\n        for (let i = 0; i < college.length; i++) {\r\n            colleges.push(\r\n                <option key={college[i]._id} value={college[i].department_code}>\r\n                    {college[i].department_code}\r\n                </option>\r\n            );\r\n        }\r\n\r\n        return colleges;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            {getGreetingTime()} {firstName}!\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"index.html\">Dashboard</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select\r\n                                id=\"colleges\"\r\n                                name=\"colleges\"\r\n                                value={colleges}\r\n                                onChange={(e) => {\r\n                                    setColleges(e.target.value);\r\n                                }}\r\n                                className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\"\r\n                            >\r\n                                <option value=\"\">Overall</option>\r\n                                {getColleges()}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* This is where the content will be displayed. */}\r\n            <div className=\"container-fluid\">\r\n                <div className=\"card-group\">\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-primary text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalProposal()}\r\n                                        </h2>\r\n                                    </div>\r\n                                    <h6>Proposals</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-edit-3\"\r\n                                        >\r\n                                            <path d=\"M12 20h9\"></path>\r\n                                            <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-cyan text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalCompleted()}\r\n                                        </h2>\r\n                                    </div>\r\n                                    <h6>Completed</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-check-circle\"\r\n                                        >\r\n                                            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                                            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-success text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalPresented()}\r\n                                        </h2>\r\n                                    </div>\r\n                                    <h6>Presentations</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-pie-chart\"\r\n                                        >\r\n                                            <path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path>\r\n                                            <path d=\"M22 12A10 10 0 0 0 12 2v10z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border-right\">\r\n                        <div className=\"card-body bg-danger text-white\">\r\n                            <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                <div>\r\n                                    <div className=\"d-inline-flex align-items-center\">\r\n                                        <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                            {getTotalPublished()}\r\n                                        </h2>\r\n                                    </div>\r\n                                    <h6>Publications</h6>\r\n                                </div>\r\n                                <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                    <span class=\"opacity-10 text-white\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"30\"\r\n                                            height=\"30\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"feather feather-book-open\"\r\n                                        >\r\n                                            <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\r\n                                            <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row-fluid\">\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card border-right\">\r\n                            <div className=\"card-body bg-danger text-white\">\r\n                                <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                    <div>\r\n                                        <div className=\"d-inline-flex align-items-center\">\r\n                                            <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                                {getTotalUtilized()}\r\n                                            </h2>\r\n                                        </div>\r\n                                        <h6>Utilizations</h6>\r\n                                    </div>\r\n                                    <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                        <span class=\"opacity-10 text-white\">\r\n                                            <svg\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                width=\"30\"\r\n                                                height=\"30\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                fill=\"none\"\r\n                                                stroke=\"currentColor\"\r\n                                                stroke-width=\"2\"\r\n                                                stroke-linecap=\"round\"\r\n                                                stroke-linejoin=\"round\"\r\n                                                class=\"feather feather-file-text\"\r\n                                            >\r\n                                                <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                                                <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                                                <line\r\n                                                    x1=\"16\"\r\n                                                    y1=\"13\"\r\n                                                    x2=\"8\"\r\n                                                    y2=\"13\"\r\n                                                ></line>\r\n                                                <line\r\n                                                    x1=\"16\"\r\n                                                    y1=\"17\"\r\n                                                    x2=\"8\"\r\n                                                    y2=\"17\"\r\n                                                ></line>\r\n                                                <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card border-right\">\r\n                            <div className=\"card-body bg-success text-white\">\r\n                                <div className=\"d-flex d-lg-flex d-md-block align-items-center\">\r\n                                    <div>\r\n                                        <div className=\"d-inline-flex align-items-center\">\r\n                                            <h2 className=\"text-white mb-1 font-weight-medium\">\r\n                                                {getTotalInnovated()}\r\n                                            </h2>\r\n                                        </div>\r\n                                        <h6>Innovations</h6>\r\n                                    </div>\r\n                                    <div class=\"ml-auto mt-md-3 mt-lg-0\">\r\n                                        <span class=\"opacity-10 text-white\">\r\n                                            <svg\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                width=\"30\"\r\n                                                height=\"30\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                fill=\"none\"\r\n                                                stroke=\"currentColor\"\r\n                                                stroke-width=\"2\"\r\n                                                stroke-linecap=\"round\"\r\n                                                stroke-linejoin=\"round\"\r\n                                                class=\"feather feather-monitor\"\r\n                                            >\r\n                                                <rect\r\n                                                    x=\"2\"\r\n                                                    y=\"3\"\r\n                                                    width=\"20\"\r\n                                                    height=\"14\"\r\n                                                    rx=\"2\"\r\n                                                    ry=\"2\"\r\n                                                ></rect>\r\n                                                <line\r\n                                                    x1=\"8\"\r\n                                                    y1=\"21\"\r\n                                                    x2=\"16\"\r\n                                                    y2=\"21\"\r\n                                                ></line>\r\n                                                <line\r\n                                                    x1=\"12\"\r\n                                                    y1=\"17\"\r\n                                                    x2=\"12\"\r\n                                                    y2=\"21\"\r\n                                                ></line>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\"></div>\r\n                        <div className=\"card\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"faculties-percentage\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"card-title text-center\">\r\n                                        Faculties Percentage\r\n                                    </div>\r\n                                    <Doughnut\r\n                                        width={500}\r\n                                        height={500}\r\n                                        data={{\r\n                                            labels: [\r\n                                                \"Proposal\",\r\n                                                \"Completed\",\r\n                                                \"Presentation\",\r\n                                                \"Publication\",\r\n                                                \"Utilization\",\r\n                                                \"Innovation\",\r\n                                            ],\r\n                                            datasets: [\r\n                                                {\r\n                                                    label: \"Percentage of Faculties\",\r\n                                                    data: [\r\n                                                        Math.floor(\r\n                                                            (getTotalProposal() /\r\n                                                                getTotalFacultyByCollege()) *\r\n                                                                100\r\n                                                        ),\r\n                                                        Math.floor(\r\n                                                            (getTotalCompleted() /\r\n                                                                getTotalFacultyByCollege()) *\r\n                                                                100\r\n                                                        ),\r\n                                                        Math.floor(\r\n                                                            (getTotalPresented() /\r\n                                                                getTotalFacultyByCollege()) *\r\n                                                                100\r\n                                                        ),\r\n                                                        Math.floor(\r\n                                                            (getTotalPublished() /\r\n                                                                getTotalFacultyByCollege()) *\r\n                                                                100\r\n                                                        ),\r\n                                                        Math.floor(\r\n                                                            (getTotalUtilized() /\r\n                                                                getTotalFacultyByCollege()) *\r\n                                                                100\r\n                                                        ),\r\n                                                        Math.floor(\r\n                                                            (getTotalInnovated() /\r\n                                                                getTotalFacultyByCollege()) *\r\n                                                                100\r\n                                                        ),\r\n                                                    ],\r\n                                                    backgroundColor: [\r\n                                                        \"rgb(255, 99, 132)\",\r\n                                                        \"rgb(54, 162, 235)\",\r\n                                                        \"rgb(255, 205, 86)\",\r\n                                                        \"rgb(75, 192, 192)\",\r\n                                                        \"rgb(255, 159, 64)\",\r\n                                                        \"rgb(95, 118, 232)\",\r\n                                                    ],\r\n                                                    hoverOffset: 5,\r\n                                                },\r\n                                            ],\r\n                                        }}\r\n                                    />\r\n                                    <div className=\"mt-3\">&nbsp;</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Administrator;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n    getProposal,\r\n    createProposal,\r\n    updateProposal,\r\n    updateProposalRemarks,\r\n    deleteProposal,\r\n} from \"../../../redux/actions/proposal_action\";\r\n\r\nimport { getAccount } from \"../../../redux/actions/account_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport {\r\n    MdDelete,\r\n    MdKeyboardTab,\r\n    MdMoreVert,\r\n    MdThumbUp,\r\n    MdThumbDown,\r\n} from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport moment from \"moment\";\r\n\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst REMARKS = {\r\n    PENDING: \"pending\",\r\n    SUBMITTED: \"submitted\",\r\n    EVALUATED: \"evaluated\",\r\n    FOR_APPROVAL: \"for approval\",\r\n    APPROVED: \"approved\",\r\n    DISAPPROVED: \"disapproved\",\r\n};\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\",\r\n    RH: \"rh\",\r\n    CD: \"cd\",\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    title_of_research: yup.string().required(\"Title of research field is required\"),\r\n    type_of_research: yup.string().required(\"Type of research field is required\"),\r\n    source_of_funding: yup.string().required(\"Source of funding field is required\"),\r\n    total_funds: yup.string().required(\"Total funds field is required.\"),\r\n    // name_of_agency: yup.string().required(\"Name of agency field is required\"),\r\n    // date_of_completion: yup.string().required(\"Date of completion field is required\"),\r\n});\r\n\r\nconst Proposal = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate faculty data\r\n    const proposal = useSelector((state) => state.proposal.proposals); // This is to populate proposal data\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        formState: { errors },\r\n        watch,\r\n    } = useForm({\r\n        resolver: yupResolver(formSchema),\r\n    });\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalPrompt, setModalPrompt] = useState(false);\r\n    const [modalType, setModaType] = useState(null);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [typeOfResearch, setTypeOfResearch] = useState(\"\");\r\n    const [author, setAuthor] = useState([]);\r\n    const [sourceOfFunding, setSourceOfFunding] = useState(\"\");\r\n    const [totalFunds, setTotalFunds] = useState(\"\");\r\n    const [nameOfAgency, setNameOfAgency] = useState(\"\");\r\n    const [dateOfCompletion, setDateOfCompletion] = useState(new Date());\r\n    const [remarks, setRemarks] = useState(\"pending\");\r\n    const [status, setStatus] = useState(\"proposal\");\r\n    const [createdBy, setCreatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // datatables configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            width: proposal.remarks === REMARKS.PENDING ? 80 : null,\r\n            cell: (proposal) => {\r\n                // Only the Research Head has the access of all the buttons\r\n                if (proposal.remarks === REMARKS.PENDING && currentUser.user_type === USER_TYPE.USR) {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className={\r\n                                    proposal.remarks === REMARKS.PENDING\r\n                                        ? \"btn btn-secondary\"\r\n                                        : \"hidden\"\r\n                                }\r\n                                onClick={() => showEditForm(proposal)}\r\n                            >\r\n                                <span><i className=\"fas fa-pencil-alt\"></i> Edit</span>\r\n                            </Button>\r\n                            &nbsp;&nbsp;\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className={\r\n                                    proposal.remarks === REMARKS.PENDING\r\n                                        ? \"btn btn-danger\"\r\n                                        : \"hidden\"\r\n                                }\r\n                                onClick={() =>\r\n                                    showModalPrompt(\r\n                                        proposal,\r\n                                        null,\r\n                                        MODAL_TYPE.DEL\r\n                                    )\r\n                                }\r\n                            >\r\n                                <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            width: 400,\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"type_of_research\",\r\n            text: \"Type of Research\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (proposal) => {\r\n                const { type_of_research } = proposal;\r\n\r\n                return (\r\n                    <div>\r\n                        {type_of_research.charAt(0).toUpperCase() +\r\n                            type_of_research.substring(1)}\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"author_list\",\r\n            text: \"Author(s)\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"source_of_funding\",\r\n            text: \"Funding\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            isSearchable: true,\r\n            cell: (proposal) => {\r\n                const { source_of_funding } = proposal;\r\n\r\n                return (\r\n                    <div>\r\n                        {source_of_funding.charAt(0).toUpperCase() +\r\n                            source_of_funding.substring(1)}\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"total_funds\",\r\n            text: \"Total Funds\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            cell: (proposal) => {\r\n                // Only the Research Head has the access of all the buttons\r\n                if (\r\n                    currentUser.user_type === USER_TYPE.RH ||\r\n                    currentUser.user_type === USER_TYPE.ADMIN\r\n                ) {\r\n                    if (proposal.remarks === REMARKS.PENDING) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    className=\"btn btn-primary btn-sm\"\r\n                                    onClick={() =>\r\n                                        showModalPrompt(\r\n                                            proposal,\r\n                                            REMARKS.SUBMITTED,\r\n                                            MODAL_TYPE.UPD\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Submitted\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        );\r\n                    } else if (proposal.remarks === REMARKS.SUBMITTED) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    className=\"btn btn-primary btn-sm\"\r\n                                    onClick={() =>\r\n                                        showModalPrompt(\r\n                                            proposal,\r\n                                            REMARKS.EVALUATED,\r\n                                            MODAL_TYPE.UPD\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Evaluated\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        );\r\n                    } else if (proposal.remarks === REMARKS.EVALUATED) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"dropdown\">\r\n                                    <Link\r\n                                        to=\"#\"\r\n                                        className=\"text-secondary dropdown-toggle\"\r\n                                        type=\"button\"\r\n                                        id=\"dropDownApprovedDisapproved\"\r\n                                        data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\"\r\n                                        aria-expanded=\"false\"\r\n                                    >\r\n                                        <MdMoreVert size={20} />\r\n                                    </Link>\r\n                                    <div\r\n                                        className=\"dropdown-menu\"\r\n                                        aria-labelledby=\"dropdownMenuButton\"\r\n                                    >\r\n                                        <Link\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"#\"\r\n                                            onClick={() =>\r\n                                                showModalPrompt(\r\n                                                    proposal,\r\n                                                    REMARKS.FOR_APPROVAL,\r\n                                                    MODAL_TYPE.UPD\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <MdThumbUp />\r\n                                            &nbsp;&nbsp;For Approval\r\n                                        </Link>\r\n                                        <Link\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"#\"\r\n                                            onClick={() =>\r\n                                                showModalPrompt(\r\n                                                    proposal,\r\n                                                    REMARKS.DISAPPROVED,\r\n                                                    MODAL_TYPE.UPD\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <MdThumbDown />\r\n                                            &nbsp;&nbsp;Disapproved\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    } else if (proposal.remarks === REMARKS.FOR_APPROVAL) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    className=\"btn btn-primary btn-sm\"\r\n                                    onClick={() =>\r\n                                        showModalPrompt(\r\n                                            proposal,\r\n                                            REMARKS.APPROVED,\r\n                                            MODAL_TYPE.UPD\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Approved\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        );\r\n                    } else if (proposal.remarks === REMARKS.APPROVED) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"badge badge-success\">\r\n                                    {proposal.remarks.toUpperCase()}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        // {\r\n        //     key: \"remarks\",\r\n        //     text: \"\",\r\n        //     className: \"\",\r\n        //     align: \"left\",\r\n        //     cell: (proposal) => {\r\n        //         if(currentUser.user_type !== \"rh\" || currentUser.user_type !== \"admin\") {\r\n        //             return (\r\n        //                 <div className=\"badge badge-primary\">{ proposal.remarks.toUpperCase() }</div>\r\n        //             )\r\n        //         }\r\n        //     }\r\n        // }\r\n        \r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccount());\r\n        dispatch(getProposal());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setTypeOfResearch(\"\");\r\n        setAuthor(\"\");\r\n        setSourceOfFunding(\"\");\r\n        setNameOfAgency(\"\");\r\n        setDateOfCompletion(\"\");\r\n        // setRemarks(\"\");\r\n    };\r\n\r\n    const toggleModal = (modal_type) => {\r\n        if (modal_type === MODAL_TYPE.CRT) {\r\n            setModal(!modal);\r\n            setModaType(MODAL_TYPE.CRT);\r\n            clearForm();\r\n        } else if (modal_type === MODAL_TYPE.UPD) {\r\n            setModalPrompt(!modalPrompt);\r\n            setModaType(MODAL_TYPE.UPD);\r\n        } else {\r\n            setModalPrompt(!modalPrompt); \r\n            setModaType(MODAL_TYPE.DEL);\r\n        }\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n    };\r\n\r\n    const printPDF = () => {\r\n        const pdf = new jsPDF();\r\n\r\n        pdf.text(\"Sample pdf printing\", 10, 10);\r\n\r\n        pdf.autoTable({ \r\n            html: \"#tbl-proposal\" \r\n        })\r\n\r\n        pdf.save(\"sample.pdf\");\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        const {\r\n            _id,\r\n            title_of_research,\r\n            type_of_research,\r\n            author,\r\n            source_of_funding,\r\n            name_of_agency,\r\n            total_funds,\r\n            // date_of_completion,\r\n            remarks,\r\n        } = data;\r\n\r\n        // const date_completed = moment(date_of_completion).format(\"MM/DD/YYYY\");\r\n\r\n        toggleModal(MODAL_TYPE.CRT);\r\n\r\n        setResearchId(_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setTypeOfResearch(type_of_research);\r\n        setAuthor(author);\r\n        setSourceOfFunding(source_of_funding);\r\n        setNameOfAgency(name_of_agency);\r\n        // setDateOfCompletion(date_completed);\r\n        setTotalFunds(total_funds);\r\n        setRemarks(remarks);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        const authors = [];\r\n        const dateFormat = moment(dateOfCompletion).format(\"L\");\r\n        author.map((list) => authors.push(list.label));\r\n\r\n        const details = {\r\n            research_id: data.research_id,\r\n            title_of_research: data.title_of_research,\r\n            type_of_research: data.type_of_research,\r\n            author,\r\n            author_list: authors.join(\", \"),\r\n            source_of_funding: data.source_of_funding,\r\n            name_of_agency: data.name_of_agency,\r\n            total_funds: data.total_funds,\r\n            // date_of_completion: dateFormat,\r\n            remarks: remarks,\r\n            status: status,\r\n            created_by: createdBy,\r\n        };\r\n\r\n        if (!data.research_id) {\r\n            dispatch(createProposal(details));\r\n        } else {\r\n            dispatch(updateProposal(details));\r\n        }\r\n\r\n        toggleModal(MODAL_TYPE.CRT);\r\n    };\r\n\r\n    const showModalPrompt = (proposal, remarks, modal_type) => {\r\n        // UPDATE status modal will appear.\r\n        if (modal_type === MODAL_TYPE.UPD) {\r\n            setResearchId(proposal._id);\r\n            setRemarks(remarks);\r\n            toggleModal(MODAL_TYPE.UPD);\r\n        }\r\n\r\n        // DELETE modal will appear\r\n        if (modal_type === MODAL_TYPE.DEL) {\r\n            setResearchId(proposal._id);\r\n            toggleModal(MODAL_TYPE.DEL);\r\n        }\r\n    };\r\n\r\n    const onSubmitUpdateStatusOrDelete = (modal_type) => {\r\n        // IF MODAL is delete\r\n        if (modal_type === MODAL_TYPE.DEL) {\r\n            dispatch(deleteProposal(researchId));\r\n        } else if (modal_type === MODAL_TYPE.UPD) {\r\n            dispatch(\r\n                updateProposalRemarks({ research_id: researchId, remarks })\r\n            );\r\n        }\r\n\r\n        toggleModal(\r\n            modal_type === MODAL_TYPE.DEL ? MODAL_TYPE.DEL : MODAL_TYPE.UPD\r\n        );\r\n    };\r\n\r\n    const getUsersProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n        const user = [];\r\n\r\n        for (let i = 0; i < proposal.length; i++) {\r\n            // Destructure some of the details created by.\r\n            let { user_id } = proposal[i].created_by;\r\n\r\n            // Displays ONLY the records of the current logged in user.\r\n            if (user_id === currentUserId) {\r\n                user.push({\r\n                    _id: proposal[i]._id,\r\n                    title_of_research: proposal[i].title_of_research,\r\n                    type_of_research: proposal[i].type_of_research,\r\n                    author: proposal[i].author,\r\n                    author_list: proposal[i].author_list,\r\n                    source_of_funding: proposal[i].source_of_funding,\r\n                    date_of_completion: proposal[i].date_of_completion,\r\n                    status: proposal[i].status,\r\n                    remarks: proposal[i].remarks,\r\n                });\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    const getPendingProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ALL the records.\r\n                    if (proposal[i].remarks === REMARKS.PENDING) {\r\n                        pending.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n\r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if (\r\n                        proposal[i].remarks === REMARKS.PENDING &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        pending.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    };\r\n\r\n    console.log(\"Pending proposal\", getPendingProposal());\r\n\r\n    const getSubmittedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const submitted = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if (proposal[i].remarks === REMARKS.SUBMITTED) {\r\n                        submitted.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                            created_by_id: proposal[i].created_by.user_id,\r\n                            created_by_name: proposal[i].created_by.full_name,\r\n                            created_by_type: proposal[i].created_by.user_type,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return submitted;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const submitted = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n\r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if (\r\n                        proposal[i].remarks === REMARKS.SUBMITTED &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        submitted.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return submitted;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getEvaluatedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const evaluated = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if (proposal[i].remarks === REMARKS.EVALUATED) {\r\n                        evaluated.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                            created_by_id: proposal[i].created_by.user_id,\r\n                            created_by_name: proposal[i].created_by.full_name,\r\n                            created_by_type: proposal[i].created_by.user_type,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return evaluated;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const evaluated = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n\r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if (\r\n                        proposal[i].remarks === REMARKS.EVALUATED &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        evaluated.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return evaluated;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getForApprovalProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const for_approval = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if (proposal[i].remarks === REMARKS.FOR_APPROVAL) {\r\n                        for_approval.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                            created_by_id: proposal[i].created_by.user_id,\r\n                            created_by_name: proposal[i].created_by.full_name,\r\n                            created_by_type: proposal[i].created_by.user_type,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return for_approval;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const for_approval = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n\r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if (\r\n                        proposal[i].remarks === REMARKS.FOR_APPROVAL &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        for_approval.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return for_approval;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getApprovedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const approved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if (proposal[i].remarks === REMARKS.APPROVED) {\r\n                        approved.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                            created_by_id: proposal[i].created_by.user_id,\r\n                            created_by_name: proposal[i].created_by.full_name,\r\n                            created_by_type: proposal[i].created_by.user_type,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return approved;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const approved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n\r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if (\r\n                        proposal[i].remarks === REMARKS.APPROVED &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        approved.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return approved;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getDisApprovedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const disapproved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if (proposal[i].remarks === REMARKS.DISAPPROVED) {\r\n                        disapproved.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                            created_by_id: proposal[i].created_by.user_id,\r\n                            created_by_name: proposal[i].created_by.full_name,\r\n                            created_by_type: proposal[i].created_by.user_type,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return disapproved;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const disapproved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n\r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if (\r\n                        proposal[i].remarks === REMARKS.DISAPPROVED &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        disapproved.push({\r\n                            _id: proposal[i]._id,\r\n                            title_of_research: proposal[i].title_of_research,\r\n                            type_of_research: proposal[i].type_of_research,\r\n                            author: proposal[i].author,\r\n                            author_list: proposal[i].author_list,\r\n                            source_of_funding: proposal[i].source_of_funding,\r\n                            total_funds: proposal[i].total_funds,\r\n                            // date_of_completion: proposal[i].date_of_completion,\r\n                            status: proposal[i].status,\r\n                            remarks: proposal[i].remarks,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return disapproved;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getAuthorOptions = () => {\r\n        const authors = [];\r\n\r\n        for (let i = 0; i < faculty.length; i++) {\r\n            authors.push({\r\n                value: faculty[i]._id,\r\n                label: faculty[i].full_name,\r\n            });\r\n        }\r\n\r\n        return authors;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal\r\n                isOpen={modalPrompt}\r\n                toggle={() => toggleModal(MODAL_TYPE.DEL)}\r\n                className=\"modal-dialogue\"\r\n            >\r\n                <ModalHeader\r\n                    className={\r\n                        modalType === MODAL_TYPE.DEL\r\n                            ? \"bg-danger text-light\"\r\n                            : \"bg-primary text-light\"\r\n                    }\r\n                    toggle={() => toggleModal(MODAL_TYPE.DEL)}\r\n                >\r\n                    {modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update Status\"}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Label>\r\n                        {modalType === MODAL_TYPE.DEL\r\n                            ? \"Are you sure do you want to delete this data?\"\r\n                            : \"Are you sure you want to update the status?\"}\r\n                    </Label>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color={\r\n                            modalType === MODAL_TYPE.DEL ? \"danger\" : \"primary\"\r\n                        }\r\n                        onClick={() =>\r\n                            onSubmitUpdateStatusOrDelete(\r\n                                modalType === MODAL_TYPE.DEL\r\n                                    ? MODAL_TYPE.DEL\r\n                                    : MODAL_TYPE.UPD\r\n                            )\r\n                        }\r\n                    >\r\n                        {modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update\"}\r\n                    </Button>\r\n                    <Button\r\n                        color=\"light\"\r\n                        onClick={() => toggleModal(MODAL_TYPE.DEL)}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={() => toggleModal(MODAL_TYPE.CRT)}\r\n                size=\"lg\"\r\n                className=\"modal-dialogue\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={() => toggleModal(MODAL_TYPE.CRT)}\r\n                >\r\n                    {!researchId ? \"Add Proposal\" : \"Update Proposal\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    defaultValue={researchId}\r\n                                    {...register(\"research_id\")}\r\n                                />\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"status\"\r\n                                    id=\"status\"\r\n                                    defaultValue={status}\r\n                                    {...register(\"status\")}\r\n                                />\r\n                                <Label for=\"\">\r\n                                    Title of Research{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    className={\r\n                                        errors.title_of_research\r\n                                            ? \"is-invalid form-control\"\r\n                                            : \"form-control\"\r\n                                    }\r\n                                    type=\"text\"\r\n                                    name=\"title_of_research\"\r\n                                    id=\"title_of_research\"\r\n                                    defaultValue={titleOfResearch}\r\n                                    {...register(\"title_of_research\")}\r\n                                />\r\n                                <small className=\"text-danger\">\r\n                                    {errors.title_of_research?.message}\r\n                                </small>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"\">\r\n                                    Type of Research{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <select\r\n                                    className={\r\n                                        errors.type_of_research\r\n                                            ? \"is-invalid form-control\"\r\n                                            : \"form-control\"\r\n                                    }\r\n                                    type=\"select\"\r\n                                    name=\"type_of_research\"\r\n                                    id=\"type_of_research\"\r\n                                    defaultValue={typeOfResearch}\r\n                                    {...register(\"type_of_research\")}\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    <option value=\"descriptive\">\r\n                                        Descriptive\r\n                                    </option>\r\n                                    <option value=\"developmental\">\r\n                                        Developmental\r\n                                    </option>\r\n                                    <option value=\"experimental\">\r\n                                        Experimental\r\n                                    </option>\r\n                                    <option value=\"modelling\">Modelling</option>\r\n                                    <option value=\"others\">Others</option>\r\n                                </select>\r\n                                <small className=\"text-danger\">\r\n                                    {errors.type_of_research?.message}\r\n                                </small>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"\">\r\n                                    Author(s){\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <Select\r\n                                    className=\"is-invalid\"\r\n                                    closeMenuOnSelect={false}\r\n                                    components={animatedComponents}\r\n                                    isMulti\r\n                                    options={getAuthorOptions()}\r\n                                    name=\"author\"\r\n                                    value={author}\r\n                                    onChange={setAuthor}\r\n                                    styles={{\r\n                                        borderRadius: \"0 !important\",\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">\r\n                                            Source of Funding{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={\r\n                                                errors.source_of_funding\r\n                                                    ? \"is-invalid form-control\"\r\n                                                    : \"form-control\"\r\n                                            }\r\n                                            type=\"select\"\r\n                                            name=\"source_of_funding\"\r\n                                            id=\"source_of_funding\"\r\n                                            defaultValue={sourceOfFunding}\r\n                                            {...register(\"source_of_funding\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"stf\">STF</option>\r\n                                            <option value=\"gaa\">GAA</option>\r\n                                            <option value=\"external\">\r\n                                                External\r\n                                            </option>\r\n                                            <option value=\"personal\">\r\n                                                Personal\r\n                                            </option>\r\n                                        </select>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.source_of_funding?.message}\r\n                                        </small>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">\r\n                                            {watch(\"source_of_funding\") ===\r\n                                            \"external\"\r\n                                                ? \"Name of Agency\"\r\n                                                : \"\"}\r\n                                        </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type={\r\n                                                watch(\"source_of_funding\") ===\r\n                                                \"external\"\r\n                                                    ? \"text\"\r\n                                                    : \"hidden\"\r\n                                            }\r\n                                            name=\"name_of_agency\"\r\n                                            id=\"name_of_agency\"\r\n                                            defaultValue={nameOfAgency}\r\n                                            {...register(\"name_of_agency\")}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">\r\n                                            Date of Completion{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <div>\r\n                                            <DateTimePickerComponent\r\n                                                format=\"yyyy-MM-dd\"\r\n                                                id=\"datetimepicker\"\r\n                                                value={dateOfCompletion}\r\n                                                onChange={(e) => {\r\n                                                    setDateOfCompletion(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">\r\n                                            Total Funds{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={\r\n                                                errors.total_funds\r\n                                                    ? \"is-invalid form-control\"\r\n                                                    : \"form-control\"\r\n                                            }\r\n                                            name=\"total_funds\"\r\n                                            id=\"total_funds\"\r\n                                            defaultValue={totalFunds}\r\n                                            {...register(\"total_funds\")}\r\n                                        />\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.total_funds?.message}\r\n                                        </small>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">Status</Label>\r\n                                        <br />\r\n                                        <p className=\"badge badge-primary\">\r\n                                            {remarks.toUpperCase()}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button\r\n                            color=\"light\"\r\n                            onClick={() => toggleModal(MODAL_TYPE.CRT)}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Proposal\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/proposal\">Proposal</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { currentUser.user_type === \"rh\" || currentUser.user_type === \"rh\" ? (\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs pills className=\"mb-3 font-14\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Pending\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        Submitted\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"3\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"3\");\r\n                                        }}\r\n                                    >\r\n                                        Evaluated\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"4\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"4\");\r\n                                        }}\r\n                                    >\r\n                                        For Approval\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"5\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"5\");\r\n                                        }}\r\n                                    >\r\n                                        Approved\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"6\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"6\");\r\n                                        }}\r\n                                    >\r\n                                        Disapproved\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <ReactDatatable\r\n                                            className=\"table font-14\"\r\n                                            tHeadClassName=\"thead-dark font-14 font-weight-medium\"\r\n                                            config={dtConfig}\r\n                                            records={getPendingProposal()}\r\n                                            columns={dtColumns}\r\n                                            extraButtons={dtExtraButtons}\r\n                                        />\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <ReactDatatable\r\n                                            className=\"table font-14\"\r\n                                            tHeadClassName=\"thead-dark font-14 font-weight-medium\"\r\n                                            config={dtConfig}\r\n                                            records={getSubmittedProposal()}\r\n                                            columns={dtColumns}\r\n                                            extraButtons={dtExtraButtons}\r\n                                        />\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"3\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <ReactDatatable\r\n                                            className=\"table font-14\"\r\n                                            tHeadClassName=\"thead-dark font-14 font-weight-medium\"\r\n                                            config={dtConfig}\r\n                                            records={getEvaluatedProposal()}\r\n                                            columns={dtColumns}\r\n                                            extraButtons={dtExtraButtons}\r\n                                        />\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"4\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <ReactDatatable\r\n                                            className=\"table font-14\"\r\n                                            tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                            config={dtConfig}\r\n                                            records={getForApprovalProposal()}\r\n                                            columns={dtColumns}\r\n                                            extraButtons={dtExtraButtons}\r\n                                        />\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"5\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <ReactDatatable\r\n                                            className=\"table font-14\"\r\n                                            tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                            config={dtConfig}\r\n                                            records={getApprovedProposal()}\r\n                                            columns={dtColumns}\r\n                                            extraButtons={dtExtraButtons}\r\n                                        />\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"6\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <ReactDatatable\r\n                                            className=\"table font-14\"\r\n                                            tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                            config={dtConfig}\r\n                                            records={getDisApprovedProposal()}\r\n                                            columns={dtColumns}\r\n                                            extraButtons={dtExtraButtons}\r\n                                        />\r\n                                    </div>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            ) : (\r\n                <>\r\n                    <Container fluid>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <div className=\"table-responsive\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                        config={dtConfig}\r\n                                        records={getUsersProposal()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons} \r\n                                    />\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Container>\r\n                </>\r\n            ) }\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Proposal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n    getProposalCompleted,\r\n    createProposalCompleted,\r\n    updateProposalCompleted,\r\n    // updateCompleted,\r\n    updateProposalCompletedApprovedRemarks,\r\n} from \"../../../redux/actions/completed_action\";\r\n\r\nimport { getProposal } from \"../../../redux/actions/proposal_action\";\r\nimport { getAccount } from \"../../../redux/actions/account_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Col,\r\n    Alert,\r\n    Progress,\r\n    Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport moment from \"moment\";\r\n// import { updateCompleted } from \"../../../../../server/controllers/completed\";\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", // research director\r\n    RH: \"rh\", // research head\r\n    CD: \"cd\", // campus director\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    research_id: yup.string().required(\"Title of research field is required.\"),\r\n    abstract: yup.string().required(\"Abstract field is required.\"),\r\n    date_started: yup.string().required(\"Date started field is required.\"),\r\n    date_completed: yup.string().required(\"Date completed field is required.\"),\r\n    duration: yup.string().required(\"Duration field is required.\"),\r\n    // research_file: yup\r\n    //         .mixed()\r\n    //         .test(\"name\", \"Please provide a PDF file.\", (value) => {\r\n    //             return value[0] && value[0].name !== \"\";\r\n    //         })\r\n    //         .test(\"type\", \"Incorrect file type. \", (value) => {\r\n    //             return value[0] && value[0].type === \"application/pdf\"\r\n    //         })\r\n})\r\n\r\nconst Completed = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate proposal data\r\n    const proposal_approved = useSelector((state) => state.proposal.proposals);\r\n    const completed = useSelector((state) => state.completed.completed);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm({\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalPrompt, setModalPrompt] = useState(false);\r\n    const [modalType, setModalType] = useState(null);\r\n    const [modalPdf, setModalPdf] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [typeOfResearch, setTypeOfResearch] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [sourceOfFunding, setSourceOfFunding] = useState(\"\");\r\n    const [nameOfAgency, setNameOfAgency] = useState(\"\");\r\n    const [dateOfCompletion, setDateOfCompletion] = useState(new Date());\r\n    const [abstract, setAbstract] = useState(\"\");\r\n    const [dateStarted, setDateStarted] = useState(\"\");\r\n    const [dateCompleted, setDateCompleted] = useState(\"\");\r\n    const [duration, setDuration] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [filePath, setfilePath] = useState(\"\");\r\n    const [remarks, setRemarks] = useState(\"pending\");\r\n    // const [status, setStatus] = useState(\"completed\");\r\n    const [isCompleted, setIsCompleted] = useState(\"N\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"_id\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (completed) => {\r\n                if(completed.is_completed === 'N') {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => {\r\n                                    showModalPrompt(completed, MODAL_TYPE.DEL);\r\n                                }}\r\n                            >\r\n                                <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"abstract\",\r\n            text: \"Abstract\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_started\",\r\n            text: \"Started Date\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (completed) => {\r\n                return (\r\n                    <div>\r\n                        {moment(completed.date_started).format(\"LL\")}\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"date_completed\",\r\n            text: \"Completed Date\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (completed) => {\r\n                return (\r\n                    <div>\r\n                        { moment(completed.date_completed).format(\"LL\") }\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"duration\",\r\n            text: \"Duration\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            cell: (completed) => {\r\n                if (currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                    if (completed.is_completed === \"N\" && currentUser.user_type === USER_TYPE.RH) {\r\n                        return (\r\n                            <React.Fragment key={completed._id}>\r\n                                <Link\r\n                                        className=\"btn btn-secondary\"\r\n                                        size=\"sm\"\r\n                                        to=\"#\"\r\n                                        onClick={() =>\r\n                                            showModalPrompt(\r\n                                                completed,\r\n                                                MODAL_TYPE.UPD\r\n                                            )\r\n                                        }\r\n                                    >Completed\r\n                                    </Link>\r\n                                {/* <Link\r\n                                    to=\"#\"\r\n                                    className=\"text-secondary dropdown-toggle\"\r\n                                    type=\"button\"\r\n                                    id=\"dropDownApprovedDisapproved\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                >\r\n                                    <MdMoreVert size={30} />\r\n                                </Link>\r\n                                <div\r\n                                    className=\"dropdown-menu\"\r\n                                    aria-labelledby=\"dropdownMenuButton\"\r\n                                >\r\n                                    \r\n                                    <Link\r\n                                        className=\"dropdown-item text-danger\"\r\n                                        to=\"#\"\r\n                                        onClick={() => {\r\n                                            showModalPrompt(\r\n                                                completed,\r\n                                                MODAL_TYPE.DEL\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        <MdDelete />\r\n                                        &nbsp;&nbsp;Remove\r\n                                    </Link>\r\n                                </div> */}\r\n                            </React.Fragment>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <React.Fragment key={completed._id}>\r\n                                <div>File here!</div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                } \r\n            },\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        // {\r\n        //     className: \"btn btn-primary\",\r\n        //     title: \"Print\",\r\n        //     children: [\r\n        //         <span>\r\n        //             <i\r\n        //                 className=\"glyphicon glyphicon-print fa fa-print\"\r\n        //                 aria-hidden=\"true\"\r\n        //             ></i>\r\n        //         </span>,\r\n        //     ],\r\n        //     onClick: () => {\r\n        //         alert(\"Print Logic here\");\r\n        //     },\r\n        // },\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getProposal());\r\n        dispatch(getProposalCompleted());\r\n        dispatch(getAccount());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setResearchId(\"\");\r\n        setTitleOfResearch(\"\");\r\n        setTypeOfResearch(\"\");\r\n        setAuthor(\"\");\r\n        setSourceOfFunding(\"\");\r\n        setNameOfAgency(\"\");\r\n        setDateOfCompletion(\"\");\r\n        // setRemarks(\"\");\r\n    };\r\n\r\n    const toggleModal = (modal_type) => {\r\n        if (modal_type === MODAL_TYPE.CRT) {\r\n            setModal(!modal);\r\n            setModalType(MODAL_TYPE.CRT);\r\n            // clearForm();\r\n            reset({})\r\n        } else if (modal_type === MODAL_TYPE.UPD) {\r\n            setModalPrompt(!modalPrompt);\r\n            setModalType(MODAL_TYPE.UPD);\r\n        } else {\r\n            setModalPrompt(!modalPrompt);\r\n            setModalType(MODAL_TYPE.DEL);\r\n        }\r\n    };\r\n\r\n    const toggleModalPdf = () => {\r\n        setModalPdf(!modalPdf);\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n    };\r\n\r\n    const showModalPdf = (file_name) => {\r\n        toggleModalPdf();\r\n        setFileName(file_name);\r\n        setfilePath(\"\");\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        // if(data.research_id) {\r\n        //     const formData = new FormData();\r\n        //     const details = {\r\n        //         research_id: data.research_id,\r\n        //         abstract: data.abstract,\r\n        //         file_name: data.research_file[0].name,\r\n        //         is_completed: isCompleted,\r\n        //         created_at: new Date(),\r\n        //         created_by: updatedBy\r\n        //     }\r\n\r\n        //     formData.append(\"file\", data.research_file[0]);\r\n        //     formData.append(\"data\", JSON.stringify(details));\r\n\r\n        //     dispatch(updateProposalCompleted(formData));\r\n        // }\r\n\r\n        if(data.research_id) {\r\n            const details = {\r\n                research_id: data.research_id,\r\n                abstract: data.abstract,\r\n                date_started: data.date_started,\r\n                date_completed: data.date_completed,\r\n                duration: data.duration,\r\n                is_completed: isCompleted,\r\n                created_at: new Date(),\r\n                created_by: updatedBy\r\n            }\r\n\r\n            dispatch(updateProposalCompleted(details));\r\n        }\r\n\r\n        toggleModal(MODAL_TYPE.CRT);\r\n    }\r\n\r\n    // const onSubmitFormFunded = () => {\r\n    //     if (researchId) {\r\n    //         const formData = new FormData();\r\n    //         const data = {\r\n    //             research_id: researchId,\r\n    //             abstract,\r\n    //             file_name: fileName,\r\n    //             is_completed: isCompleted,\r\n    //             update_at: new Date(),\r\n    //             updated_by: updatedBy,\r\n    //         };\r\n\r\n    //         formData.append(\"file\", file);\r\n    //         formData.append(\"data\", JSON.stringify(data));\r\n\r\n    //         dispatch(updateProposalCompleted(formData));\r\n    //     } else {\r\n    //         const authors = [];\r\n    //         const dateFormat = moment(dateOfCompletion).format(\"L\");\r\n    //         author.map((list) => authors.push(list.label));\r\n\r\n    //         const data = {\r\n    //             research_id: researchId,\r\n    //             title_of_research: titleOfResearch,\r\n    //             type_of_research: typeOfResearch,\r\n    //             author: author,\r\n    //             author_list: authors.join(\", \"),\r\n    //             source_of_funding: sourceOfFunding,\r\n    //             date_of_completion: dateFormat,\r\n    //             abstract,\r\n    //             file_name: fileName,\r\n    //             created_at: new Date(),\r\n    //             created_by: updatedBy,\r\n    //             updated_at: new Date(),\r\n    //             updated_by: updatedBy,\r\n    //         };\r\n\r\n    //         dispatch(createProposalCompleted(data));\r\n    //     }\r\n\r\n    //     toggleModal(MODAL_TYPE.CRT);\r\n    // };\r\n\r\n    const showModalPrompt = (completed, modal_type) => {\r\n        // UPDATE status modal will appear.\r\n        if (modal_type === MODAL_TYPE.UPD) {\r\n            setResearchId(completed._id);\r\n            setIsCompleted(\"Y\");\r\n            setDateOfCompletion(new Date());\r\n            setUpdatedAt(new Date());\r\n            setRemarks(remarks);\r\n\r\n            toggleModal(MODAL_TYPE.UPD);\r\n        }\r\n\r\n        // DELETE modal will appear\r\n        if (modal_type === MODAL_TYPE.DEL) {\r\n            setResearchId(completed._id);\r\n            setIsCompleted(null);\r\n            setDateOfCompletion(null);\r\n            setUpdatedAt(new Date());\r\n\r\n            toggleModal(MODAL_TYPE.DEL);\r\n        }\r\n    };\r\n\r\n    const onSubmitUpdateStatusOrDelete = (modal_type) => {\r\n        const data = {\r\n            research_id: researchId,\r\n            is_completed: isCompleted,\r\n            date_completed: dateOfCompletion,\r\n            updated_at: updatedAt,\r\n            updated_by: updatedBy,\r\n        };\r\n\r\n        if (modal_type === MODAL_TYPE.UPD) {\r\n            dispatch(updateProposalCompletedApprovedRemarks(data));\r\n        } else if (modal_type === MODAL_TYPE.DEL) {\r\n            dispatch(updateProposalCompletedApprovedRemarks(data));\r\n        }\r\n\r\n        toggleModal(\r\n            modal_type === MODAL_TYPE.DEL ? MODAL_TYPE.DEL : MODAL_TYPE.UPD\r\n        );\r\n    };\r\n\r\n    const getAuthorsOption = () => {\r\n        const authors = [];\r\n\r\n        for (let i = 0; i < faculty.length; i++)\r\n            authors.push({\r\n                value: faculty[i]._id,\r\n                label: faculty[i].full_name,\r\n            });\r\n\r\n        return authors;\r\n    };\r\n\r\n    const getUserCompleted = () => {\r\n        const currentUserId = currentUser.id;\r\n        const user = [];\r\n\r\n        for (let i = 0; i < completed.length; i++) {\r\n            // Destructure some of the details\r\n            let { user_id } = completed[i].created_by;\r\n\r\n            if (user_id === currentUserId && (completed[i].is_completed === \"N\" || completed[i].is_completed === \"Y\")) {\r\n                user.push({\r\n                    _id: completed[i]._id,\r\n                    title_of_research: completed[i].title_of_research,\r\n                    type_of_research: completed[i].type_of_research,\r\n                    abstract: completed[i].abstract,\r\n                    author: completed[i].author,\r\n                    author_list: completed[i].author_list,\r\n                    source_of_funding: completed[i].source_of_funding,\r\n                    // date_of_completion: completed[i].date_of_completion,\r\n                    date_started: completed[i].date_started,\r\n                    date_completed: completed[i].date_completed,\r\n                    duration: completed[i].duration,\r\n                    file_name: completed[i].file_name,\r\n                    is_completed: completed[i].is_completed,\r\n                });\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    // Displays only the researches of the current user.\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof proposal_approved !== undefined) {\r\n            const list_of_research = [];\r\n\r\n            for (let i = 0; i < proposal_approved.length; i++) {\r\n                let { user_id } = proposal_approved[i].created_by;\r\n\r\n                if (\r\n                    proposal_approved[i].remarks === \"approved\" &&\r\n                    proposal_approved[i].is_completed !== \"N\" &&\r\n                    proposal_approved[i].is_completed !== \"Y\" &&\r\n                    user_id === currentUserId\r\n                ) {\r\n                    list_of_research.push(\r\n                        <option\r\n                            key={proposal_approved[i]._id}\r\n                            value={proposal_approved[i]._id}\r\n                        >\r\n                            {proposal_approved[i].title_of_research}\r\n                        </option>\r\n                    );\r\n                }\r\n            }\r\n\r\n            return list_of_research;\r\n        }\r\n    };\r\n\r\n    const getPendingProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof completed !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < completed.length; i++) {\r\n                    if (completed[i].is_completed === \"N\") {\r\n                        pending.push({\r\n                            _id: completed[i]._id,\r\n                            title_of_research: completed[i].title_of_research,\r\n                            type_of_research: completed[i].type_of_research,\r\n                            abstract: completed[i].abstract,\r\n                            author: completed[i].author,\r\n                            author_list: completed[i].author_list,\r\n                            source_of_funding: completed[i].source_of_funding,\r\n                            date_of_completion: completed[i].date_of_completion,\r\n                            file_name: completed[i].file_name,\r\n                            is_completed: completed[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < completed.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = completed[i].created_by;\r\n\r\n                    if (\r\n                        completed[i].is_completed === \"N\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        pending.push({\r\n                            _id: completed[i]._id,\r\n                            title_of_research: completed[i].title_of_research,\r\n                            type_of_research: completed[i].type_of_research,\r\n                            abstract: completed[i].abstract,\r\n                            author: completed[i].author,\r\n                            author_list: completed[i].author_list,\r\n                            source_of_funding: completed[i].source_of_funding,\r\n                            date_of_completion: completed[i].date_of_completion,\r\n                            file_name: completed[i].file_name,\r\n                            is_completed: completed[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCompletedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof completed !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const complete = [];\r\n\r\n                for (let i = 0; i < completed.length; i++) {\r\n                    if (completed[i].is_completed === \"Y\") {\r\n                        complete.push({\r\n                            _id: completed[i]._id,\r\n                            title_of_research: completed[i].title_of_research,\r\n                            type_of_research: completed[i].type_of_research,\r\n                            abstract: completed[i].abstract,\r\n                            author: completed[i].author,\r\n                            author_list: completed[i].author_list,\r\n                            source_of_funding: completed[i].source_of_funding,\r\n                            date_of_completion: completed[i].date_of_completion,\r\n                            file_name: completed[i].file_name,\r\n                            is_completed: completed[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return complete;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const complete = [];\r\n\r\n                for (let i = 0; i < completed.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = completed[i].created_by;\r\n\r\n                    if (\r\n                        completed[i].is_completed === \"Y\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        complete.push({\r\n                            _id: completed[i]._id,\r\n                            title_of_research: completed[i].title_of_research,\r\n                            type_of_research: completed[i].type_of_research,\r\n                            abstract: completed[i].abstract,\r\n                            author: completed[i].author,\r\n                            author_list: completed[i].author_list,\r\n                            source_of_funding: completed[i].source_of_funding,\r\n                            date_of_completion: completed[i].date_of_completion,\r\n                            file_name: completed[i].file_name,\r\n                            is_completed: completed[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return complete;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={true}\r\n                draggable={true}\r\n                pauseOnHover={true}\r\n            />\r\n\r\n            <Modal\r\n                isOpen={modalPrompt}\r\n                toggle={() => toggleModal(MODAL_TYPE.DEL)}\r\n                className=\"modal-dialogue\"\r\n            >\r\n                <ModalHeader\r\n                    className={\r\n                        modalType === MODAL_TYPE.DEL\r\n                            ? \"bg-danger text-light\"\r\n                            : \"bg-primary text-light\"\r\n                    }\r\n                    toggle={() => toggleModal(MODAL_TYPE.DEL)}\r\n                >\r\n                    {modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update Status\"}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Label>\r\n                        {modalType === MODAL_TYPE.DEL\r\n                            ? \"Are you sure do you want to delete this data?\"\r\n                            : \"Are you sure you want to update the status?\"}\r\n                    </Label>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color={\r\n                            modalType === MODAL_TYPE.DEL ? \"danger\" : \"primary\"\r\n                        }\r\n                        onClick={() =>\r\n                            onSubmitUpdateStatusOrDelete(\r\n                                modalType === MODAL_TYPE.DEL\r\n                                    ? MODAL_TYPE.DEL\r\n                                    : MODAL_TYPE.UPD\r\n                            )\r\n                        }\r\n                    >\r\n                        {modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update\"}\r\n                    </Button>\r\n                    <Button\r\n                        color=\"light\"\r\n                        onClick={() => toggleModal(MODAL_TYPE.DEL)}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            {/* create modal */}\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={() => toggleModal(MODAL_TYPE.CRT)}\r\n                size=\"lg\"\r\n                className=\"modal-dialog font-14\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={() => toggleModal(MODAL_TYPE.CRT)}\r\n                >\r\n                    {!researchId ? \"Add Completed\" : \"Update Completed\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            {/* <Nav tabs pills className=\"mb-3\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Funded\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        External\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav> */}\r\n                            <TabContent activeTab={activeTab}>\r\n                                {/* <TabPane tabId=\"1\"> */}\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">\r\n                                            Title of Research{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={errors.research_id ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"research_id\"\r\n                                            id=\"research_id\"\r\n                                            // value={researchId || \"\"}\r\n                                            // onChange={(e) => {\r\n                                            //     setResearchId(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                            defaultValue={researchId}\r\n                                            {...register(\"research_id\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            {getResearchesOptions()}\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.research_id?.message}\r\n                                        </span>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            Abstract{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <textarea\r\n                                            className={errors.abstract ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            rows=\"6\"\r\n                                            type=\"textarea\"\r\n                                            name=\"abstract\"\r\n                                            id=\"abstract\"\r\n                                            defaultValue={abstract}\r\n                                            {...register(\"abstract\")}\r\n                                        ></textarea>\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.abstract?.message}\r\n                                        </span>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Date Started</Label>\r\n                                        <input\r\n                                            id=\"date_started\" \r\n                                            name=\"date_started\" \r\n                                            className=\"form-control\" \r\n                                            type=\"date\"\r\n                                            defaultValue={dateStarted}\r\n                                            {...register(\"date_started\")} \r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.date_started?.message}\r\n                                        </span>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Date Completed</Label>\r\n                                        <input \r\n                                            id=\"date_completed\"\r\n                                            name=\"date_completed\"\r\n                                            className=\"form-control\" \r\n                                            type=\"date\" \r\n                                            defaultValue={dateCompleted}\r\n                                            {...register(\"date_completed\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.date_completed?.message}\r\n                                        </span>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Duration</Label>\r\n                                        <input\r\n                                            id=\"duration\" \r\n                                            name=\"duration\" \r\n                                            className=\"form-control\" \r\n                                            type=\"text\"\r\n                                            defaultValue={duration}\r\n                                            {...register(\"duration\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.duration?.message}\r\n                                        </span>\r\n                                    </FormGroup>\r\n                                    {/* <FormGroup>\r\n                                        <Label className=\"badge badge-danger text-white float-left\">\r\n                                            <b>Note:</b> Upload only PDF files.\r\n                                        </Label>\r\n                                        <br />\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                name=\"research_file\"\r\n                                                className={errors.research_file ? \"is-invalid form-control\" : \"form-control\" }\r\n                                                {...register(\"research_file\")}\r\n                                            /><br />\r\n                                        </div>\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.research_file?.message}\r\n                                        </span>\r\n                                    </FormGroup> */}\r\n                                {/* </TabPane> */}\r\n                                {/* <TabPane tabId=\"2\">\r\n                                    <FormGroup>\r\n                                        <Input\r\n                                            type=\"hidden\"\r\n                                            name=\"research_id\"\r\n                                            id=\"research_id\"\r\n                                            value={researchId || \"\"}\r\n                                            onChange={(e) => {\r\n                                                setResearchId(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                        <Label for=\"\">\r\n                                            Title of Research{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"title_of_research\"\r\n                                            id=\"title_of_research\"\r\n                                            value={titleOfResearch || \"\"}\r\n                                            onChange={(e) => {\r\n                                                setTitleOfResearch(\r\n                                                    e.target.value\r\n                                                );\r\n                                            }}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">\r\n                                            Type of Research{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"type_of_research\"\r\n                                            id=\"type_of_research\"\r\n                                            value={typeOfResearch || \"\"}\r\n                                            onChange={(e) => {\r\n                                                setTypeOfResearch(\r\n                                                    e.target.value\r\n                                                );\r\n                                            }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"descriptive\">\r\n                                                Descriptive\r\n                                            </option>\r\n                                            <option value=\"developmental\">\r\n                                                Developmental\r\n                                            </option>\r\n                                            <option value=\"experimental\">\r\n                                                Experimental\r\n                                            </option>\r\n                                            <option value=\"modelling\">\r\n                                                Modelling\r\n                                            </option>\r\n                                            <option value=\"others\">\r\n                                                Others\r\n                                            </option>\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">\r\n                                            Author(s){\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <Select\r\n                                            closeMenuOnSelect={false}\r\n                                            components={animatedComponents}\r\n                                            isMulti\r\n                                            // options={getFacultiesOption(null, null)}\r\n                                            options={getAuthorsOption()}\r\n                                            name=\"author\"\r\n                                            value={author}\r\n                                            onChange={setAuthor}\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <Label for=\"\">\r\n                                                    Source of Funding{\" \"}\r\n                                                    <span className=\"text-danger\">\r\n                                                        *\r\n                                                    </span>\r\n                                                </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"source_of_funding\"\r\n                                                    id=\"source_of_funding\"\r\n                                                    value={\r\n                                                        sourceOfFunding || \"\"\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        setSourceOfFunding(\r\n                                                            e.target.value\r\n                                                        );\r\n                                                    }}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">\r\n                                                        Choose...\r\n                                                    </option>\r\n                                                    <option value=\"stf\">\r\n                                                        STF\r\n                                                    </option>\r\n                                                    <option value=\"gaa\">\r\n                                                        GAA\r\n                                                    </option>\r\n                                                    <option value=\"external\">\r\n                                                        External\r\n                                                    </option>\r\n                                                    <option value=\"personal\">\r\n                                                        Personal\r\n                                                    </option>\r\n                                                </Input>\r\n                                            </Col>\r\n                                            <Col md=\"6\">\r\n                                                <Label for=\"\">\r\n                                                    {sourceOfFunding ===\r\n                                                    \"external\"\r\n                                                        ? \"Name of Agency\"\r\n                                                        : \"\"}\r\n                                                </Label>\r\n                                                <Input\r\n                                                    type={\r\n                                                        sourceOfFunding ===\r\n                                                        \"external\"\r\n                                                            ? \"text\"\r\n                                                            : \"hidden\"\r\n                                                    }\r\n                                                    name=\"name_of_agency\"\r\n                                                    id=\"name_of_agency\"\r\n                                                    value={nameOfAgency || \"\"}\r\n                                                    onChange={(e) => {\r\n                                                        setNameOfAgency(\r\n                                                            e.target.value\r\n                                                        );\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <Label for=\"\">\r\n                                                    Date of Completion{\" \"}\r\n                                                    <span className=\"text-danger\">\r\n                                                        *\r\n                                                    </span>\r\n                                                </Label>\r\n                                                <Input\r\n                                                    type=\"date\"\r\n                                                    name=\"date_of_completion\"\r\n                                                    id=\"date_of_completion\"\r\n                                                    value={\r\n                                                        dateOfCompletion || \"\"\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        setDateOfCompletion(\r\n                                                            e.target.value\r\n                                                        );\r\n                                                    }}\r\n                                                    required\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Abstract</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"abstract\"\r\n                                            id=\"abstract\"\r\n                                            value={abstract || \"\"}\r\n                                            onChange={(e) =>\r\n                                                setAbstract(e.target.value)\r\n                                            }\r\n                                            required\r\n                                        ></Input>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Upload file</Label>\r\n                                        <br />\r\n                                        <Input\r\n                                            name=\"file\"\r\n                                            type=\"file\"\r\n                                            id=\"file\"\r\n                                            onChange={(e) =>\r\n                                                setFile(e.target.files[0].name)\r\n                                            }\r\n                                            required\r\n                                        />\r\n                                    </FormGroup>\r\n                                </TabPane> */}\r\n                            </TabContent>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"mt-3\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            // onClick={onSubmitFormFunded}\r\n                        >\r\n                            {activeTab === \"1\"\r\n                                ? \"Save Changes\"\r\n                                : \"Save External\"}\r\n                        </Button>\r\n                        <Button\r\n                            color=\"light\"\r\n                            onClick={() => toggleModal(MODAL_TYPE.CRT)}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Completed\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/completed\">Completed</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { currentUser.user_type === \"rh\" || currentUser.user_type === \"rh\" ? (\r\n            <>\r\n                <Container fluid>\r\n                    <Alert color=\"warning\">\r\n                        <h4 className=\"alert-heading font-weight-bold\">\r\n                            Reminders!\r\n                        </h4>\r\n                        <p>\r\n                            Be sure to submit the hard copy of your completed\r\n                            research to your respective research coordinator.\r\n                        </p>\r\n                    </Alert>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs pills className=\"mb-3 font-14 text-dark\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Pending\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        Completed\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                        config={dtConfig}\r\n                                        records={getPendingProposal()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                        config={dtConfig}\r\n                                        records={getCompletedProposal()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) : (\r\n            <>\r\n                <Container fluid>\r\n                    <Alert color=\"warning\">\r\n                        <h4 className=\"alert-heading font-weight-bold\">\r\n                            Reminders!\r\n                        </h4>\r\n                        <p>\r\n                            Be sure to submit the hard copy of your completed\r\n                            research to your respective research coordinator.\r\n                        </p>\r\n                    </Alert>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ReactDatatable\r\n                                className=\"table font-14\"\r\n                                tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                config={dtConfig}\r\n                                records={getUserCompleted()}\r\n                                columns={dtColumns}\r\n                                extraButtons={dtExtraButtons}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>\r\n            )}\r\n\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Completed;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n    getPresentation,\r\n    createPresentation,\r\n    updatePresentation,\r\n    deletePresentation,\r\n} from \"../../../redux/actions/presentation_action\";\r\n\r\nimport { getProposalCompleted } from \"../../../redux/actions/completed_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaCheck, FaLessThanEqual } from \"react-icons/fa\";\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport moment from \"moment\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", // research director\r\n    RH: \"rh\", // research head\r\n    CD: \"cd\", // campus director\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    research_id: yup.string().required(\"Title of research field is required.\"),\r\n    presentor: yup.string().required(\"Presentor field is required.\"),\r\n    date_presented: yup.date().required(\"Date presented field is required.\"),\r\n    title_of_forum: yup.string().required(\"Title of forum field is required.\"),\r\n    type_of_forum: yup.string().required(\"Type of forum field is required.\"),\r\n    venue_of_forum: yup.string().required(\"Venue of forum field is required.\"),\r\n})\r\n\r\nconst Presentation = ({ currentUser }) => {\r\n    const presentation = useSelector((state) => state.presentation.presentations); // This is to populate department data\r\n    const completed = useSelector((state) => state.completed.completed); // This is to populate department data\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset, watch } = useForm({\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalPrompt, setModalPrompt] = useState(false);\r\n    const [modalType, setModaType] = useState(null);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [presentationId, setPresentationId] = useState(null);\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [presentor, setPresentor] = useState(\"\");\r\n    const [datePresented, setDatePresented] = useState(new Date());\r\n    const [typeOfForum, setTypeOfForum] = useState(\"\");\r\n    const [venueOfForum, setVenueOfForum] = useState(\"\");\r\n    const [titleOfForum, setTitleOfForum] = useState(\"\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"_id\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            // width: 100,\r\n            cell: (presentation) => {\r\n                if (presentation.is_completed === \"N\") {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => showEditForm(presentation)}\r\n                            >\r\n                                <span><i className=\"fas fa-pencil-alt\"></i> Edit</span>\r\n                            </Button>\r\n                            &nbsp;&nbsp;\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => onClickDelete(presentation._id)}\r\n                            >\r\n                                <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"presentor\",\r\n            text: \"Presentor\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_presented\",\r\n            text: \"Date Presented\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (presentation) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        {moment(presentation.date_presented).format(\"LL\")}\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (presentation) => {\r\n                if (\r\n                    currentUser.user_type === USER_TYPE.RH ||\r\n                    currentUser.user_type === USER_TYPE.ADMIN\r\n                ) {\r\n                    if (\r\n                        presentation.is_completed === \"N\" &&\r\n                        currentUser.user_type === USER_TYPE.RH\r\n                    ) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    className=\"btn btn-sm\"\r\n                                    onClick={() => {\r\n                                        onSubmitUpdateRemarks(presentation._id);\r\n                                    }}\r\n                                >\r\n                                    Completed\r\n                                </Button>\r\n                                &nbsp;\r\n                            </React.Fragment>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"badge badge-success\">\r\n                                    COMPLETED\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        // {\r\n        //     className: \"btn btn-primary\",\r\n        //     title: \"Print\",\r\n        //     children: [\r\n        //         <span>\r\n        //             <i\r\n        //                 className=\"glyphicon glyphicon-print fa fa-print\"\r\n        //                 aria-hidden=\"true\"\r\n        //             ></i>\r\n        //         </span>,\r\n        //     ],\r\n        //     onClick: () => {\r\n        //         alert(\"Print Logic here\");\r\n        //     },\r\n        // },\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getPresentation());\r\n        dispatch(getProposalCompleted());\r\n        // dispatch(getProposalCompletedApproved());\r\n        // dispatch(getProposalCompletedApprovedByResearchId(researchId));\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setPresentationId(null);\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setPresentor(\"\");\r\n        setTypeOfForum(\"\");\r\n        setVenueOfForum(\"\");\r\n        setTitleOfForum(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        reset({})\r\n        // clearForm();\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n\r\n        clearForm();\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        const {\r\n            _id,\r\n            research_id,\r\n            title_of_research,\r\n            presentor,\r\n            date_presented,\r\n            type_of_forum,\r\n            venue_of_forum,\r\n            title_of_forum,\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setPresentationId(_id);\r\n        setResearchId(research_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setPresentor(presentor);\r\n        setDatePresented(moment(date_presented).format(\"L\"));\r\n        setTypeOfForum(type_of_forum);\r\n        setVenueOfForum(venue_of_forum);\r\n        setTitleOfForum(title_of_forum);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        let selectedResearch = document.getElementById(\"research_id\");\r\n        let titleOfTheResearch = selectedResearch.options[selectedResearch.selectedIndex].text;\r\n\r\n        const details = {\r\n            presentation_id: data.presentation_id,\r\n            research_id: data.research_id,\r\n            title_of_research: titleOfTheResearch,\r\n            presentor: data.presentor,\r\n            date_presented: data.date_presented,\r\n            type_of_forum: data.type_of_forum,\r\n            venue_of_forum: data.venue_of_forum,\r\n            title_of_forum: data.title_of_forum,\r\n            created_at: new Date(),\r\n            created_by: updatedBy,\r\n        };\r\n\r\n        if (!data.presentation_id) {\r\n            dispatch(createPresentation(details));\r\n        } else {\r\n            dispatch(updatePresentation(details));\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            presentation_id: presentationId,\r\n            research_id: researchId,\r\n            title_of_research: titleOfResearch,\r\n            presentor: presentor,\r\n            date_presented: datePresented,\r\n            type_of_forum: typeOfForum,\r\n            venue_of_forum: venueOfForum,\r\n            title_of_forum: titleOfForum,\r\n            created_at: new Date(),\r\n            created_by: updatedBy,\r\n        };\r\n\r\n        if (!presentationId) {\r\n            dispatch(createPresentation(data));\r\n        } else {\r\n            dispatch(updatePresentation(data));\r\n        }\r\n\r\n        toggleModal();\r\n    };\r\n\r\n    const onClickDelete = (presentation_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) dispatch(deletePresentation(presentation_id));\r\n    };\r\n\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (completed !== undefined) {\r\n            const list_of_research = [];\r\n\r\n            for (let i = 0; i < completed.length; i++) {\r\n                let { user_id } = completed[i].created_by;\r\n\r\n                if (completed[i].is_completed === \"Y\" && user_id === currentUserId) {\r\n                    list_of_research.push(\r\n                        <option \r\n                            key={completed[i]._id} \r\n                            value={completed[i]._id}\r\n                            >\r\n                            {completed[i].title_of_research}\r\n                        </option>\r\n                    );\r\n                }\r\n            }\r\n\r\n            return list_of_research;\r\n        }\r\n    };\r\n\r\n    const getPresentorsOptions = (research_id) => {\r\n        const list_of_presentor = [];\r\n\r\n        if (research_id !== \"\") {\r\n            for (let i = 0; i < completed.length; i++) {\r\n                if (completed[i]._id === research_id) {\r\n                    for (let j = 0; j < completed[i].author.length; j++) {\r\n                        list_of_presentor.push(\r\n                            <option\r\n                                key={completed[i].author[j].value}\r\n                                value={completed[i].author[j].label}\r\n                            >\r\n                                {completed[i].author[j].label}\r\n                            </option>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return list_of_presentor;\r\n    };\r\n\r\n    const getPresentations = () => {\r\n        const currentUserId = currentUser.id;\r\n        const user = [];\r\n\r\n        for (let i = 0; i < presentation.length; i++) {\r\n            // Destructure some of the details\r\n            let { user_id } = presentation[i].created_by;\r\n\r\n            if (user_id === currentUserId && (presentation[i].is_completed === \"N\" || presentation[i].is_completed === \"Y\")) {\r\n                user.push({\r\n                    _id: presentation[i]._id,\r\n                    research_id: presentation[i].research_id,\r\n                    title_of_research: presentation[i].title_of_research,\r\n                    presentor: presentation[i].presentor,\r\n                    date_presented: presentation[i].date_presented,\r\n                    title_of_forum: presentation[i].title_of_forum,\r\n                    type_of_forum: presentation[i].type_of_forum,\r\n                    venue_of_forum: presentation[i].venue_of_forum,\r\n                    is_completed: presentation[i].is_completed,\r\n                });\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    const getPendingPresentations = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof presentation !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    if (presentation[i].is_completed === \"N\") {\r\n                        pending.push({\r\n                            _id: presentation[i]._id,\r\n                            research_id: presentation[i].research_id,\r\n                            title_of_research: presentation[i].title_of_research,\r\n                            presentor: presentation[i].presentor,\r\n                            date_presented: presentation[i].date_presented,\r\n                            title_of_forum: presentation[i].title_of_forum,\r\n                            type_of_forum: presentation[i].type_of_forum,\r\n                            venue_of_forum: presentation[i].venue_of_forum,\r\n                            is_completed: presentation[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = presentation[i].created_by;\r\n\r\n                    if (\r\n                        presentation[i].is_completed === \"N\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        pending.push({\r\n                            _id: presentation[i]._id,\r\n                            research_id: presentation[i].research_id,\r\n                            title_of_research: presentation[i].title_of_research,\r\n                            presentor: presentation[i].presentor,\r\n                            date_presented: presentation[i].date_presented,\r\n                            title_of_forum: presentation[i].title_of_forum,\r\n                            type_of_forum: presentation[i].type_of_forum,\r\n                            venue_of_forum: presentation[i].venue_of_forum,\r\n                            is_completed: presentation[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCompletedPresentations = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof presentation !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    if (presentation[i].is_completed === \"Y\") {\r\n                        completed.push({\r\n                            _id: presentation[i]._id,\r\n                            title_of_research: presentation[i].title_of_research,\r\n                            presentor: presentation[i].presentor,\r\n                            date_presented: presentation[i].date_presented,\r\n                            title_of_forum: presentation[i].title_of_forum,\r\n                            type_of_forum: presentation[i].type_of_forum,\r\n                            venue_of_forum: presentation[i].venue_of_forum,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = presentation[i].created_by;\r\n\r\n                    if (\r\n                        presentation[i].is_completed === \"Y\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        completed.push({\r\n                            _id: presentation[i]._id,\r\n                            title_of_research:\r\n                                presentation[i].title_of_research,\r\n                            presentor: presentation[i].presentor,\r\n                            date_presented: presentation[i].date_presented,\r\n                            title_of_forum: presentation[i].title_of_forum,\r\n                            type_of_forum: presentation[i].type_of_forum,\r\n                            venue_of_forum: presentation[i].venue_of_forum,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n    };\r\n\r\n    const onSubmitUpdateRemarks = (presentation_id) => {\r\n        const data = {\r\n            presentation_id,\r\n            is_completed: \"Y\",\r\n            updated_at: new Date(),\r\n        };\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if (isSubmit) {\r\n            dispatch(updatePresentation(data));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={true}\r\n                draggable={true}\r\n                pauseOnHover={true}\r\n            />\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog font-14\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    {!presentationId\r\n                        ? \"Add Presentation\"\r\n                        : \"Update Presentation\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"presentation_id\"\r\n                                    id=\"presentation_id\"\r\n                                    // value={presentationId}\r\n                                    // onChange={(e) => {\r\n                                    //     setPresentationId(e.target.value);\r\n                                    // }}\r\n                                    defaultValue={presentationId}\r\n                                    {...register(\"presentation_id\")}\r\n                                />\r\n                                <Label for=\"\">\r\n                                    Title of Research{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <select\r\n                                    className={errors.research_id ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"select\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    // value={researchId}\r\n                                    // onChange={(e) => {\r\n                                    //     setResearchId(e.target.value);\r\n                                    //     setTitleOfResearch(\r\n                                    //         e.target.options[\r\n                                    //             e.target.selectedIndex\r\n                                    //         ].text\r\n                                    //     );\r\n                                    // }}\r\n                                    // required\r\n                                    defaultValue={researchId}\r\n                                    {...register(\"research_id\")}\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    {getResearchesOptions()}\r\n                                </select>\r\n                                <span className=\"text-danger\">\r\n                                    {errors.research_id?.message}\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Presentor{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <select\r\n                                    className={errors.presentor ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"select\"\r\n                                    name=\"presentor\"\r\n                                    id=\"presentor\"\r\n                                    // value={presentor || \"\"}\r\n                                    // onChange={(e) =>\r\n                                    //     setPresentor(e.target.value)\r\n                                    // }\r\n                                    // required\r\n                                    defaultValue={presentor}\r\n                                    {...register(\"presentor\")}\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    {getPresentorsOptions(watch(\"research_id\"))}\r\n                                </select>\r\n                                <span className=\"text-danger\">\r\n                                    {errors.presentor?.message}\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Date Presented <span className=\"text-danger\">*</span></Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            name=\"date_presented\"\r\n                                            // value={datePresented}\r\n                                            // onChange={(e) => {\r\n                                            //     setDatePresented(\r\n                                            //         e.target.value\r\n                                            //     );\r\n                                            // }}\r\n                                            // required\r\n                                            value={datePresented}\r\n                                            {...register(\"date_presented\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.date_presented?.message}\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Title of Forum <span className=\"text-danger\">*</span></Label>\r\n                                <input\r\n                                    className={errors.title_of_forum ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"title_of_forum\"\r\n                                    id=\"title_of_forum\"\r\n                                    // value={titleOfForum}\r\n                                    // onChange={(e) => {\r\n                                    //     setTitleOfForum(e.target.value);\r\n                                    // }}\r\n                                    // required\r\n                                    defaultValue={titleOfForum}\r\n                                    {...register(\"title_of_forum\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    {errors.title_of_forum?.message}\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Type of Forum <span className=\"text-danger\">*</span></Label>\r\n                                        <select\r\n                                            className={errors.type_of_forum ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"type_of_forum\"\r\n                                            id=\"type_of_forum\"\r\n                                            // value={typeOfForum}\r\n                                            // onChange={(e) => {\r\n                                            //     setTypeOfForum(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                            defaultValue={typeOfForum}\r\n                                            {...register(\"type_of_forum\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"local\">Local</option>\r\n                                            <option value=\"national\">\r\n                                                National\r\n                                            </option>\r\n                                            <option value=\"international\">\r\n                                                International\r\n                                            </option>\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.type_of_forum?.message}\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Venue of Forum <span className=\"text-danger\">*</span></Label>\r\n                                <input\r\n                                    className={errors.venue_of_forum ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"venue_of_forum\"\r\n                                    id=\"venue_of_forum\"\r\n                                    // value={venueOfForum}\r\n                                    // onChange={(e) => {\r\n                                    //     setVenueOfForum(e.target.value);\r\n                                    // }}\r\n                                    // required\r\n                                    defaultValue={venueOfForum}\r\n                                    {...register(\"venue_of_forum\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    {errors.venue_of_forum?.message}\r\n                                </span>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Presentation\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/completed\">Presentation</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { currentUser.user_type === \"rh\" || currentUser.user_type === \"admin\" ? (\r\n            <>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs pills className=\"mb-3 font-14\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Pending\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        Completed\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                        config={dtConfig}\r\n                                        records={getPendingPresentations()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                        config={dtConfig}\r\n                                        records={getCompletedPresentations()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) : (\r\n            <>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ReactDatatable\r\n                                className=\"table font-14\"\r\n                                tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                config={dtConfig}\r\n                                records={getPresentations()}\r\n                                columns={dtColumns}\r\n                                extraButtons={dtExtraButtons}\r\n                            />\r\n                        </CardBody>\r\n                    </Card> \r\n                </Container>\r\n            </>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Presentation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { getProposalCompleted } from \"../../../redux/actions/completed_action\";\r\n\r\nimport {\r\n    getPublication,\r\n    createPublication,\r\n    updatePublication,\r\n    deletePublication,\r\n} from \"../../../redux/actions/publication_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport moment from \"moment\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", //? research director\r\n    RH: \"rh\", //? research head\r\n    CD: \"cd\", //? campus director\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    research_id: yup.string().required(\"Title of research field is required.\"),\r\n    title_of_publication: yup\r\n        .string()\r\n        .required(\"Title of publication field is required.\"),\r\n    date_of_publication: yup\r\n        .mixed()\r\n        .required(\"Date of publication field is required.\")\r\n        .test(\"date_of_utilization\", \"Date of publication field is requred\", (value) => {\r\n            return value !== \"\";\r\n        }),\r\n    title_of_journal: yup\r\n        .string()\r\n        .required(\"Title of journal field is required.\"),\r\n    type_of_journal: yup\r\n        .string()\r\n        .required(\"Type of journal field is required.\"),\r\n    issn_isbn_no: yup.string().required(\"ISSN / ISBN field is required.\"),\r\n    volume_issue_no: yup.string().required(\"Volume / Issue number field is required.\"),\r\n});\r\n\r\nconst Publication = ({ currentUser }) => {\r\n    const completed = useSelector((state) => state.completed.completed);\r\n    const publication = useSelector((state) => state.publication.publications);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n        watch,\r\n    } = useForm({\r\n        resolver: yupResolver(formSchema),\r\n    });\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [publicationId, setPublicationId] = useState(null);\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [titleOfPublication, setTitleOfPublication] = useState(\"\");\r\n    const [dateOfPublication, setDateOfPublication] = useState(\"\");\r\n    const [titleOfJournal, setTitleOfJournal] = useState(\"\");\r\n    const [typeOfJournal, setTypeOfJournal] = useState(\"\");\r\n    const [issnIsbn, setIssnIsbn] = useState(\"\");\r\n    const [volumeNo, setVolumeNo] = useState(\"\");\r\n    // const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            // width: 125  ,\r\n            cell: (publication) => {\r\n                if (publication.is_completed === \"N\") {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => showEditForm(publication)}\r\n                            >\r\n                                <span><i className=\"fas fa-pencil-alt\"></i> Edit</span>\r\n                            </Button>\r\n                            &nbsp;&nbsp;\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => onClickDelete(publication._id)}\r\n                            >\r\n                                <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"title_of_publication\",\r\n            text: \"Title of Publication\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_of_publication\",\r\n            text: \"Date of Publication\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (publication) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        {moment(publication.date_of_publication).format(\"LL\")}\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (publication) => {\r\n                if (\r\n                    currentUser.user_type === USER_TYPE.RH ||\r\n                    currentUser.user_type === USER_TYPE.ADMIN\r\n                ) {\r\n                    if (\r\n                        publication.is_completed === \"N\" &&\r\n                        currentUser.user_type === USER_TYPE.RH\r\n                    ) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    className=\"btn btn-sm\"\r\n                                    onClick={() => {\r\n                                        onSubmitUpdateRemarks(publication._id);\r\n                                    }}\r\n                                >\r\n                                    Completed\r\n                                </Button>\r\n                                &nbsp;\r\n                            </React.Fragment>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"badge badge-success\">\r\n                                    COMPLETED\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        // {\r\n        //     className: \"btn btn-primary\",\r\n        //     title: \"Print\",\r\n        //     children: [\r\n        //         <span>\r\n        //             <i\r\n        //                 className=\"glyphicon glyphicon-print fa fa-print\"\r\n        //                 aria-hidden=\"true\"\r\n        //             ></i>\r\n        //         </span>,\r\n        //     ],\r\n        //     onClick: () => {\r\n        //         alert(\"Print Logic here\");\r\n        //     },\r\n        // },\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        // dispatch(getProposalCompletedApproved());\r\n        dispatch(getProposalCompleted());\r\n        dispatch(getPublication());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setPublicationId(null);\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setTitleOfPublication(\"\");\r\n        setDateOfPublication(\"\");\r\n        setTitleOfJournal(\"\");\r\n        setTypeOfJournal(\"\");\r\n        setIssnIsbn(\"\");\r\n        setVolumeNo(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        clearForm();\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n\r\n        clearForm();\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        const {\r\n            _id,\r\n            research_id,\r\n            title_of_research,\r\n            // title_of_publication,\r\n            date_of_publication,\r\n            title_of_journal,\r\n            type_of_journal,\r\n            issn_isbn,\r\n            volume_no,\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setPublicationId(_id);\r\n        setResearchId(research_id);\r\n        setTitleOfResearch(title_of_research);\r\n        // setTitleOfPublication(title_of_publication);\r\n        setDateOfPublication(date_of_publication);\r\n        setTitleOfJournal(title_of_journal);\r\n        setTypeOfJournal(type_of_journal);\r\n        setIssnIsbn(issn_isbn);\r\n        setVolumeNo(volume_no);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        let selectedResearch = document.getElementById(\"research_id\");\r\n        let nameOfTheResearch = selectedResearch.options[selectedResearch.selectedIndex].text;\r\n\r\n        const details = {\r\n            publication_id: data.publication_id,\r\n            research_id: data.research_id,\r\n            title_of_research: nameOfTheResearch,\r\n            // title_of_publication: data.title_of_publication,\r\n            date_of_publication: data.date_of_publication,\r\n            title_of_journal: data.title_of_journal,\r\n            type_of_journal: data.type_of_journal,\r\n            issn_isbn: data.issn_isbn_no,\r\n            volume_no: data.volume_issue_no,\r\n            created_at: new Date(),\r\n            created_by: updatedBy,\r\n        };\r\n\r\n        if (!data.publication_id) {\r\n            dispatch(createPublication(details));\r\n        } else {\r\n            dispatch(updatePublication(details));\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    // const onSubmitForm = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     const data = {\r\n    //         publication_id: publicationId,\r\n    //         research_id: researchId,\r\n    //         title_of_research: titleOfResearch,\r\n    //         title_of_publication: titleOfPublication,\r\n    //         date_of_publication: dateOfPublication,\r\n    //         title_of_journal: titleOfJournal,\r\n    //         type_of_journal: typeOfJournal,\r\n    //         issn_isbn: issnIsbn,\r\n    //         volume_no: volumeNo,\r\n    //         created_by: updatedBy,\r\n    //     };\r\n\r\n    //     if (!publicationId) {\r\n    //         dispatch(createPublication(data));\r\n    //     } else {\r\n    //         dispatch(updatePublication(data));\r\n    //     }\r\n\r\n    //     toggleModal();\r\n    // };\r\n\r\n    const onClickDelete = (publication_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) dispatch(deletePublication(publication_id));\r\n    };\r\n\r\n    const onSubmitUpdateRemarks = (publication_id) => {\r\n        const data = {\r\n            publication_id,\r\n            is_completed: \"Y\",\r\n            updated_by: updatedBy,\r\n            updated_at: new Date(),\r\n        };\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if (isSubmit) {\r\n            dispatch(updatePublication(data));\r\n        }\r\n    };\r\n\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof completed !== undefined) {\r\n            const list_of_research = [];\r\n\r\n            for (let i = 0; i < completed.length; i++) {\r\n                let { user_id } = completed[i].created_by;\r\n                // display only the researches of the current user\r\n                if (\r\n                    (completed[i].is_completed === \"Y\" ||\r\n                        completed[i].is_completed === \"N\") &&\r\n                    user_id === currentUserId\r\n                ) {\r\n                    list_of_research.push(\r\n                        <option key={completed[i]._id} value={completed[i]._id}>\r\n                            {completed[i].title_of_research}\r\n                        </option>\r\n                    );\r\n                }\r\n            }\r\n\r\n            return list_of_research;\r\n        }\r\n    };\r\n\r\n    const getPublications = () => {\r\n        const currentUserId = currentUser.id;\r\n        const user = [];\r\n\r\n        for (let i = 0; i < publication.length; i++) {\r\n            // Destructure some of the details\r\n            let { user_id } = publication[i].created_by;\r\n\r\n            if (user_id === currentUserId && (publication[i].is_completed === \"N\" || publication[i].is_completed === \"Y\")) {\r\n                user.push({\r\n                    _id: publication[i]._id,\r\n                    research_id: publication[i].research_id,\r\n                    title_of_research: publication[i].title_of_research,\r\n                    title_of_publication: publication[i].title_of_publication,\r\n                    date_of_publication: publication[i].date_of_publication,\r\n                    title_of_journal: publication[i].title_of_publication,\r\n                    type_of_journal: publication[i].type_of_journal,\r\n                    issn_isbn: publication[i].issn_isbn,\r\n                    volume_no: publication[i].volume_no,\r\n                    is_completed: publication[i].is_completed,\r\n                });\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    const getPendingPublications = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof publication !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < publication.length; i++) {\r\n                    if (publication[i].is_completed === \"N\") {\r\n                        pending.push({\r\n                            _id: publication[i]._id,\r\n                            research_id: publication[i].research_id,\r\n                            title_of_research: publication[i].title_of_research,\r\n                            title_of_publication:\r\n                                publication[i].title_of_publication,\r\n                            date_of_publication:\r\n                                publication[i].date_of_publication,\r\n                            title_of_journal:\r\n                                publication[i].title_of_publication,\r\n                            type_of_journal: publication[i].type_of_journal,\r\n                            issn_isbn: publication[i].issn_isbn,\r\n                            volume_no: publication[i].volume_no,\r\n                            is_completed: publication[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < publication.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = publication[i].created_by;\r\n\r\n                    if (\r\n                        publication[i].is_completed === \"N\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        pending.push({\r\n                            _id: publication[i]._id,\r\n                            research_id: publication[i].research_id,\r\n                            title_of_research: publication[i].title_of_research,\r\n                            title_of_publication:\r\n                                publication[i].title_of_publication,\r\n                            date_of_publication:\r\n                                publication[i].date_of_publication,\r\n                            title_of_journal:\r\n                                publication[i].title_of_publication,\r\n                            type_of_journal: publication[i].type_of_journal,\r\n                            issn_isbn: publication[i].issn_isbn,\r\n                            volume_no: publication[i].volume_no,\r\n                            is_completed: publication[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCompletedPublications = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof completed !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < publication.length; i++) {\r\n                    if (publication[i].is_completed === \"Y\") {\r\n                        completed.push({\r\n                            _id: publication[i]._id,\r\n                            research_id: publication[i].research_id,\r\n                            title_of_research: publication[i].title_of_research,\r\n                            title_of_publication:\r\n                                publication[i].title_of_publication,\r\n                            date_of_publication:\r\n                                publication[i].date_of_publication,\r\n                            title_of_journal:\r\n                                publication[i].title_of_publication,\r\n                            type_of_journal: publication[i].type_of_journal,\r\n                            issn_isbn: publication[i].issn_isbn,\r\n                            volume_no: publication[i].volume_no,\r\n                            is_completed: publication[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < publication.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = publication[i].created_by;\r\n\r\n                    if (\r\n                        publication[i].is_completed === \"Y\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        completed.push({\r\n                            _id: publication[i]._id,\r\n                            research_id: publication[i].research_id,\r\n                            title_of_research: publication[i].title_of_research,\r\n                            title_of_publication:\r\n                                publication[i].title_of_publication,\r\n                            date_of_publication:\r\n                                publication[i].date_of_publication,\r\n                            title_of_journal:\r\n                                publication[i].title_of_publication,\r\n                            type_of_journal: publication[i].type_of_journal,\r\n                            issn_isbn: publication[i].issn_isbn,\r\n                            volume_no: publication[i].volume_no,\r\n                            is_completed: publication[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog font-14\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    {!publicationId ? \"Add Publication\" : \"Update Publication\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label for=\"\">\r\n                                    Title of Research{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"publication_id\"\r\n                                    id=\"publication_id\"\r\n                                    // value={publicationId}\r\n                                    // onChange={(e) => {\r\n                                    //     setPublicationId(e.target.value);\r\n                                    // }}\r\n                                    defaultValue={publicationId}\r\n                                    {...register(\"publication_id\")}\r\n                                ></input>\r\n                                <select\r\n                                    className={errors.research_id ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"select\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    // value={researchId}\r\n                                    // onChange={(e) => {\r\n                                    //     setResearchId(e.target.value);\r\n                                    //     setTitleOfResearch(\r\n                                    //         e.target.options[\r\n                                    //             e.target.selectedIndex\r\n                                    //         ].text\r\n                                    //     );\r\n                                    // }}\r\n                                    defaultValue={researchId}\r\n                                    {...register(\"research_id\")}\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    {getResearchesOptions()}\r\n                                </select>\r\n                                <span className=\"text-danger\">\r\n                                    {errors.research_id?.message}\r\n                                </span>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                                <Label>\r\n                                    Title of Publication{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    className={errors.title_of_publication ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"title_of_publication\"\r\n                                    id=\"title_of_publication\"\r\n                                    defaultValue={titleOfPublication}\r\n                                    {...register(\"title_of_publication\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    {errors.title_of_publication?.message}\r\n                                </span>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Date of Publication{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateOfPublication}\r\n                                            // onChange={(e) => {\r\n                                            //     setDateOfPublication(\r\n                                            //         e.target.value\r\n                                            //     );\r\n                                            // }}\r\n                                            {...register(\"date_of_publication\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.date_of_publication?.message}\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Title of Journal{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    className={errors.title_of_journal ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"title_of_journal\"\r\n                                    id=\"title_of_journal\"\r\n                                    // value={titleOfJournal}\r\n                                    // onChange={(e) => {\r\n                                    //     setTitleOfJournal(e.target.value);\r\n                                    // }}\r\n                                    defaultValue={titleOfJournal}\r\n                                    {...register(\"title_of_journal\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    {errors.title_of_journal?.message}\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Type of Journal{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={errors.type_of_journal ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"type_of_journal\"\r\n                                            id=\"type_of_journal\"\r\n                                            // value={typeOfJournal}\r\n                                            // onChange={(e) => {\r\n                                            //     setTypeOfJournal(\r\n                                            //         e.target.value\r\n                                            //     );\r\n                                            // }}\r\n                                            defaultValue={typeOfJournal}\r\n                                            {...register(\"type_of_journal\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"local\">Local</option>\r\n                                            <option value=\"national\">\r\n                                                National\r\n                                            </option>\r\n                                            <option value=\"international\">\r\n                                                International\r\n                                            </option>\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.type_of_journal?.message}\r\n                                        </span>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            ISSN / ISBN{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={errors.issn_isbn_no ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"text\"\r\n                                            name=\"issn_isbn_no\"\r\n                                            id=\"issn_isbn_no\"\r\n                                            // value={issnIsbn}\r\n                                            // onChange={(e) => {\r\n                                            //     setIssnIsbn(e.target.value);\r\n                                            // }}\r\n                                            defaultValue={issnIsbn}\r\n                                            {...register(\"issn_isbn_no\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.issn_isbn_no?.message}\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Volume / Issue No.{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={errors.volume_issue_no ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"text\"\r\n                                            name=\"volume_issue_no\"\r\n                                            id=\"volume_issue_no\"\r\n                                            // value={volumeNo}\r\n                                            // onChange={(e) => {\r\n                                            //     setVolumeNo(e.target.value);\r\n                                            // }}\r\n                                            defaultValue={volumeNo}\r\n                                            {...register(\"volume_issue_no\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            {errors.volume_issue_no?.message}\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Publication\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/publication\">Publication</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { currentUser.user_type === \"rh\" || currentUser.user_type === \"admin\" ? (<>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs pills className=\"mb-3 font-14\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Pending\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        Completed\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark\"\r\n                                        config={dtConfig}\r\n                                        records={getPendingPublications()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark\"\r\n                                        config={dtConfig}\r\n                                        records={getCompletedPublications()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) : (<>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ReactDatatable\r\n                                className=\"table font-14\"\r\n                                tHeadClassName=\"thead-dark\"\r\n                                config={dtConfig}\r\n                                records={getPublications()}\r\n                                columns={dtColumns}\r\n                                extraButtons={dtExtraButtons}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) }\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Publication;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n    getUtilization,\r\n    createUtilizaition,\r\n    updateUtilization,\r\n    deleteUtilization,\r\n} from \"../../../redux/actions/utilization_action\";\r\n\r\nimport { getProposalCompleted } from \"../../../redux/actions/completed_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport moment from \"moment\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", // research director\r\n    RH: \"rh\", // research head\r\n    CD: \"cd\", // campus director\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    research_id: yup.string().required(\"Title of research field is required\"),\r\n    beneficiary: yup.string().required(\"Beneficiary field is required\"),\r\n    date_of_utilization: yup.mixed().required(\"Date of utilization field is required.\")\r\n                        .test(\"date_of_utilization\", \"Please provide an input.\",(value) => {\r\n                           return value !== \"\"\r\n                        }),\r\n})\r\n\r\nconst Utilization = ({ currentUser }) => {\r\n    const completed = useSelector((state) => state.completed.completed);\r\n    const utilization = useSelector((state) => state.utilization.utilizations);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset, watch } = useForm({\r\n        resolver: yupResolver(formSchema)\r\n    })\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [utilizationId, setUtilizationId] = useState(null);\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [beneficiary, setBeneficiary] = useState(\"\");\r\n    const [dateOfUtilization, setDateOfUtilization] = useState(\"\");\r\n    // const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 70,\r\n            cell: (utilization) => {\r\n                if(utilization.is_completed === 'N') { \r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => showEditForm(utilization)}\r\n                            >\r\n                                <span><i className=\"fas fa-pencil-alt\"></i> Edit</span>\r\n                            </Button>{\" \"}\r\n                            &nbsp;\r\n                            <Button\r\n                                color=\"danger\"\r\n                                size=\"sm\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => onClickDelete(utilization._id)}\r\n                            >\r\n                                <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"beneficiary\",\r\n            text: \"Beneficiary\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_of_utilization\",\r\n            text: \"Date of Utilization\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (utilization) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        {moment(utilization.date_of_utilization).format(\"LL\")}\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (utilization) => {\r\n                if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                    if(utilization.is_completed === 'N' && currentUser.user_type === USER_TYPE.RH) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    className=\"btn btn-sm\"\r\n                                    onClick={() => {\r\n                                        onSubmitUpdateRemarks(utilization._id);\r\n                                    }}\r\n                                >\r\n                                    Completed\r\n                                </Button>\r\n                                &nbsp;\r\n                            </React.Fragment>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"badge badge-success\">COMPLETED</div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        // {\r\n        //     className: \"btn btn-primary\",\r\n        //     title: \"Print\",\r\n        //     children: [\r\n        //         <span>\r\n        //             <i\r\n        //                 className=\"glyphicon glyphicon-print fa fa-print\"\r\n        //                 aria-hidden=\"true\"\r\n        //             ></i>\r\n        //         </span>,\r\n        //     ],\r\n        //     onClick: () => {\r\n        //         alert(\"Print Logic here\");\r\n        //     },\r\n        // },\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getUtilization());\r\n        dispatch(getProposalCompleted());\r\n        // dispatch(getProposalCompletedApproved());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setUtilizationId(null);\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setBeneficiary(\"\");\r\n        setDateOfUtilization(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        clearForm();\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n\r\n        clearForm();\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        console.log(\"DATA: \", data);\r\n        const {\r\n            _id,\r\n            research_id,\r\n            title_of_research,\r\n            beneficiary,\r\n            date_of_utilization,\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setUtilizationId(_id);\r\n        setResearchId(research_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setBeneficiary(beneficiary);\r\n        setDateOfUtilization(date_of_utilization);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        let selectedResearch = document.getElementById(\"research_id\");\r\n        let titleOfTheResearch = selectedResearch.options[selectedResearch.selectedIndex].text;\r\n\r\n        const details = {\r\n            utilization_id: data.utilization_id,\r\n            research_id: data.research_id,\r\n            title_of_research: titleOfTheResearch,\r\n            beneficiary: data.beneficiary,\r\n            date_of_utilization: data.date_of_utilization,\r\n            created_at: new Date(),\r\n            created_by: updatedBy,\r\n        };\r\n\r\n        if (!data.utilization_id) {\r\n            dispatch(createUtilizaition(details));\r\n        } else {\r\n            dispatch(updateUtilization(details));\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            utilization_id: utilizationId,\r\n            research_id: researchId,\r\n            title_of_research: titleOfResearch,\r\n            beneficiary,\r\n            date_of_utilization: dateOfUtilization,\r\n            created_by: updatedBy,\r\n        };\r\n\r\n        if (!utilizationId) {\r\n            dispatch(createUtilizaition(data));\r\n        } else {\r\n            dispatch(updateUtilization(data));\r\n        }\r\n\r\n        toggleModal();\r\n    };\r\n\r\n    const onClickDelete = (utilization_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) dispatch(deleteUtilization(utilization_id));\r\n    };\r\n\r\n    const onSubmitUpdateRemarks = (utilization_id) => {\r\n        const data = {\r\n            utilization_id,\r\n            is_completed: \"Y\",\r\n            updated_at: new Date(),\r\n        };\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if (isSubmit) {\r\n            dispatch(updateUtilization(data));\r\n        }\r\n    };\r\n\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (completed !== undefined) {\r\n            const list_of_research = [];\r\n\r\n            for (let i = 0; i < completed.length; i++) {\r\n                let { user_id } = completed[i].created_by;\r\n\r\n                if (\r\n                    completed[i].is_completed === \"Y\" &&\r\n                    user_id === currentUserId\r\n                ) {\r\n                    list_of_research.push(\r\n                        <option key={completed[i]._id} value={completed[i]._id}>\r\n                            {completed[i].title_of_research}\r\n                        </option>\r\n                    );\r\n                }\r\n            }\r\n\r\n            return list_of_research;\r\n        }\r\n    };\r\n\r\n    const getUtilizations = () => {\r\n        const currentUserId = currentUser.id;\r\n        const user = [];\r\n\r\n        for (let i = 0; i < utilization.length; i++) {\r\n            // Destructure some of the details\r\n            let { user_id } = utilization[i].created_by;\r\n\r\n            if (user_id === currentUserId && (utilization[i].is_completed === \"N\" || utilization[i].is_completed === \"Y\")) {\r\n                user.push({\r\n                    _id: utilization[i]._id,\r\n                    research_id: utilization[i].research_id,\r\n                    title_of_research: utilization[i].title_of_research,\r\n                    beneficiary: utilization[i].beneficiary,\r\n                    date_of_utilization: utilization[i].date_of_utilization,\r\n                    is_completed: utilization[i].is_completed,\r\n                });\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    const getPendingUtilization = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof utilization !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < utilization.length; i++) {\r\n                    if (utilization[i].is_completed === \"N\") {\r\n                        pending.push({\r\n                            _id: utilization[i]._id,\r\n                            research_id: utilization[i].research_id,\r\n                            title_of_research: utilization[i].title_of_research,\r\n                            beneficiary: utilization[i].beneficiary,\r\n                            date_of_utilization:\r\n                                utilization[i].date_of_utilization,\r\n                            is_completed: utilization[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < utilization.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = utilization[i].created_by;\r\n\r\n                    if (\r\n                        utilization[i].is_completed === \"N\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        pending.push({\r\n                            _id: utilization[i]._id,\r\n                            research_id: utilization[i].research_id,\r\n                            title_of_research: utilization[i].title_of_research,\r\n                            beneficiary: utilization[i].beneficiary,\r\n                            date_of_utilization:\r\n                                utilization[i].date_of_utilization,\r\n                            is_completed: utilization[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCompletedUtilization = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof presentation !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < utilization.length; i++) {\r\n                    if (utilization[i].is_completed === \"Y\") {\r\n                        completed.push({\r\n                            _id: utilization[i]._id,\r\n                            research_id: utilization[i].research_id,\r\n                            title_of_research: utilization[i].title_of_research,\r\n                            beneficiary: utilization[i].beneficiary,\r\n                            date_of_utilization:\r\n                                utilization[i].date_of_utilization,\r\n                            is_completed: utilization[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < utilization.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = utilization[i].created_by;\r\n\r\n                    if (\r\n                        utilization[i].is_completed === \"Y\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        completed.push({\r\n                            __id: utilization[i]._id,\r\n                            research_id: utilization[i].research_id,\r\n                            title_of_research: utilization[i].title_of_research,\r\n                            beneficiary: utilization[i].beneficiary,\r\n                            date_of_utilization:\r\n                                utilization[i].date_of_utilization,\r\n                            is_completed: utilization[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    {!utilizationId ? \"Add Utilization\" : \"Update Utilization\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label for=\"\">\r\n                                    Title of Research{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"utilization_id\"\r\n                                    id=\"utilization_id\"\r\n                                    // value={utilizationId}\r\n                                    // onChange={(e) => {\r\n                                    //     setUtilizationId(e.target.value);\r\n                                    // }}\r\n                                    defaultValue={utilizationId}\r\n                                    {...register(\"utilization_id\")}\r\n                                ></input>\r\n                                <select\r\n                                    className={errors.research_id ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"select\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    // value={researchId}\r\n                                    // onChange={(e) => {\r\n                                    //     setResearchId(e.target.value);\r\n                                    //     setTitleOfResearch(\r\n                                    //         e.target.options[\r\n                                    //             e.target.selectedIndex\r\n                                    //         ].text\r\n                                    //     );\r\n                                    // }}\r\n                                    defaultValue={researchId}\r\n                                    {...register(\"research_id\")}\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    {getResearchesOptions()}\r\n                                </select>\r\n                                <span className=\"text-danger\">\r\n                                    { errors.research_id?.message }\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Beneficiary{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    className={errors.beneficiary ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"beneficiary\"\r\n                                    id=\"beneficiary\"\r\n                                    // value={beneficiary}\r\n                                    // onChange={(e) => {\r\n                                    //     setBeneficiary(e.target.value);\r\n                                    // }}\r\n                                    defaultValue={beneficiary}\r\n                                    {...register(\"beneficiary\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    { errors.beneficiary?.message }\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Date of Utilization{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateOfUtilization}\r\n                                            // onChange={(e) => {\r\n                                            //     setDateOfUtilization(\r\n                                            //         e.target.value\r\n                                            //     );\r\n                                            // }}\r\n                                            {...register(\"date_of_utilization\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.date_of_utilization?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Utilization\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/utilization\">Utilzation</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { currentUser.user_type === \"rh\" || currentUser.user_type === \"admin\" ? (<>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs pills className=\"mb-3 font-14\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Pending\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        Completed\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark\"\r\n                                        config={dtConfig}\r\n                                        records={getPendingUtilization()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark\"\r\n                                        config={dtConfig}\r\n                                        records={getCompletedUtilization()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) : (<>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ReactDatatable\r\n                                className=\"table font-14\"\r\n                                tHeadClassName=\"thead-dark\"\r\n                                config={dtConfig}\r\n                                records={getUtilizations()}\r\n                                columns={dtColumns}\r\n                                extraButtons={dtExtraButtons}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) }\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Utilization;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\nimport { getAccount } from \"../../../redux/actions/account_action\";\r\n\r\nimport {\r\n    getInnovation,\r\n    createInnovation,\r\n    updateInnovation,\r\n    deleteInnovation,\r\n} from \"../../../redux/actions/innovation_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Col,\r\n    Toast,\r\n    ToastBody,\r\n    ToastHeader,\r\n} from \"reactstrap\";\r\n\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\",\r\n    RH: \"rh\", \r\n    CD: \"cd\", \r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    // author: yup.mixed().test(\"author\", \"Author field is required\", (value) => {\r\n    //     let nameOfAuthor = document.getElementById(\"react-select\")\r\n    //     console.log(\"Author\", nameOfAuthor)\r\n    // }),\r\n    title_of_innovation: yup.string().required(\"Title of innovation field is required\"),\r\n    type_of_innovation: yup.string().required(\"Type of innovation field is required\"),\r\n    is_submitted_or_granted: yup.string().required(\"Status field is required\"),\r\n    // date_submitted: yup.mixed()\r\n    // .test(\"date_submitted\", \"Date submitted field is required\", (value) => {\r\n    //     let statusCode = document.getElementById(\"is_submitted_or_granted\");\r\n    //     return statusCode.value === \"submitted\" && statusCode.value !== \"\";\r\n    // }),\r\n    // grant_code: yup.string().required(\"Grant code field is required\"),\r\n    // date_granted: yup.string().required(\"Date granted field is required\"),\r\n})\r\n\r\nconst Innovation = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate proposal data\r\n    const innovation = useSelector((state) => state.innovation.innovations); // This is to populate proposal data\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset, watch } = useForm({\r\n        resolver: yupResolver(formSchema)\r\n    })\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [innovationId, setInnovationId] = useState(null);\r\n    const [facultyDetails, setFacultyDetails] = useState(\"\");\r\n    const [titleOfInnovation, setTitleOfInnovation] = useState(\"\");\r\n    const [typeOfInnovation, setTypeOfInnovation] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [dateSubmitted, setDateSubmitted] = useState(\"\");\r\n    const [grantCode, setGrantCode] = useState(\"\");\r\n    const [dateGranted, setDateGranted] = useState(\"\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            // width: 150,\r\n            cell: (innovation) => {\r\n                if (innovation.is_completed === \"N\") {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => showEditForm(innovation)}\r\n                            >\r\n                                <span><i className=\"fas fa-pencil-alt\"></i> Edit</span>\r\n                            </Button>{\" \"}\r\n                            &nbsp;\r\n                            <Button\r\n                                color=\"danger\"\r\n                                size=\"sm\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => onClickDelete(innovation._id)}\r\n                            >\r\n                                <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_innovation\",\r\n            text: \"Title of Innovation\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (innovation) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Link\r\n                            to=\"#\"\r\n                            className=\"text-secondary\"\r\n                            onClick={() => {\r\n                                showToast();\r\n                            }}\r\n                        >\r\n                            {innovation.title_of_innovation}\r\n                        </Link>\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"faculty_name\",\r\n            text: \"Author\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"type_of_innovation\",\r\n            text: \"Type of Innovation\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            isSearchable: true,\r\n            cell: (innovation) => {\r\n                const { type_of_innovation } = innovation;\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        {type_of_innovation[0].toUpperCase() +\r\n                            type_of_innovation.substring(1)}\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"status\",\r\n            text: \"Status\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            isSearchable: true,\r\n            cell: (innovation) => {\r\n                const { status } = innovation;\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"text-secondary\">\r\n                            {status.toUpperCase()}\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (innovation) => {\r\n                if (\r\n                    currentUser.user_type === USER_TYPE.RH ||\r\n                    currentUser.user_type === USER_TYPE.ADMIN\r\n                ) {\r\n                    if (\r\n                        innovation.is_completed === \"N\" &&\r\n                        currentUser.user_type === USER_TYPE.RH\r\n                    ) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    className=\"btn btn-sm\"\r\n                                    onClick={() => {\r\n                                        onSubmitUpdateRemarks(innovation._id);\r\n                                    }}\r\n                                >\r\n                                    Completed\r\n                                </Button>\r\n                                &nbsp;\r\n                            </React.Fragment>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"badge badge-success\">\r\n                                    COMPLETED\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        // {\r\n        //     className: \"btn btn-primary\",\r\n        //     title: \"Print\",\r\n        //     children: [\r\n        //         <span>\r\n        //             <i\r\n        //                 className=\"glyphicon glyphicon-print fa fa-print\"\r\n        //                 aria-hidden=\"true\"\r\n        //             ></i>\r\n        //         </span>,\r\n        //     ],\r\n        //     onClick: () => {\r\n        //         alert(\"Print Logic here\");\r\n        //     },\r\n        // },\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccount());\r\n        dispatch(getInnovation());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setInnovationId(null);\r\n        setFacultyDetails(\"\");\r\n        setTitleOfInnovation(\"\");\r\n        setTypeOfInnovation(\"\");\r\n        setStatus(\"\");\r\n        setDateSubmitted(\"\");\r\n        setGrantCode(\"\");\r\n        setDateGranted(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        clearForm();\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n\r\n        clearForm();\r\n    };\r\n\r\n    const showToast = () => {\r\n        return (\r\n            <Toast>\r\n                <ToastHeader>Header</ToastHeader>\r\n                <ToastBody>Hello</ToastBody>\r\n            </Toast>\r\n        );\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        const {\r\n            _id,\r\n            faculty_id,\r\n            faculty_name,\r\n            title_of_innovation,\r\n            type_of_innovation,\r\n            status,\r\n            date_submitted,\r\n            grant_code,\r\n            date_granted,\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setInnovationId(_id);\r\n        setFacultyDetails({ value: faculty_id, label: faculty_name });\r\n        setTitleOfInnovation(title_of_innovation);\r\n        setTypeOfInnovation(type_of_innovation);\r\n        setStatus(status);\r\n        setDateSubmitted(date_submitted);\r\n        setGrantCode(grant_code);\r\n        setDateGranted(date_granted);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        if(data.is_submitted_or_granted === \"submitted\") {\r\n            const details = {\r\n                innovation_id: data.innovation_id,\r\n                faculty_id: facultyDetails.value,\r\n                faculty_name: facultyDetails.label,\r\n                title_of_innovation: data.title_of_innovation,\r\n                type_of_innovation: data.type_of_innovation,\r\n                status: data.is_submitted_or_granted,\r\n                date_submitted: dateSubmitted,\r\n                grant_code: \"\",\r\n                date_granted: \"\",\r\n                created_by: updatedBy,\r\n            }\r\n\r\n            if (!data.innovation_id) {\r\n                dispatch(createInnovation(details));\r\n            } else {\r\n                dispatch(updateInnovation(details));\r\n            }\r\n        } else if(data.is_submitted_or_granted === \"granted\") {\r\n            const details = {\r\n                innovation_id: data.innovation_id,\r\n                faculty_id: facultyDetails.value,\r\n                faculty_name: facultyDetails.label,\r\n                title_of_innovation: data.title_of_innovation,\r\n                type_of_innovation: data.type_of_innovation,\r\n                status: data.is_submitted_or_granted,\r\n                date_submitted: \"\",\r\n                grant_code: grantCode,\r\n                date_granted: dateGranted,\r\n                created_by: updatedBy,\r\n            }\r\n\r\n            if (!data.innovation_id) {\r\n                dispatch(createInnovation(details));\r\n            } else {\r\n                dispatch(updateInnovation(details));\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            innovation_id: innovationId,\r\n            faculty_id: facultyDetails.value,\r\n            faculty_name: facultyDetails.label,\r\n            title_of_innovation: titleOfInnovation,\r\n            type_of_innovation: typeOfInnovation,\r\n            status,\r\n            date_submitted: dateSubmitted,\r\n            grant_code: grantCode,\r\n            date_granted: dateGranted,\r\n            created_by: updatedBy,\r\n        };\r\n\r\n        if (!innovationId) {\r\n            dispatch(createInnovation(data));\r\n        } else {\r\n            dispatch(updateInnovation(data));\r\n        }\r\n\r\n        toggleModal();\r\n    };\r\n\r\n    const onClickDelete = (innovation_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) dispatch(deleteInnovation(innovation_id));\r\n    };\r\n\r\n    const onSubmitUpdateRemarks = (innovation_id) => {\r\n        const data = {\r\n            innovation_id,\r\n            is_completed: \"Y\",\r\n            updated_at: updatedAt,\r\n            updated_by: updatedBy,\r\n        };\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if (isSubmit) {\r\n            dispatch(updateInnovation(data));\r\n        }\r\n    };\r\n\r\n    // authors option assigning\r\n    const getFacultyOption = () => {\r\n        const options = [];\r\n\r\n        for (let i = 0; i < faculty.length; i++) {\r\n            options.push({\r\n                value: faculty[i]._id,\r\n                label: faculty[i].full_name,\r\n            });\r\n        }\r\n\r\n        return options;\r\n    };\r\n\r\n    const getInnovations = () => {\r\n        const currentUserId = currentUser.id;\r\n        const pending = [];\r\n\r\n        for (let i = 0; i < innovation.length; i++) {\r\n            // Destructure some of the details\r\n            let { user_id } = innovation[i].created_by;\r\n\r\n            if (user_id === currentUserId && (innovation[i].is_completed === \"N\" || innovation[i].is_completed === \"Y\")) {\r\n                pending.push({\r\n                    _id: innovation[i]._id,\r\n                    faculty_name: innovation[i].faculty_name,\r\n                    title_of_innovation: innovation[i].title_of_innovation,\r\n                    type_of_innovation: innovation[i].type_of_innovation,\r\n                    status: innovation[i].status,\r\n                    date_submitted: innovation[i].date_submitted,\r\n                    grant_code: innovation[i].grant_code,\r\n                    date_granted: innovation[i].date_granted,\r\n                    is_completed: innovation[i].is_completed,\r\n                });\r\n            }\r\n        }\r\n\r\n        return pending;\r\n    }\r\n\r\n    const getPendingInnovations = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof innovation !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    if (innovation[i].is_completed === \"N\") {\r\n                        pending.push({\r\n                            _id: innovation[i]._id,\r\n                            faculty_name: innovation[i].faculty_name,\r\n                            title_of_innovation:\r\n                                innovation[i].title_of_innovation,\r\n                            type_of_innovation:\r\n                                innovation[i].type_of_innovation,\r\n                            status: innovation[i].status,\r\n                            date_submitted: innovation[i].date_submitted,\r\n                            grant_code: innovation[i].grant_code,\r\n                            date_granted: innovation[i].date_granted,\r\n                            is_completed: innovation[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = innovation[i].created_by;\r\n\r\n                    if (\r\n                        innovation[i].is_completed === \"N\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        pending.push({\r\n                            _id: innovation[i]._id,\r\n                            faculty_name: innovation[i].faculty_name,\r\n                            title_of_innovation:\r\n                                innovation[i].title_of_innovation,\r\n                            type_of_innovation:\r\n                                innovation[i].type_of_innovation,\r\n                            status: innovation[i].status,\r\n                            date_submitted: innovation[i].date_submitted,\r\n                            grant_code: innovation[i].grant_code,\r\n                            date_granted: innovation[i].date_granted,\r\n                            is_completed: innovation[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCompletedInnovations = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof innovation !== undefined) {\r\n            if (\r\n                currentUser.user_type === USER_TYPE.RH ||\r\n                currentUser.user_type === USER_TYPE.ADMIN\r\n            ) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    if (innovation[i].is_completed === \"Y\") {\r\n                        completed.push({\r\n                            _id: innovation[i]._id,\r\n                            faculty_name: innovation[i].faculty_name,\r\n                            title_of_innovation:\r\n                                innovation[i].title_of_innovation,\r\n                            type_of_innovation:\r\n                                innovation[i].type_of_innovation,\r\n                            status: innovation[i].status,\r\n                            date_submitted: innovation[i].date_submitted,\r\n                            grant_code: innovation[i].grant_code,\r\n                            date_granted: innovation[i].date_granted,\r\n                            is_completed: innovation[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = innovation[i].created_by;\r\n\r\n                    if (\r\n                        innovation[i].is_completed === \"Y\" &&\r\n                        user_id === currentUserId\r\n                    ) {\r\n                        completed.push({\r\n                            _id: innovation[i]._id,\r\n                            faculty_name: innovation[i].faculty_name,\r\n                            title_of_innovation:\r\n                                innovation[i].title_of_innovation,\r\n                            type_of_innovation:\r\n                                innovation[i].type_of_innovation,\r\n                            status: innovation[i].status,\r\n                            date_submitted: innovation[i].date_submitted,\r\n                            grant_code: innovation[i].grant_code,\r\n                            date_granted: innovation[i].date_granted,\r\n                            is_completed: innovation[i].is_completed,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    {!innovationId ? \"Add Innovation\" : \"Update Innovation\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Author{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"innovation_id\"\r\n                                    id=\"innovation_id\"\r\n                                    defaultValue={innovationId}\r\n                                    {...register(\"innovation_id\")}\r\n                                />\r\n                                <Select\r\n                                    id=\"react-select\"\r\n                                    closeMenuOnSelect={false}\r\n                                    components={animatedComponents}\r\n                                    isMulti={false}\r\n                                    options={getFacultyOption()}\r\n                                    name=\"faculty\"\r\n                                    value={facultyDetails}\r\n                                    onChange={setFacultyDetails}\r\n                                    isSearchable={true}\r\n                                />\r\n                                {/* <span className=\"text-danger\">\r\n                                    { errors.author?.message }\r\n                                </span> */}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Title of Innovation{\" \"}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"title_of_innovation\"\r\n                                    id=\"title_of_innovation\"\r\n                                    defaultValue={titleOfInnovation}\r\n                                    {...register(\"title_of_innovation\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    { errors.title_of_innovation?.message }\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Type of Innovation{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            type=\"select\"\r\n                                            name=\"type_of_innovation\"\r\n                                            id=\"type_of_innovation\"\r\n                                            defaultValue={typeOfInnovation}\r\n                                            {...register(\"type_of_innovation\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"patent\">\r\n                                                Patent\r\n                                            </option>\r\n                                            <option value=\"utility model\">\r\n                                                Utility Model\r\n                                            </option>\r\n                                            <option value=\"trademark\">\r\n                                                Trademark\r\n                                            </option>\r\n                                            <option value=\"industrial design\">\r\n                                                Industrial Design\r\n                                            </option>\r\n                                            <option value=\"copyright\">\r\n                                                Copyright\r\n                                            </option>\r\n                                            <option value=\"geographic indication\">\r\n                                                Geographic Indication\r\n                                            </option>\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.type_of_innovation?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Status{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            type=\"select\"\r\n                                            name=\"is_submitted_or_granted\"\r\n                                            id=\"is_submitted_or_granted\"\r\n                                            defaultValue={status}\r\n                                            {...register(\"is_submitted_or_granted\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"submitted\">\r\n                                                Submitted\r\n                                            </option>\r\n                                            <option value=\"granted\">\r\n                                                Granted\r\n                                            </option>\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.is_submitted_or_granted?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup\r\n                                className={\r\n                                    watch(\"is_submitted_or_granted\") === \"submitted\" ? \"\" : \"hidden\"\r\n                                }\r\n                            >\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Date Submitted{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateSubmitted}\r\n                                            onChange={(e) => {\r\n                                                setDateSubmitted(\r\n                                                    e.target.value\r\n                                                );\r\n                                            }}\r\n                                            required={\r\n                                                watch(\"is_submitted_or_granted\") === \"submitted\"\r\n                                                    ? true\r\n                                                    : false\r\n                                            }\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.date_submitted?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup\r\n                                className={watch(\"is_submitted_or_granted\") === \"granted\" ? \"\" : \"hidden\"}\r\n                            >\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Grant Code{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"grant_code\"\r\n                                            id=\"grant_code\"\r\n                                            value={grantCode}\r\n                                            onChange={(e) => {\r\n                                                setGrantCode(e.target.value);\r\n                                            }}\r\n                                            required={\r\n                                                watch(\"is_submitted_or_granted\") === \"granted\"\r\n                                                    ? true\r\n                                                    : false\r\n                                            }\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup\r\n                                className={ watch(\"is_submitted_or_granted\") === \"granted\" ? \"\" : \"hidden\"}\r\n                            >\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Date Granted{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateGranted}\r\n                                            onChange={(e) => {\r\n                                                setDateGranted(e.target.value);\r\n                                            }}\r\n                                            required={\r\n                                                watch(\"status\") === \"granted\"\r\n                                                    ? true\r\n                                                    : false\r\n                                            }\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Innovation\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/innovation\">Innovation</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { currentUser.user_type === \"rh\" || currentUser.user_type === \"admin\" ? (<>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs pills className=\"mb-3 font-14\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"1\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"1\");\r\n                                        }}\r\n                                    >\r\n                                        Pending\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        href=\"#\"\r\n                                        className={\r\n                                            activeTab === \"2\" ? \"active\" : null\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleTab(\"2\");\r\n                                        }}\r\n                                    >\r\n                                        Completed\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark\"\r\n                                        config={dtConfig}\r\n                                        records={getPendingInnovations()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <ReactDatatable\r\n                                        className=\"table font-14\"\r\n                                        tHeadClassName=\"thead-dark\"\r\n                                        config={dtConfig}\r\n                                        records={getCompletedInnovations()}\r\n                                        columns={dtColumns}\r\n                                        extraButtons={dtExtraButtons}\r\n                                    />\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n            </>) : (<>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <ReactDatatable\r\n                                className=\"table font-14\"\r\n                                tHeadClassName=\"thead-dark\"\r\n                                config={dtConfig}\r\n                                records={getInnovations()}\r\n                                columns={dtColumns}\r\n                                extraButtons={dtExtraButtons}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Container>\r\n                \r\n            </>)}\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Innovation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n    getSeminar,\r\n    createSeminar,\r\n    updateSeminar,\r\n    deleteSeminar,\r\n} from \"../../../redux/actions/seminar_action\";\r\n\r\nimport { getProposalCompleted } from \"../../../redux/actions/completed_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport moment from \"moment\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: \"CREATE\",\r\n    UPD: \"UPDATE\",\r\n    DEL: \"DELETE\",\r\n};\r\n\r\nconst USER_TYPE = {\r\n    USR: \"user\",\r\n    ADMIN: \"admin\",\r\n    RD: \"rd\", // research director\r\n    RH: \"rh\", // research head\r\n    CD: \"cd\", // campus director\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    date_of_seminar: yup.mixed().required(\"Date of utilization field is required.\")\r\n        .test(\"date_of_seminar\", \"Please provide a date.\",(value) => {\r\n        return value !== \"\"\r\n    }),\r\n    title_of_activity: yup.string().required(\"Title of the activity field is required\"),\r\n    type_of_participant: yup.string().required(\"Type of the partcipant field is required\"),\r\n    venue_of_the_activity: yup.string().required(\"Venue of the activity field is required\"),\r\n    scope_of_the_activity: yup.string().required(\"Scope of the activity field is required\")\r\n})\r\n\r\nconst Seminar = ({ currentUser }) => {\r\n    // const completed = useSelector((state) => state.completed.completed);\r\n    // const utilization = useSelector((state) => state.utilization.utilizations);\r\n    const seminar = useSelector((state) => state.seminar.seminars);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset, watch } = useForm({\r\n        resolver: yupResolver(formSchema)\r\n    })\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [seminarId, setSeminarId] = useState(null);\r\n    const [dateOfSeminar, setDateOfSeminar] = useState(null);\r\n    const [titleOfActivity, setTitleOfActivity] = useState(\"\");\r\n    const [typeOfParticipant, setTypeOfParticipant] = useState(\"\");\r\n    const [venueOfActivity, setVenueOfActivity] = useState(\"\");\r\n    const [scopeOfActivity, setScopeOfActivity] = useState(\"\");\r\n    const [updatedBy, setUpdatedBy] = useState({\r\n        user_id: currentUser.id,\r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`,\r\n        user_type: currentUser.user_type,\r\n        college: currentUser.college,\r\n        campus: currentUser.campus,\r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 130,\r\n            cell: (seminar) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Button\r\n                            size=\"sm\"\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => showEditForm(seminar)}\r\n                        >\r\n                            <span><i className=\"fas fa-pencil-alt\"></i> Edit</span>\r\n                        </Button>{\" \"}\r\n                        &nbsp;\r\n                        <Button\r\n                            color=\"danger\"\r\n                            size=\"sm\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => onClickDelete(seminar._id)}\r\n                        >\r\n                            <span><i className=\"fas fa-trash-alt\"></i> Remove</span>\r\n                        </Button>\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"title_of_activity\",\r\n            text: \"Title of activity\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_of_seminar\",\r\n            text: \"Date of seminar\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: (seminar) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        {moment(seminar.date_of_seminar).format(\"LL\")}\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            key: \"type_of_participant\",\r\n            text: \"Type of participant\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"venue_of_the_activity\",\r\n            text: \"Venue\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"scope_of_the_activity\",\r\n            text: \"Scope\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        // {\r\n        //     key: \"\",\r\n        //     text: \"\",\r\n        //     align: \"left\",\r\n        //     sortable: true,\r\n        //     cell: (utilization) => {\r\n        //         if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n        //             if(utilization.is_completed === 'N' && currentUser.user_type === USER_TYPE.RH) {\r\n        //                 return (\r\n        //                     <React.Fragment>\r\n        //                         <Button\r\n        //                             size=\"sm\"\r\n        //                             className=\"btn btn-sm\"\r\n        //                             onClick={() => {\r\n        //                                 onSubmitUpdateRemarks(utilization._id);\r\n        //                             }}\r\n        //                         >\r\n        //                             Completed\r\n        //                         </Button>\r\n        //                         &nbsp;\r\n        //                     </React.Fragment>\r\n        //                 );\r\n        //             } else {\r\n        //                 return (\r\n        //                     <React.Fragment>\r\n        //                         <div className=\"badge badge-success\">COMPLETED</div>\r\n        //                     </React.Fragment>\r\n        //                 );\r\n        //             }\r\n        //         }\r\n        //     },\r\n        // },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        // {\r\n        //     className: \"btn btn-primary\",\r\n        //     title: \"Print\",\r\n        //     children: [\r\n        //         <span>\r\n        //             <i\r\n        //                 className=\"glyphicon glyphicon-print fa fa-print\"\r\n        //                 aria-hidden=\"true\"\r\n        //             ></i>\r\n        //         </span>,\r\n        //     ],\r\n        //     onClick: () => {\r\n        //         alert(\"Print Logic here\");\r\n        //     },\r\n        // },\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"fa fa-plus-circle\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    &nbsp; Create\r\n                </span>,\r\n            ],\r\n            onClick: () => { setModal(!modal) },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getSeminar());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        // setUtilizationId(null);\r\n        // setResearchId(null);\r\n        // setTitleOfResearch(\"\");\r\n        // setBeneficiary(\"\");\r\n        // setDateOfUtilization(\"\");\r\n        setDateOfSeminar(\"\");\r\n        setTitleOfActivity(\"\");\r\n        setTypeOfParticipant(\"\");\r\n        setVenueOfActivity(\"\");\r\n        setScopeOfActivity(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        clearForm();\r\n    };\r\n\r\n    const toggleTab = (tabId) => {\r\n        if (activeTab !== tabId) setActiveTab(tabId);\r\n\r\n        clearForm();\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        const {\r\n            _id,\r\n            date_of_seminar,\r\n            title_of_activity,\r\n            type_of_participant,\r\n            venue_of_the_activity,\r\n            scope_of_the_activity,\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setSeminarId(_id);\r\n        setDateOfSeminar(date_of_seminar);\r\n        setTitleOfActivity(title_of_activity);\r\n        setTypeOfParticipant(type_of_participant);\r\n        setVenueOfActivity(venue_of_the_activity);\r\n        setScopeOfActivity(scope_of_the_activity);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        const details = {\r\n            seminar_id: data.seminar_id,\r\n            date_of_seminar: data.date_of_seminar,\r\n            title_of_activity: data.title_of_activity,\r\n            type_of_participant: data.type_of_participant,\r\n            venue_of_the_activity: data.venue_of_the_activity,\r\n            scope_of_the_activity: data.scope_of_the_activity,\r\n            created_at: new Date(),\r\n            created_by: updatedBy,\r\n        }\r\n\r\n        if(!data.seminar_id) {\r\n            dispatch(createSeminar(details));\r\n        } else {\r\n            dispatch(updateSeminar(details))\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    // const onSubmitForm = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     const data = {\r\n    //         utilization_id: utilizationId,\r\n    //         research_id: researchId,\r\n    //         title_of_research: titleOfResearch,\r\n    //         beneficiary,\r\n    //         date_of_utilization: dateOfUtilization,\r\n    //         created_by: updatedBy,\r\n    //     };\r\n\r\n    //     if (!utilizationId) {\r\n    //         dispatch(createUtilizaition(data));\r\n    //     } else {\r\n    //         dispatch(updateUtilization(data));\r\n    //     }\r\n\r\n    //     toggleModal();\r\n    // };\r\n\r\n    const onClickDelete = (seminar_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) dispatch(deleteSeminar(seminar_id));\r\n    };\r\n\r\n    const getSeminarByUser = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if (typeof utilization !== undefined) {\r\n            if (currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                \r\n                return seminar;\r\n            \r\n            } else {\r\n                const user = [];\r\n\r\n                for (let i = 0; i < seminar.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = seminar[i].created_by;\r\n\r\n                    if (user_id === currentUserId) {\r\n                        user.push({\r\n                            _id: seminar[i]._id,\r\n                            date_of_seminar: seminar[i].date_of_seminar,\r\n                            title_of_activity: seminar[i].title_of_activity,\r\n                            venue_of_the_activity: seminar[i].venue_of_the_activity,\r\n                            scope_of_the_activity: seminar[i].scope_of_the_activity\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return user;\r\n            }\r\n        }\r\n    };\r\n\r\n    // const onSubmitUpdateRemarks = (utilization_id) => {\r\n    //     const data = {\r\n    //         utilization_id,\r\n    //         is_completed: \"Y\",\r\n    //         updated_at: new Date(),\r\n    //     };\r\n\r\n    //     const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n    //     if (isSubmit) {\r\n    //         dispatch(updateUtilization(data));\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    Add Seminar\r\n                </ModalHeader>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    name=\"seminar_id\"\r\n                                    id=\"seminar_id\"\r\n                                    defaultValue={seminarId}\r\n                                    {...register(\"seminar_id\")}\r\n                                ></input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Date of seminar{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateOfSeminar}\r\n                                            {...register(\"date_of_seminar\")}\r\n                                        />\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.date_of_seminar?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Title of activity\r\n                                    <span className=\"text-danger\"> *</span>\r\n                                </Label>\r\n                                <input\r\n                                    className={errors.title_of_activity ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"title_of_activity\"\r\n                                    id=\"title_of_activity\"\r\n                                    defaultValue={titleOfActivity}\r\n                                    {...register(\"title_of_activity\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    { errors.title_of_activity?.message }\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Type of participant\r\n                                            <span className=\"text-danger\"> *</span>\r\n                                        </Label>\r\n                                        <select \r\n                                            className={errors.type_of_participant ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            name=\"type_of_participant\" \r\n                                            id=\"type_of_participant\"\r\n                                            defaultValue={typeOfParticipant}\r\n                                            {...register(\"type_of_participant\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"participant\">Participant</option>\r\n                                            <option value=\"speaker\">Speaker/Evaluator</option>\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.type_of_participant?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>\r\n                                    Venue of the activity \r\n                                    <span className=\"text-danger\"> *</span>\r\n                                </Label>\r\n                                <input\r\n                                    className={errors.venue_of_the_activity ? \"is-invalid form-control\" : \"form-control\" }\r\n                                    type=\"text\"\r\n                                    name=\"venue_of_the_activity\"\r\n                                    id=\"venue_of_the_activity\"\r\n                                    defaultValue={venueOfActivity}\r\n                                    {...register(\"venue_of_the_activity\")}\r\n                                />\r\n                                <span className=\"text-danger\">\r\n                                    { errors.venue_of_the_activity?.message }\r\n                                </span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>\r\n                                            Scope of the activity\r\n                                            <span className=\"text-danger\"> *</span>\r\n                                        </Label>\r\n                                        <select \r\n                                            className={errors.scope_of_the_activity ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            name=\"scope_of_the_activity\" \r\n                                            id=\"scope_of_the_activity\"\r\n                                            defaultValue={scopeOfActivity}\r\n                                            {...register(\"scope_of_the_activity\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"national\">National</option>\r\n                                            <option value=\"local\">Local</option>\r\n                                            <option value=\"regional\">Regional</option>\r\n                                        </select>\r\n                                        <span className=\"text-danger\">\r\n                                            { errors.scope_of_the_activity?.message }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Seminars Attended\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Home</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/utilization\">Seminar</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <ReactDatatable\r\n                            className=\"table font-14\"\r\n                            tHeadClassName=\"thead-dark\"\r\n                            config={dtConfig}\r\n                            records={getSeminarByUser()}\r\n                            columns={dtColumns}\r\n                            extraButtons={dtExtraButtons}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Seminar;\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getSeminar = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchSeminar();\r\n\r\n        dispatch({\r\n            type: 'FETCH_SEMINAR',\r\n            payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\nexport const createSeminar = (seminar) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createSeminar(seminar);\r\n        \r\n        dispatch({ \r\n            type: 'CREATE_SEMINAR', \r\n            payload: data.results \r\n        });\r\n        \r\n        toast.success(\"Created successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateSeminar = (seminar) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateSeminar(seminar);\r\n        \r\n        dispatch({ \r\n            type: 'UPDATE_SEMINAR'\r\n            , payload: data \r\n        });\r\n\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const deleteSeminar = (seminar_id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteSeminar(seminar_id);\r\n\r\n        dispatch({ \r\n            type: 'DELETE_SEMINAR'\r\n            , payload: seminar_id \r\n        });\r\n\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getCampus = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchCampus()\r\n\r\n        dispatch({ type: 'FETCH_CAMPUS', payload: data.results });\r\n    } catch (error) {\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const createCampus = (campus) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createCampus(campus);\r\n        \r\n        dispatch({ type: 'CREATE_CAMPUS', payload: data.results });\r\n        toast.success(\"Create successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateCampus = (campus) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateCampus(campus);\r\n        \r\n        dispatch({ type: 'UPDATE_CAMPUS', payload: data });\r\n        toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to update this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const deleteCampus = (campus_id) => async (dispatch) => {\r\n    try {\r\n        await api.deleteCampus(campus_id);\r\n\r\n        dispatch({ type: 'DELETE_CAMPUS', payload: campus_id });\r\n        toast.success(\"Deleted successfully\");\r\n    } catch (error) {\r\n        toast.error(\"Unable to delete this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n    getCampus,\r\n    createCampus,\r\n    updateCampus,\r\n    deleteCampus,\r\n} from \"../../../redux/actions/campus_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\";\r\n\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Campus = () => {\r\n    const campus = useSelector((state) => state.campus.campuses);\r\n    const dispatch = useDispatch();\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [campusId, setCampusId] = useState(\"\");\r\n    const [campusName, setCampusName] = useState(\"\");\r\n    const [campusAddress, setCampusAddress] = useState(\"\");\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"campus_no\",\r\n            text: \"\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 150,\r\n            cell: (campus) => {\r\n                return (\r\n                    <>\r\n                        <Button\r\n                            size=\"sm\"\r\n                            className=\"btn-circle\"\r\n                            onClick={() => showEditForm(campus)}\r\n                        >\r\n                            <i className=\"fas fa-edit ml-1\"></i>\r\n                        </Button>{\" \"}\r\n                        &nbsp;\r\n                        <Button\r\n                            color=\"danger\"\r\n                            size=\"sm\"\r\n                            className=\"btn-circle\"\r\n                            onClick={() => onClickDelete(campus._id)}\r\n                        >\r\n                            <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"campus_name\",\r\n            text: \"Campus Name\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"campus_address\",\r\n            text: \"Address\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"glyphicon glyphicon-print fa fa-print\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"glyphicon glyphicon-print fa fa-plus\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getCampus());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setCampusId(\"\");\r\n        setCampusName(\"\");\r\n        setCampusAddress(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        clearForm();\r\n    };\r\n\r\n    const showEditForm = ({ _id, campus_name, campus_address }) => {\r\n        toggleModal();\r\n\r\n        setCampusId(_id);\r\n        setCampusName(campus_name);\r\n        setCampusAddress(campus_address);\r\n    };\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            campus_id: campusId,\r\n            campus_name: campusName,\r\n            campus_address: campusAddress,\r\n        };\r\n\r\n        if (!campusId) {\r\n            dispatch(createCampus(data));\r\n        } else {\r\n            dispatch(updateCampus(data));\r\n        }\r\n\r\n        toggleModal();\r\n    };\r\n\r\n    const onClickDelete = (campus_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) dispatch(deleteCampus(campus_id));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    {!campusId ? \"Add Campus\" : \"Update Campus\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"campus_id\"\r\n                                    id=\"campus_id\"\r\n                                    value={campusId}\r\n                                    onChange={(e) => {\r\n                                        setCampusId(e.target.value);\r\n                                    }}\r\n                                />\r\n                                <Label for=\"Name of Campus\">Campus Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"campus_name\"\r\n                                    id=\"campus_name\"\r\n                                    value={campusName}\r\n                                    onChange={(e) => {\r\n                                        setCampusName(e.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"Address of the Campus\">\r\n                                    Campus Address\r\n                                </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"campus_address\"\r\n                                    id=\"campus_address\"\r\n                                    value={campusAddress}\r\n                                    onChange={(e) => {\r\n                                        setCampusAddress(e.target.value);\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Campus\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/campus\">Campus</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <ReactDatatable\r\n                            className=\"table\"\r\n                            tHeadClassName=\"thead-dark\"\r\n                            config={dtConfig}\r\n                            records={campus}\r\n                            columns={dtColumns}\r\n                            extraButtons={dtExtraButtons}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Campus;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getCampus } from \"../../../redux/actions/campus_action\";\r\nimport {\r\n    getDepartment,\r\n    createDepartment,\r\n    updateDepartment,\r\n    deleteDepartment,\r\n} from \"../../../redux/actions/department_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\";\r\n\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Department = () => {\r\n    const campus = useSelector((state) => state.campus.campuses);\r\n    const department = useSelector((state) => state.department.departments);\r\n    const dispatch = useDispatch();\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [deptId, setDeptId] = useState(\"\");\r\n    const [deptCode, setDeptCode] = useState(\"\");\r\n    const [deptName, setDeptName] = useState(\"\");\r\n    const [campusId, setCampusId] = useState(\"\");\r\n    const [campusName, setCampusName] = useState(\"\");\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"department_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 150,\r\n            cell: (department) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Button\r\n                            size=\"sm\"\r\n                            className=\"btn-circle\"\r\n                            onClick={() => showEditForm(department)}\r\n                        >\r\n                            <i className=\"fas fa-edit ml-1\"></i>\r\n                        </Button>{\" \"}\r\n                        &nbsp;\r\n                        <Button\r\n                            color=\"danger\"\r\n                            size=\"sm\"\r\n                            className=\"btn-circle\"\r\n                            onClick={() => onClickDelete(department._id)}\r\n                        >\r\n                            <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                    </React.Fragment>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            key: \"department_code\",\r\n            text: \"Department Code\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"department_name\",\r\n            text: \"Department Name\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"campus_name\",\r\n            text: \"Campus\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n    const dtConfig = {\r\n        key_column: \"id\",\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        },\r\n    };\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"glyphicon glyphicon-print fa fa-print\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i\r\n                        className=\"glyphicon glyphicon-print fa fa-plus\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                </span>,\r\n            ],\r\n            onClick: () => {\r\n                setModal(!modal);\r\n            },\r\n        },\r\n    ];\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getCampus());\r\n        dispatch(getDepartment());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setDeptId(\"\");\r\n        setDeptCode(\"\");\r\n        setDeptName(\"\");\r\n        setCampusId(\"\");\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal);\r\n        clearForm();\r\n    };\r\n\r\n    const showEditForm = (data) => {\r\n        const { _id, department_code, department_name, campus_id } = data;\r\n\r\n        toggleModal();\r\n\r\n        setDeptId(_id);\r\n        setDeptCode(department_code);\r\n        setDeptName(department_name);\r\n        setCampusId(campus_id);\r\n    };\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            department_id: deptId,\r\n            department_code: deptCode,\r\n            department_name: deptName,\r\n            campus_id: campusId,\r\n            campus_name: campusName\r\n        };\r\n\r\n        if (!deptId) {\r\n            dispatch(createDepartment(data));\r\n        } else {\r\n            dispatch(updateDepartment(data));\r\n        }\r\n\r\n        toggleModal();\r\n    };\r\n\r\n    const onClickDelete = (department_id) => {\r\n        const isDelete = window.confirm(\r\n            \"Are you sure you want to delete this data?\"\r\n        );\r\n\r\n        if (isDelete) \r\n            dispatch(deleteDepartment(department_id));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggleModal}\r\n                size=\"lg\"\r\n                className=\"modal-dialog\"\r\n            >\r\n                <ModalHeader\r\n                    className=\"bg-primary text-light\"\r\n                    toggle={toggleModal}\r\n                >\r\n                    {!deptId ? \"Add Department\" : \"Update Department\"}\r\n                </ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"department_id\"\r\n                                    id=\"department_id\"\r\n                                    value={deptId}\r\n                                    onChange={(e) => {\r\n                                        setDeptId(e.target.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                                <Label for=\"\">Department Code</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"department_code\"\r\n                                    id=\"department_code\"\r\n                                    value={deptCode}\r\n                                    onChange={(e) => {\r\n                                        setDeptCode(e.target.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"\">Department Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"department_name\"\r\n                                    id=\"department_name\"\r\n                                    value={deptName}\r\n                                    onChange={(e) => {\r\n                                        setDeptName(e.target.value);\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"Address of the Campus\">\r\n                                    Campus\r\n                                </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"campus_id\"\r\n                                    id=\"campus_id\"\r\n                                    value={campusId}\r\n                                    required\r\n                                    onChange={(e) => {\r\n                                        let index = e.nativeEvent.target.selectedIndex;\r\n                                        let nameOfCampus = e.nativeEvent.target[index].text;\r\n                                        \r\n                                        setCampusId(e.target.value);\r\n                                        setCampusName(nameOfCampus);\r\n                                    }}\r\n                                >\r\n                                    {campus.length > 0\r\n                                        ? campus.map((opt) => {\r\n                                              return (\r\n                                                  <option value={opt._id}>\r\n                                                      {opt.campus_name}\r\n                                                  </option>\r\n                                              );\r\n                                          })\r\n                                        : null}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>\r\n                            Cancel\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Department\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/campus\">Department</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <ReactDatatable\r\n                            className=\"table\"\r\n                            tHeadClassName=\"thead-dark\"\r\n                            config={dtConfig}\r\n                            records={department}\r\n                            columns={dtColumns}\r\n                            extraButtons={dtExtraButtons}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Department;\r\n","export default __webpack_public_path__ + \"static/media/profile-picture.76db07e9.svg\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport React\r\n, { \r\n    useState\r\n    , useEffect \r\n} from 'react';\r\n\r\nimport { \r\n    useDispatch\r\n    , useSelector \r\n} from 'react-redux';\r\n\r\nimport { \r\n    getAccount\r\n    , createAccount \r\n} from '../../../redux/actions/account_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Row\r\n    , Col \r\n} from 'reactstrap';\r\n\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DefaultAvatar from \"../../../images/profile-picture.svg\";\r\n\r\nconst CREATE_UPDATE = 'CREATE_UPDATE';\r\nconst ACTIVATE_ACCOUNT = 'ACTIVATE';\r\n\r\nconst Account = () => {\r\n    const account = useSelector((state) => state.account.accounts); // This is to populate campus data\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n\r\n    console.log(\"Account\", account);\r\n\r\n    const [modal, setModalAccount] = useState(false);\r\n    const [modalActivateAccount, setModalAccountActivateAccount] = useState(false);\r\n\r\n    const [accountId, setAccountId] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [middleInitial, setMiddleInitial] = useState(\"\");\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [position, setPosition] = useState(\"\");\r\n    const [college, setCollege] = useState(\"\");\r\n    const [campus, setCampus] = useState(\"\");\r\n    const [fieldOfSpecialization, setFieldOfSpecialization] = useState(\"\");\r\n    const [educationalAttainment, setEducationalAttainment] = useState(\"\");\r\n\r\n    // Account activation\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [userType, setUserType] = useState(false);\r\n\r\n    // Flags\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"campus_no\",\r\n            text: \"\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 150,\r\n            cell: account => {\r\n                return(\r\n                    <>\r\n                        <Button\r\n                            color=\"secondary\" \r\n                            size=\"sm\" \r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => showEditForm(account)}\r\n                        ><span><i className=\"fas fa-user-circle\"></i> View profile</span>\r\n                        </Button> &nbsp;\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"full_name\",\r\n            text: \"Faculty Name\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"position\",\r\n            text: \"Academic Rank\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"college\",\r\n            text: \"College\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"activation_status\",\r\n            text: \"Status\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            cell: account => {\r\n                return(\r\n                    <div className=\"badge badge-success\">\r\n                        ACTIVE\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    const dtConfig = {\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n    }\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => { \r\n        dispatch(getAccount());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setAccountId(\"\");\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setMiddleInitial(\"\");\r\n        setEducationalAttainment(\"\");\r\n        setCollege(\"\");\r\n    }\r\n\r\n    const toggleModal = (modal_type) => {\r\n        if(modal_type === CREATE_UPDATE) \r\n            setModalAccount(!modal);\r\n\r\n        if(modal_type === ACTIVATE_ACCOUNT) \r\n            setModalAccountActivateAccount(!modalActivateAccount);\r\n\r\n        clearForm(); \r\n    }\r\n\r\n\r\n    const showEditForm = (data) => {\r\n        const { \r\n            _id\r\n            , first_name\r\n            , last_name\r\n            , middle_initial\r\n            , position\r\n            , educational_attainment\r\n            , field_of_specialization\r\n            , college \r\n        } = data;\r\n\r\n        toggleModal(CREATE_UPDATE);\r\n\r\n        setAccountId(_id);\r\n        setFirstName(first_name);\r\n        setLastName(last_name);\r\n        setMiddleInitial(middle_initial);\r\n        setFullName(`${first_name} ${middle_initial} ${last_name}`);\r\n        setPosition(position);\r\n        setEducationalAttainment(educational_attainment);\r\n        setFieldOfSpecialization(field_of_specialization);\r\n        setCollege(college);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal isOpen={modal} toggle={() => toggleModal(CREATE_UPDATE)} size=\"xl\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={() => toggleModal(CREATE_UPDATE)}>Faculty's Information</ModalHeader>\r\n                <Form>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"text-center\">\r\n                                        <img\r\n                                            src={DefaultAvatar}\r\n                                            alt=\"profile\"\r\n                                            width=\"250\"\r\n                                            height=\"230\"\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"ml-3\">\r\n                                        <label>Full name</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            contentEditable=\"false\"\r\n                                            value={fullName}\r\n                                            required\r\n                                        />\r\n                                        <label className=\"mt-3\">Educational attainment</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            contentEditable=\"false\"\r\n                                            value={educationalAttainment}\r\n                                            required\r\n                                        />\r\n                                        <label className=\"mt-3\">College</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            contentEditable=\"false\"\r\n                                            value={college}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"ml-3\">\r\n                                        <label>Position</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            contentEditable=\"false\"\r\n                                            value={position.toUpperCase()}\r\n                                            required\r\n                                        />\r\n                                        <label className=\"mt-3\">Field of specialization</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            contentEditable=\"false\"\r\n                                            value={fieldOfSpecialization}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"3\"></Col>\r\n                                    <Col md=\"9\">\r\n                                        <label htmlFor=\"\" className=\"badge badge-primary\">Researches</label>\r\n                                        <ul>\r\n                                            <li>No data</li>\r\n                                        </ul>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\"></Col>\r\n                                    <Col md=\"9\">\r\n                                        <label htmlFor=\"\" className=\"badge badge-primary\">Seminars</label>\r\n                                        <ul>\r\n                                            <li>No data</li>\r\n                                        </ul>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"light\" onClick={() => toggleModal(CREATE_UPDATE)}>Close</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalActivateAccount} toggle={() => toggleModal(ACTIVATE_ACCOUNT)} size=\"md\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={() => toggleModal(ACTIVATE_ACCOUNT)}>Activate Account</ModalHeader>\r\n                <Form>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Input\r\n                                type=\"hidden\"\r\n                                name=\"faculty_id\"\r\n                                id=\"faculty_id\"\r\n                                value=\"\"\r\n                            />\r\n                            <FormGroup>\r\n                                <Label>Username <span className=\"text-danger\">*</span></Label>\r\n                                <div style={{ 'position' : 'relative' }}>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        id=\"username\"\r\n                                        value={username}\r\n                                        onChange={e => { setUsername(e.target.value) }}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Password <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type={showPassword === true ? \"text\" : \"password\"}\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    onChange={e => { setPassword(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input value={showPassword} onChange={() => setShowPassword(!showPassword)} type=\"checkbox\" />{' '}\r\n                                    Show password\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <Label>User Type <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"user_type\"\r\n                                    id=\"user_type\"\r\n                                    value={userType}\r\n                                    onChange={e => { setUserType(e.target.value) }}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    <option value=\"user\">User</option>\r\n                                    <option value=\"guest\">Guest</option>\r\n                                    <option value=\"research_head\">Research Head</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Status </Label><br/>\r\n                                <div className=\"badge badge-secondary\">For Activation</div>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\"form-control\" type=\"button\" color=\"danger\" disabled>Disable</Button>\r\n                        <Button className=\"form-control\" type=\"submit\" color=\"primary\">Activate</Button>\r\n                        <Button color=\"light\" onClick={() => toggleModal(ACTIVATE_ACCOUNT)}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Account</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/campus\">Account</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <ReactDatatable\r\n                            className=\"table\"\r\n                            tHeadClassName=\"thead-dark\" \r\n                            config={dtConfig}\r\n                            records={account}\r\n                            columns={dtColumns}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Account;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// import DefaultAvatar from \"../../../profile-avatar.svg\";\r\nimport DefaultAvatar from \"../../../images/profile-picture.svg\";\r\nimport { getDepartment } from \"../../../redux/actions/department_action\";\r\nimport { updateAccount } from \"../../../redux/actions/account_action\";\r\n\r\nconst formSchema = yup.object().shape({\r\n    first_name: yup.string().required(\"First name field is required\"),\r\n    last_name: yup.string().required(\"Last name field is required\"),\r\n    position: yup.string().required(\"Position field is required\"),\r\n    college: yup.string().required(\"College field is required\"),\r\n});\r\n\r\nconst Profile = ({ currentUser }) => {\r\n    const [userId, setUserId] = useState(currentUser.id);\r\n    const [firstName, setFirstName] = useState(currentUser.first_name);\r\n    const [middleInitial, setmiddleInitial] = useState(\r\n        currentUser.middle_initial\r\n    );\r\n    const [lastName, setLastName] = useState(currentUser.last_name);\r\n    const [fullName, setFullName] = useState(currentUser.full_name);\r\n    const [position, setPosition] = useState(currentUser.position);\r\n    const [college, setCollege] = useState(currentUser.college);\r\n    const [campus, setCampus] = useState(currentUser.campus);\r\n    const [fieldOfSpecialization, setFieldOfSpecialization] = useState(\r\n        currentUser.field_of_specialization\r\n    );\r\n    const [educationalAttainment, setEducationalAttainment] = useState(\r\n        currentUser.educational_attainment\r\n    );\r\n\r\n    const department = useSelector((state) => state.department.departments);\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(formSchema),\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartment());\r\n    }, [dispatch]);\r\n\r\n    const onSubmit = (data) => {\r\n        const profileData = {\r\n            user_id: data.user_id,\r\n            first_name: data.first_name,\r\n            middle_initial: data.middle_initial,\r\n            last_name: data.last_name,\r\n            full_name: `${data.first_name} ${data.middle_initial} ${data.last_name}`,\r\n            position: data.position,\r\n            college: data.college,\r\n            field_of_specialization: data.field_of_specialization,\r\n            educational_attainment: data.educational_attainment,\r\n        };\r\n\r\n        dispatch(updateAccount(profileData));\r\n    };\r\n\r\n    const getColleges = () => {\r\n        const colleges = [];\r\n\r\n        for (let i = 0; i < department.length; i++) {\r\n            colleges.push(\r\n                <option\r\n                    key={department[i]._id}\r\n                    value={department[i].department_code}\r\n                    // data-campus={department[i].campus_name}\r\n                >\r\n                    {department[i].department_name}\r\n                </option>\r\n            );\r\n        }\r\n\r\n        return colleges;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={true}\r\n                draggable={true}\r\n                pauseOnHover={true}\r\n            />\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Personal Information\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/profile\">Profile</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Row className=\"pt-4 pb-4\">\r\n                                <Col md=\"5\" className=\"ml-5\">\r\n                                    <FormGroup className=\"text-center\">\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            onClick={() =>\r\n                                                alert(\"Will be updated soon.\")\r\n                                            }\r\n                                        >\r\n                                            <img\r\n                                                src={DefaultAvatar}\r\n                                                alt=\"profile\"\r\n                                                width=\"150\"\r\n                                                height=\"150\"\r\n                                            />\r\n                                        </a>\r\n                                    </FormGroup>\r\n                                    {/* <FormGroup>\r\n                                        <Label>Username <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"username\"\r\n                                            value={userName}\r\n                                            {...register(\"username\")}\r\n                                        ></Input>\r\n                                        <small className=\"text-danger\">\r\n                                            { errors.username?.message }\r\n                                        </small>\r\n                                    </FormGroup> */}\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            First name{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        {/* <Input\r\n                                            type=\"text\"\r\n                                            id=\"user_id\"\r\n                                            name=\"user_id\"\r\n                                            defaultValue={userId}\r\n                                            {...register(\"user_id\")}\r\n                                            placeholder=\"User id\"\r\n                                        ></Input> */}\r\n                                        <input\r\n                                            className=\"\"\r\n                                            type=\"hidden\"\r\n                                            id=\"user_id\"\r\n                                            name=\"user_id\"\r\n                                            defaultValue={userId}\r\n                                            {...register(\"user_id\")}\r\n                                        />\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.user_id?.message}\r\n                                        </small>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            id=\"first_name\"\r\n                                            name=\"first_name\"\r\n                                            defaultValue={firstName}\r\n                                            {...register(\"first_name\")}\r\n                                        />\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.first_name?.message}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            Last name{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"last_name\"\r\n                                            defaultValue={lastName}\r\n                                            {...register(\"last_name\")}\r\n                                        ></input>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.last_name?.message}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Middle initial / name</Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"middle_initial\"\r\n                                            defaultValue={middleInitial}\r\n                                            {...register(\"middle_initial\")}\r\n                                        ></input>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"1\">\r\n                                    <div\r\n                                        className=\"v-divider\"\r\n                                        style={{\r\n                                            marginLeft: \"35px\",\r\n                                            width: \"1px\",\r\n                                            height: \"100%\",\r\n                                            borderLeft: \"1px dotted grey\",\r\n                                        }}\r\n                                    ></div>\r\n                                </Col>\r\n                                <Col md=\"5\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            Position{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            type=\"select\"\r\n                                            name=\"position\"\r\n                                            defaultValue={position}\r\n                                            {...register(\"position\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"instructor i\">\r\n                                                Instructor I\r\n                                            </option>\r\n                                            <option value=\"instructor ii\">\r\n                                                Instructor II\r\n                                            </option>\r\n                                            <option value=\"instructor iii\">\r\n                                                Instructor III\r\n                                            </option>\r\n                                            <option value=\"assistant professor i\">\r\n                                                Assistant Professor I\r\n                                            </option>\r\n                                            <option value=\"assistant professor ii\">\r\n                                                Assistant Professor II\r\n                                            </option>\r\n                                            <option value=\"assistant professor iii\">\r\n                                                Assistant Professor III\r\n                                            </option>\r\n                                            <option value=\"assistant professor iii\">\r\n                                                Assistant Professor III\r\n                                            </option>\r\n                                            <option value=\"assistant professor iv\">\r\n                                                Assistant Professor IV\r\n                                            </option>\r\n                                            <option value=\"associate professor i\">\r\n                                                Associate Professor I\r\n                                            </option>\r\n                                            <option value=\"associate professor ii\">\r\n                                                Associate Professor II\r\n                                            </option>\r\n                                            <option value=\"associate professor iii\">\r\n                                                Associate Professor III\r\n                                            </option>\r\n                                            <option value=\"associate professor iv\">\r\n                                                Associate Professor IV\r\n                                            </option>\r\n                                            <option value=\"associate professor v\">\r\n                                                Associate Professor V\r\n                                            </option>\r\n                                            <option value=\"professor i\">\r\n                                                Professor I\r\n                                            </option>\r\n                                            <option value=\"professor ii\">\r\n                                                Professor II\r\n                                            </option>\r\n                                            <option value=\"professor iii\">\r\n                                                Professor III\r\n                                            </option>\r\n                                            <option value=\"professor iv\">\r\n                                                Professor IV\r\n                                            </option>\r\n                                            <option value=\"professor v\">\r\n                                                Professor V\r\n                                            </option>\r\n                                            <option value=\"professor vi\">\r\n                                                Professor VI\r\n                                            </option>\r\n                                        </select>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.position?.message}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            College{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"college\"\r\n                                            id=\"college\"\r\n                                            defaultValue={college}\r\n                                            {...register(\"college\")}\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"CITE\">\r\n                                                College of Information\r\n                                                Technology\r\n                                            </option>\r\n                                            <option value=\"CTE\">\r\n                                                College of Teacher Education\r\n                                            </option>\r\n                                            <option value=\"CBM\">\r\n                                                College of Business and\r\n                                                Management\r\n                                            </option>\r\n                                            <option value=\"CAFS\">\r\n                                                College of Agriculture,\r\n                                                Fisheries and Forestry\r\n                                            </option>\r\n                                        </select>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.college?.message}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Field of Specialization</Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"field_of_specialization\"\r\n                                            defaultValue={fieldOfSpecialization}\r\n                                            {...register(\r\n                                                \"field_of_specialization\"\r\n                                            )}\r\n                                        ></input>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Educational Attainment</Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"educational_attainment\"\r\n                                            defaultValue={educationalAttainment}\r\n                                            {...register(\r\n                                                \"educational_attainment\"\r\n                                            )}\r\n                                        ></input>\r\n                                    </FormGroup>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-purple mt-3\"\r\n                                        style={{ float: \"right\" }}\r\n                                    >\r\n                                        Save Changes\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { changePassword } from \"../../../redux/actions/auth_action\";\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst formSchema = yup.object().shape({\r\n    old_password: yup.string().required(\"Old password field is required.\"),\r\n    new_password: yup.string().required(\"New password field is required.\"),\r\n    confirm_password: yup\r\n        .string()\r\n        .oneOf([yup.ref(\"new_password\"), null])\r\n        .required(\"Confirm password field is required.\"),\r\n});\r\n\r\nconst ChangePassword = ({ currentUser }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n    } = useForm({\r\n        resolver: yupResolver(formSchema),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        const isConfirm = window.confirm(\r\n            \"Are you sure that you want to change your password?\"\r\n        );\r\n\r\n        if (isConfirm) {\r\n            dispatch(changePassword(data));\r\n        } else {\r\n            reset({});\r\n        }\r\n    };\r\n\r\n    console.log(\"Current user: \", currentUser);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Change Password\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/change-password\">\r\n                                            Change Password\r\n                                        </a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Row className=\"pt-4 pb-4\">\r\n                            <Col md=\"5\" className=\"ml-4\">\r\n                                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            Old Password{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"hidden\"\r\n                                            name=\"username\"\r\n                                            value={\r\n                                                !currentUser\r\n                                                    ? \"\"\r\n                                                    : currentUser.username\r\n                                            }\r\n                                            {...register(\"username\")}\r\n                                        ></input>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            name=\"old_password\"\r\n                                            {...register(\"old_password\")}\r\n                                        ></input>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.old_password?.message}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            New Password{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            name=\"new_password\"\r\n                                            {...register(\"new_password\")}\r\n                                        ></input>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.new_password?.message}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            Confirm Password{\" \"}\r\n                                            <span className=\"text-danger\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            name=\"confirm_password\"\r\n                                            {...register(\"confirm_password\")}\r\n                                        ></input>\r\n                                        <small className=\"text-danger\">\r\n                                            {errors.confirm_password?.message &&\r\n                                                \"Passwords did not match.\"}\r\n                                        </small>\r\n                                    </FormGroup>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-purple mt-3\"\r\n                                        style={{ float: \"right\" }}\r\n                                    >\r\n                                        Save Changes\r\n                                    </Button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const loginAccount = (credentials) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.loginAccount(credentials); \r\n        \r\n        if(data.status === 'success') {\r\n            dispatch({ \r\n                type: 'LOG_IN'\r\n                , payload: data.results.details \r\n            });\r\n            \r\n            localStorage.setItem('token', data.results.token);\r\n            window.location = \"/dashboard\";\r\n        } else {\r\n            console.log(data.message);\r\n            window.location = \"/login\";\r\n        }\r\n    } catch (error) {\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const changePassword = (credentials) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.changePassword(credentials);\r\n        \r\n        if(data.success) {\r\n            dispatch({ \r\n                type: 'CHANGE_PASSWORD', \r\n                payload: data.results \r\n            });\r\n\r\n            toast.success(data.message);\r\n            localStorage.setItem('auth-token', \"\");\r\n            window.location = \"/login\";\r\n        } else {\r\n            toast.error(data.message);\r\n        }\r\n    } catch (error) {\r\n        toast.error(\"Unable to update password.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sdssu-logo.fc42c563.webp\";","export default __webpack_public_path__ + \"static/media/research-collaboration.ac8d233f.svg\";","import React, { useState, useEffect, useContext, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport AccountContext from \"../../context/AccountContext\";\r\n\r\nimport \"./login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nimport SDSSULOGO from \"../../images/sdssu-logo.webp\";\r\nimport COVERPHOTO from \"../../images/research-collaboration.svg\";\r\n\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n} from \"reactstrap\";\r\n\r\nconst Login = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const [username, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const { setUserData } = useContext(AccountContext);\r\n    const history = useHistory();\r\n\r\n    const onSubmitFormLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const loginResponse = await axios.post(\r\n            \"http://localhost:3001/account/login\",\r\n            { username, password }\r\n        );\r\n\r\n        const { success, token, user, message } = loginResponse.data;\r\n\r\n        if (success) {\r\n            setUserData({ token, user });\r\n            localStorage.setItem(\"auth-token\", `Bearer ${token}`);\r\n\r\n            history.push(\"/dashboard\");\r\n        } else {\r\n            toast.error(message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        position: \"relative\",\r\n                        height: \"100%\",\r\n                        margin: \"0 auto\",\r\n                    }}\r\n                >\r\n                    <Col md=\"7\">\r\n                        <div\r\n                            style={{\r\n                                position: \"relative\",\r\n                                width: \"100%\",\r\n                                top: \"20%\",\r\n                                bottom: \"30%\",\r\n                                height: \"20%\",\r\n                            }}\r\n                        >\r\n                            <h1 className=\"title text-primary font-weight-bold\">\r\n                                SURIGAO DEL SUR STATE UNIVERSITY{\" \"}\r\n                            </h1>\r\n                            <h2 className=\"\">Research Management System</h2>\r\n                            <img\r\n                                style={{\r\n                                    position: \"fixed\",\r\n                                    zIndex: \"0\",\r\n                                }}\r\n                                className=\"d-block mx-auto\"\r\n                                src={COVERPHOTO}\r\n                                alt=\"\"\r\n                                width=\"500\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"5\">\r\n                        <Card\r\n                            className=\"pt-3 pr-3 pl-3 pb-5\"\r\n                            style={{\r\n                                position: \"relative\",\r\n                                width: \"400px\",\r\n                                // top: \"20%\",\r\n                                margin: \"150px 0\",\r\n                                borderRadius: \"8px\",\r\n                                boxShadow:\r\n                                    \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                            }}\r\n                        >\r\n                            <img\r\n                                style={{\r\n                                    padding: \"0\",\r\n                                    margin: \"0\",\r\n                                    height: \"120px\",\r\n                                    width: \"120px\",\r\n                                    position: \"relative\",\r\n                                    top: \"-70px\",\r\n                                    left: \"120px\",\r\n                                    bottom: \"-30px\",\r\n                                }}\r\n                                src={SDSSULOGO}\r\n                                alt=\"sdssu-logo\"\r\n                            />\r\n                            <Form\r\n                                style={{ marginTop: \"-40px\" }}\r\n                                onSubmit={onSubmitFormLogin}\r\n                            >\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        style={{\r\n                                            borderRadius: \"6px\",\r\n                                            border: \"1px solid #dddfe2\",\r\n                                        }}\r\n                                        className=\"pt-4 pb-4\"\r\n                                        autoComplete=\"false\"\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        id=\"username\"\r\n                                        value={username}\r\n                                        onChange={(e) => {\r\n                                            setUserName(e.target.value);\r\n                                        }}\r\n                                        placeholder=\"Username\"\r\n                                        required\r\n                                    />\r\n                                    {/* <small className=\"text-danger\">Username field is required</small> */}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        style={{\r\n                                            borderRadius: \"6px\",\r\n                                            border: \"1px solid #dddfe2\",\r\n                                        }}\r\n                                        className=\"pt-4 pb-4\"\r\n                                        autoComplete=\"false\"\r\n                                        type={\r\n                                            showPassword ? \"text\" : \"password\"\r\n                                        }\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => {\r\n                                            setPassword(e.target.value);\r\n                                        }}\r\n                                        placeholder=\"Password\"\r\n                                        required\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check className=\"\">\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            onChange={() => {\r\n                                                setShowPassword(!showPassword);\r\n                                            }}\r\n                                        />{\" \"}\r\n                                        Show password\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <button\r\n                                        style={{\r\n                                            padding: \"8px 16px\",\r\n                                            borderRadius: \"6px\",\r\n                                            width: \"100%\",\r\n                                            fontSize: \"20px\",\r\n                                        }}\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary mt-3\"\r\n                                    >\r\n                                        Log In\r\n                                    </button>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, Fragment, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { createAccount } from \"../../redux/actions/account_action\";\r\nimport { getDepartment } from \"../../redux/actions/department_action\";\r\nimport { getCampus } from \"../../redux/actions/campus_action\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst formSchema = yup.object().shape({\r\n    first_name: yup.string().required(\"First name field is required.\"),\r\n    last_name: yup.string().required(\"Last name field is required.\"),\r\n    position: yup.string().required(\"Position field is required.\"),\r\n    college: yup.string().required(\"College field is required.\"),\r\n    campus: yup.string().required(\"Campus field is required.\"),\r\n    username: yup.string().required(\"Username field is required.\"),\r\n    user_type: yup.string().required(\"User type field is required.\"),\r\n    password: yup.string().required(\"Password field is required.\"),\r\n})\r\n\r\nconst Registration = () => {\r\n    const department = useSelector((state) => state.department.departments);\r\n    const campus = useSelector((state) => state.campus.campuses);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(\"department\", department);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    // const [firstName, setFirstName] = useState(\"\");\r\n    // const [lastName, setLastName] = useState(\"\");\r\n    // const [middleInitial, setMiddleInitial] = useState(\"\");\r\n    // const [position, setPosition] = useState(\"\");\r\n    // const [college, setCollege] = useState(\"\");\r\n    // const [campus, setCampus] = useState(\"\");\r\n    // const [userName, setUserName] = useState(\"\");\r\n    // const [userType, setUserType] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n\r\n    const { register, handleSubmit, formState: { errors }, reset, watch } = useForm({\r\n        resolver: yupResolver(formSchema),\r\n        defaultValues: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getDepartment());\r\n        dispatch(getCampus());\r\n    }, [dispatch]);\r\n\r\n    const onGenerateCredentials = () => {\r\n        const year = new Date().getFullYear();\r\n        const fname = watch(\"first_name\");\r\n        const lname = watch(\"last_name\");\r\n        const uname = `${lname}.${fname}`.split(\" \").join(\"_\").toLocaleLowerCase();\r\n        const pword = `${uname}${year}`;\r\n        \r\n        document.getElementById(\"username\").value = uname;\r\n        document.getElementById(\"password\").value = pword;\r\n    };\r\n\r\n    // const onSubmitFormRegistration = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     const data = {\r\n    //         first_name: firstName,\r\n    //         last_name: lastName,\r\n    //         middle_initial: middleInitial,\r\n    //         full_name: `${lastName}, ${firstName} ${middleInitial}`,\r\n    //         position: position,\r\n    //         college: college,\r\n    //         campus: campus,\r\n    //         username: userName,\r\n    //         user_type: userType,\r\n    //         password: password,\r\n    //     };\r\n\r\n    //     dispatch(createAccount(data));\r\n    //     clearForm();\r\n    // };\r\n\r\n    const onSubmit = (data) => {\r\n        const details = {\r\n            first_name: data.first_name,\r\n            last_name: data.last_name,\r\n            middle_initial: data.middle_initial,\r\n            full_name: `${data.first_name} ${data.middle_initial} ${data.last_name}`,\r\n            position: data.position,\r\n            college: data.college,\r\n            campus: data.campus,\r\n            username: data.username,\r\n            user_type: data.user_type,\r\n            password: data.password\r\n        }\r\n\r\n        dispatch(createAccount(details));\r\n        reset({});\r\n    }\r\n\r\n    // const clearForm = () => {\r\n    //     setFirstName(\"\");\r\n    //     setLastName(\"\");\r\n    //     setMiddleInitial(\"\");\r\n    //     setPosition(\"\");\r\n    //     setCollege(\"\");\r\n    //     setCampus(\"\");\r\n    //     setUserName(\"\");\r\n    //     setUserType(\"\");\r\n    //     setPassword(\"\");\r\n    // };\r\n\r\n    const getColleges = () => {\r\n        const colleges = [];\r\n\r\n        for (let i = 0; i < department.length; i++) {\r\n            colleges.push(\r\n                <option\r\n                    key={department[i]._id}\r\n                    value={department[i].department_code}\r\n                    data-campus={department[i].campus_name}\r\n                >\r\n                    {department[i].department_name}\r\n                </option>\r\n            );\r\n        }\r\n\r\n        return colleges;\r\n    };\r\n\r\n    const getAllCampus = () => {\r\n        const campuses = [];\r\n\r\n        for (let i = 0; i < campus.length; i++) {\r\n            campuses.push(\r\n                <option\r\n                    key={campus[i]._id}\r\n                    value={campus[i].campus_name.toLocaleLowerCase().trim()}\r\n                >\r\n                    {campus[i].campus_name}\r\n                </option>\r\n            );\r\n        }\r\n\r\n        return campuses;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">\r\n                            Account Registration\r\n                        </h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"breadcrumb-item text-muted active\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        <a href=\"/registration\">Registration</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col className=\"\" md=\"5\">\r\n                                    <div className=\"stepper\">\r\n                                        <p className=\"badge badge-primary\">\r\n                                            <span>STEP 1: </span> Basic\r\n                                            Information\r\n                                        </p>\r\n                                    </div>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            First name{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={errors.first_name ? \"is-invalid form-control\" : \"form-control\"}\r\n                                            type=\"text\"\r\n                                            name=\"first_name\"\r\n                                            {...register(\"first_name\")}\r\n                                        />\r\n                                        <small className=\"text-danger\">{errors.first_name?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">\r\n                                            Last name{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={ errors.last_name ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"text\"\r\n                                            name=\"last_name\"\r\n                                            id=\"last_name\"\r\n                                            {...register(\"last_name\")}\r\n                                            // value={lastName}\r\n                                            // onChange={(e) => {\r\n                                            //     setLastName(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                        />\r\n                                        <small className=\"text-danger\">{errors.last_name?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">M.I.</Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"middle_initial\"\r\n                                            id=\"middle_initial\"\r\n                                            // ref={inputRef}\r\n                                            {...register(\"middle_initial\")}\r\n                                            // value={middleInitial}\r\n                                            // onChange={(e) => {\r\n                                            //     setMiddleInitial(\r\n                                            //         e.target.value\r\n                                            //     );\r\n                                            // }}\r\n                                        />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">\r\n                                            Position{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={ errors.position ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"position\"\r\n                                            id=\"position\"\r\n                                            // ref={fieldsRef}\r\n                                            {...register(\"position\")}\r\n                                            // value={position}\r\n                                            // onChange={(e) => {\r\n                                            //     setPosition(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"instructor i\">\r\n                                                Instructor I\r\n                                            </option>\r\n                                            <option value=\"instructor ii\">\r\n                                                Instructor II\r\n                                            </option>\r\n                                            <option value=\"instructor iii\">\r\n                                                Instructor III\r\n                                            </option>\r\n                                            <option value=\"assistant professor i\">\r\n                                                Assistant Professor I\r\n                                            </option>\r\n                                            <option value=\"assistant professor ii\">\r\n                                                Assistant Professor II\r\n                                            </option>\r\n                                            <option value=\"assistant professor iii\">\r\n                                                Assistant Professor III\r\n                                            </option>\r\n                                            <option value=\"assistant professor iii\">\r\n                                                Assistant Professor III\r\n                                            </option>\r\n                                            <option value=\"assistant professor iv\">\r\n                                                Assistant Professor IV\r\n                                            </option>\r\n                                            <option value=\"associate professor i\">\r\n                                                Associate Professor I\r\n                                            </option>\r\n                                            <option value=\"associate professor ii\">\r\n                                                Associate Professor II\r\n                                            </option>\r\n                                            <option value=\"associate professor iii\">\r\n                                                Associate Professor III\r\n                                            </option>\r\n                                            <option value=\"associate professor iv\">\r\n                                                Associate Professor IV\r\n                                            </option>\r\n                                            <option value=\"associate professor v\">\r\n                                                Associate Professor V\r\n                                            </option>\r\n                                            <option value=\"professor i\">\r\n                                                Professor I\r\n                                            </option>\r\n                                            <option value=\"professor ii\">\r\n                                                Professor II\r\n                                            </option>\r\n                                            <option value=\"professor iii\">\r\n                                                Professor III\r\n                                            </option>\r\n                                            <option value=\"professor iv\">\r\n                                                Professor IV\r\n                                            </option>\r\n                                            <option value=\"professor v\">\r\n                                                Professor V\r\n                                            </option>\r\n                                            <option value=\"professor vi\">\r\n                                                Professor VI\r\n                                            </option>\r\n                                        </select>\r\n                                        <small className=\"text-danger\">{errors.position?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">\r\n                                            College{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={ errors.college ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"college\"\r\n                                            id=\"college\"\r\n                                            {...register(\"college\")}\r\n                                            // value={college}\r\n                                            // onChange={(e) => {\r\n                                            //     let index =\r\n                                            //         e.nativeEvent.target\r\n                                            //             .selectedIndex;\r\n                                            //     let campus =\r\n                                            //         e.nativeEvent.target[index]\r\n                                            //             .dataset.campus;\r\n\r\n                                            //     setCollege(e.target.value);\r\n                                            //     setCampus(campus);\r\n                                            // }}\r\n                                            // required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            {getColleges()}\r\n                                        </select>\r\n                                        <small className=\"text-danger\">{errors.college?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">\r\n                                            Campus{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={ errors.college ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"campus\"\r\n                                            id=\"campus\"\r\n                                            {...register(\"campus\")}\r\n                                            // value={college}\r\n                                            // onChange={(e) => {\r\n                                            //     let index =\r\n                                            //         e.nativeEvent.target\r\n                                            //             .selectedIndex;\r\n                                            //     let campus =\r\n                                            //         e.nativeEvent.target[index]\r\n                                            //             .dataset.campus;\r\n\r\n                                            //     setCollege(e.target.value);\r\n                                            //     setCampus(campus);\r\n                                            // }}\r\n                                            // required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            {getAllCampus()}\r\n                                        </select>\r\n                                        <small className=\"text-danger\">{errors.campus?.message}</small>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"1\">\r\n                                    <div\r\n                                        className=\"v-divider\"\r\n                                        style={{\r\n                                            marginLeft: \"35px\",\r\n                                            width: \"1px\",\r\n                                            height: \"100%\",\r\n                                            borderLeft: \"1px dotted grey\",\r\n                                        }}\r\n                                    ></div>\r\n                                </Col>\r\n                                <Col md=\"5\">\r\n                                    <div className=\"stepper\">\r\n                                        <p className=\"badge badge-primary\">\r\n                                            <span>STEP 2: </span> Generate\r\n                                            Credentials\r\n                                        </p>\r\n                                    </div>\r\n                                    <Button\r\n                                        className=\"mb-3 btn btn-success\"\r\n                                        type=\"submit\"\r\n                                        // disabled={\r\n                                        //     firstName !== \"\" &&\r\n                                        //     lastName !== \"\" &&\r\n                                        //     position !== \"\" &&\r\n                                        //     college !== \"\"\r\n                                        //         ? false\r\n                                        //         : true\r\n                                        // }\r\n                                        onClick={() => { onGenerateCredentials() }}\r\n                                    >\r\n                                        Generate\r\n                                    </Button>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">\r\n                                            Username{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={ errors.username ? \"form-control is-invalid\" : \"form-control\" }\r\n                                            type=\"text\"\r\n                                            name=\"username\"\r\n                                            id=\"username\"\r\n                                            {...register(\"username\")}\r\n                                            // value={userName}\r\n                                            // onChange={(e) => {\r\n                                            //     setUserName(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                        ></input>\r\n                                        <small className=\"text-danger\">{errors.username?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label className=\"\">\r\n                                            User type{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <select\r\n                                            className={ errors.user_type ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type=\"select\"\r\n                                            name=\"user_type\"\r\n                                            id=\"user_type\"\r\n                                            {...register(\"user_type\")}\r\n                                            // value={userType}\r\n                                            // onChange={(e) => {\r\n                                            //     setUserType(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"user\">User</option>\r\n                                            <option value=\"admin\">\r\n                                                Administrator\r\n                                            </option>\r\n                                            <option value=\"rd\">\r\n                                                Research Director\r\n                                            </option>\r\n                                            <option value=\"rh\">\r\n                                                Research Head\r\n                                            </option>\r\n                                            <option value=\"cd\">\r\n                                                Campus Director\r\n                                            </option>\r\n                                        </select>\r\n                                        <small className=\"text-danger\">{errors.user_type?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                            Password{\" \"}\r\n                                            <span className=\"text-danger font-weight-bold\">\r\n                                                *\r\n                                            </span>\r\n                                        </Label>\r\n                                        <input\r\n                                            className={ errors.password ? \"is-invalid form-control\" : \"form-control\" }\r\n                                            type={\r\n                                                showPassword\r\n                                                    ? \"text\"\r\n                                                    : \"password\"\r\n                                            }\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            {...register(\"password\")}\r\n                                            // value={password}\r\n                                            // onChange={(e) => {\r\n                                            //     setPassword(e.target.value);\r\n                                            // }}\r\n                                            // required\r\n                                        ></input>\r\n                                        <small className=\"text-danger\">{errors.password?.message}</small>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                onChange={() => {\r\n                                                    setShowPassword(\r\n                                                        !showPassword\r\n                                                    );\r\n                                                }}\r\n                                            />{\" \"}\r\n                                            Show password\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>&nbsp;</Label>\r\n                                        <Input\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary\"\r\n                                            value=\"Create account\"\r\n                                        ></Input>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div className=\"text-center mt-5\">\r\n            <h1>Oops.</h1>\r\n            <h3>The page you're trying to reach doesn't exist.</h3>\r\n            <svg\r\n                id=\"9af98f83-10c5-4067-bc84-20554b2827d8\"\r\n                data-name=\"Layer 1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"450\"\r\n                height=\"450\"\r\n                viewBox=\"0 0 1009.54 789.93\"\r\n            >\r\n                <defs>\r\n                    <linearGradient\r\n                        id=\"07c62293-c0d3-4921-8e06-4e39241449cd\"\r\n                        x1=\"318.22\"\r\n                        y1=\"488.45\"\r\n                        x2=\"630.35\"\r\n                        y2=\"488.45\"\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop\r\n                            offset=\"0\"\r\n                            stop-color=\"gray\"\r\n                            stop-opacity=\"0.25\"\r\n                        />\r\n                        <stop\r\n                            offset=\"0.54\"\r\n                            stop-color=\"gray\"\r\n                            stop-opacity=\"0.12\"\r\n                        />\r\n                        <stop offset=\"1\" stop-color=\"gray\" stop-opacity=\"0.1\" />\r\n                    </linearGradient>\r\n                </defs>\r\n                <title>empty</title>\r\n                <ellipse\r\n                    cx=\"354.13\"\r\n                    cy=\"741.27\"\r\n                    rx=\"176.1\"\r\n                    ry=\"33.36\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M681.78,166.43c-64.72-2.24-126.36-23.14-185.22-46S379.4,72.25,316.23,60.14C275.6,52.35,229.13,51.24,196.4,73c-31.51,21-41.69,57.15-47.16,90.72-4.12,25.26-6.54,51.85,4.74,75.5,7.84,16.42,21.74,30.22,31.36,45.95,33.47,54.72,9.81,122.2-26.45,175.63-17,25.06-36.75,49-49.88,75.65S89.81,593.74,101.3,621c11.38,27,38.51,47.24,67.9,61.49,59.69,28.95,130,37.23,198.61,41.93,151.83,10.38,304.46,5.89,456.69,1.38,56.34-1.66,112.92-3.35,168.34-12.06,30.78-4.84,62.55-12.52,84.9-31.06,28.36-23.53,35.39-63.37,16.38-92.87-31.88-49.5-120-61.79-142.31-114.9-12.26-29.24.33-61.8,18.16-88.91,38.24-58.17,102.33-109.2,105.7-175.68,2.32-45.66-28.49-91.39-76.13-113-49.93-22.65-119.18-19.8-156,17.69C805.59,153.57,738.93,168.42,681.78,166.43Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M630.35,416.77l-30.63-20.65h0l15.45-23-80.9-6.45L505.2,389.15l-36.39-20.4-30.35,3.65-.36-8a225.78,225.78,0,0,0-2.51-24.9c.13-2.5.22-5.37.21-8.49,0-13.15-1.78-30.58-9.6-42.2L428,272.63,413.4,255.38a110.37,110.37,0,0,1,8-13.46c.5-.72,1-1.42,1.54-2.1,18.95-1.37,33.9-16.95,33.9-36,0-.88,0-1.76-.1-2.63,0-.35-.07-.71-.11-1.06,1.85,1,3.72,2,5.59,3,.35.5.75,1,1.19,1.59l0,0,.09.11.56.69.18.21c.2.24.41.47.62.71l.14.16c.53.59,1.09,1.19,1.69,1.78a1.8,1.8,0,0,1,.2.19l.75.7.21.19c.64.57,1.32,1.12,2,1.64l.22.16.86.59.28.18c.33.2.67.41,1,.6l.12.07c.39.21.79.41,1.19.6l.2.08q.51.22,1,.42l.31.11c.35.12.69.23,1.05.33l.22.06c.44.11.88.2,1.33.27h.05a10.88,10.88,0,0,0,1.28.13h.29a11,11,0,0,0,1.15,0h.25a11.85,11.85,0,0,0,1.43-.17,15.78,15.78,0,0,0,6.3-2.26,5.5,5.5,0,0,0,1.28-1.19c2-2.62-.2-5.49-.2-5.49h0c-.78-1.86-5.84-3.17-5.84-3.17s-16-6.68-16-12-4-32.92-45.29-39.23c0,0-26.86-1.51-34.41,12.87l-.16,1.68c-2.22,1.39-4.06,4.18-6.25,5a10.21,10.21,0,0,0-2.71,1l0-.19h0a2.58,2.58,0,0,0-.61.79,8,8,0,0,0-.83,3,11.3,11.3,0,0,1-1.31,3.63,8.07,8.07,0,0,1-.6.92h0l-.17.27a7.3,7.3,0,0,0,3.4-.55,16.93,16.93,0,0,1-1,4,3.32,3.32,0,0,0,3.08-1.84l0-.08.13-.18a8.44,8.44,0,0,0,.62-1.45l-.11.12c.2-.65.38-1.31.6-1.95a3.06,3.06,0,0,1,.49-1,2.42,2.42,0,0,1,2.07-.69l-.41,8.67h.18a11.83,11.83,0,0,1-.88,1.82c-1.42,2.3-4,3.87-4.95,6.39a9.4,9.4,0,0,0-.46,3.78c0,.75.09,1.51.15,2.26v-.06c.14,2,.18,3.9-.9,5.51-.74,1.1-1.93,1.93-2.34,3.18a3.1,3.1,0,0,0-.15,1.08,12.13,12.13,0,0,0,.68,3.21.14.14,0,0,0,0-.06,4.88,4.88,0,0,1,.17,2.36c-.45,2-2.88,3.67-2.76,5.58a2.15,2.15,0,0,0,.11.74,4.05,4.05,0,0,0,2.26,2,8.8,8.8,0,0,0,5.08,1.12,6.68,6.68,0,0,0,1.9-.65c-.7,1.61-1.42,3.2-2.15,4.71-.11.24-.23.48-.35.72,0,0-6.18-4.13-9.69,4.29a18.68,18.68,0,0,0-2.17,5.64,13.42,13.42,0,0,1-.74,2.32,14.93,14.93,0,0,1-6.68,6c-7.16,3.28-36.08,39.35-36.59,48.69a54.49,54.49,0,0,1-1.84,10.78,64.15,64.15,0,0,0-1.72,25.49,48.77,48.77,0,0,0,1.77,8.13c3.07,9.33,5.12,26.74,5.12,26.74l3.32,30.22a86,86,0,0,0,.54,12.49c-3.39,3.87-17,20-11.8,24.39,4,3.46,11,2.89,14.93,2.18-3.31,8.19-8.52,22.43-9.21,32.21-1,14.47,1.71,33.64,6,41s18.59,26.24,18.59,26.24-.67,25.9,4.44,35.31,7.17,28.93,7.17,28.93,4.77,16.48,2.38,22.54,4.43,11.1-2.73,15.13-16.32,94.86-16.32,94.86-3.69,59.53,0,62.56a3.75,3.75,0,0,0,.63.37v20s-2.56,4.2,7.85,5.05c7.13.57,27.34,1.86,39.33,2.61l9.29.58s22,4.38,31.72,0,26.95-4.28,24.39-15.85a32.92,32.92,0,0,0-1.36-4.63c-2.81-7.18-7.58-8-16.37-10-.51-.11-1-.21-1.45-.29-9.26-1.61-12.3,2.7-17.49-2.91-4.51-4.85-18.87-10.28-23.76-12,.12-.36.27-.71.39-1.08a7.32,7.32,0,0,1-3.71-1.81l13.25.84,7.89.49s18.7,3.73,27,0,22.9-3.63,20.72-13.46a28.21,28.21,0,0,0-1.15-3.94c-2.39-6.1-6.45-6.77-13.92-8.46-.43-.09-.83-.18-1.23-.25-7.87-1.37-10.45,2.29-14.86-2.47-3.78-4.06-15.71-8.61-20-10.16,0-2.22-3-5.38-4.89-8.55-2.22-3.7,1.88-16.65,1.88-16.65L411,658.74a10.38,10.38,0,0,1,2.8-.8s10.58-10.1,8.19-20.86a69.13,69.13,0,0,1-.76-9.83c3.48-3.23,8.27-8,9.63-10.94,2.22-4.79,0-28,0-28V499.56l17.7,1.79L464.62,503l4.89.5,16.06,1.62,36.91,3.73,33.26-6.3,14.39-2.72,29.59-5.6V421.83ZM386.74,176.86l-2.06-.22C385.36,176.67,386.08,176.8,386.74,176.86Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"url(#07c62293-c0d3-4921-8e06-4e39241449cd)\"\r\n                />\r\n                <path\r\n                    d=\"M558.56,463.78c-10,14.31-45.95,6.73-45.95,6.73l-27.86-26.07L481,440.91l6.29-13.36s2,.55,5.43,1.53C510.73,434.31,567,451.75,558.56,463.78Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#efb7b9\"\r\n                />\r\n                <path\r\n                    d=\"M492.7,429.08c-1.23,4.28-4.6,10.69-7.95,15.36L481,440.91l6.29-13.36S489.31,428.1,492.7,429.08Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M397.15,278.42s-25.68,11.39-24.42,39.36a461.14,461.14,0,0,0,5.88,53.76s-5.25,42.09,16.61,52.94,42.09,19.77,42.09,19.77,34.2,3.68,38.45,5.2,17.53-21.72,15.08-25.34S457,412.9,453,406.86s-13.25-9.77-13.25-9.77-9.55-5.78-10.2-11,1.87-9.11,2.51-11.4,2.26-24.4,2.26-24.4S445.1,271.59,397.15,278.42Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#dce6f2\"\r\n                />\r\n                <path\r\n                    d=\"M414.1,370.39s-35.23,5.9-31.82,18.23C382.28,388.62,395.07,375.31,414.1,370.39Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M414.37,375.38S395,391.19,398.79,392,414.37,375.38,414.37,375.38Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M423.68,380.89s-5.19,10.63-2,9.91S423.68,380.89,423.68,380.89Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M494,430.21l-2.14-.61c.61-2,.78-3.62.28-4.37-2.45-3.62-33.82-11.2-37.81-17.25s-13.25-9.77-13.25-9.77-9.55-5.78-10.2-11,1.87-9.11,2.51-11.4,2.26-24.41,2.26-24.41,10.75-78.69-37.2-71.86c0,0-25.68,11.4-24.43,39.37a459.85,459.85,0,0,0,5.89,53.76s-5.25,42.09,16.61,52.94,42.09,19.77,42.09,19.77,34.19,3.67,38.45,5.2c1.61.58,4.52-2.41,7.37-6.52l1.62,1.51,27.86,26.06s35.95,7.59,45.95-6.72C568.31,452.87,512.05,435.43,494,430.21Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M382.37,173.44a8.5,8.5,0,0,0-2.77,1.07c-1,.83-1,2.25-1.25,3.49a11.48,11.48,0,0,1-2,4.78,7.19,7.19,0,0,0,3.33-.55,17.14,17.14,0,0,1-1,4,3.24,3.24,0,0,0,3-1.83,19.26,19.26,0,0,0,1.25-3.51,2.89,2.89,0,0,1,.48-1c.92-1.09,2.63-.6,4.05-.46a6.65,6.65,0,0,0,6.08-2.92c1.51-2.29,1.6-8.15-2-8.77C387.78,167.12,385.44,172.3,382.37,173.44Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#965d7b\"\r\n                />\r\n                <g opacity=\"0.1\">\r\n                    <path\r\n                        d=\"M379.5,175.74c.09-.49.15-1,.26-1.49h0c-.95.83-1,2.24-1.25,3.49a11,11,0,0,1-.59,2.11A11.46,11.46,0,0,0,379.5,175.74Z\"\r\n                        transform=\"translate(-95.23 -55.03)\"\r\n                    />\r\n                    <path\r\n                        d=\"M379.82,184a16.63,16.63,0,0,0,1-4,7.16,7.16,0,0,1-3.17.55,11.57,11.57,0,0,1-1.15,2,7.12,7.12,0,0,0,3.32-.54,16.63,16.63,0,0,1-1,4,3.25,3.25,0,0,0,3-1.83,7.46,7.46,0,0,0,.6-1.43A3,3,0,0,1,379.82,184Z\"\r\n                        transform=\"translate(-95.23 -55.03)\"\r\n                    />\r\n                    <path\r\n                        d=\"M388.6,177.2c-1.42-.14-3.14-.63-4.06.46a3.09,3.09,0,0,0-.48,1c-.09.26-.17.53-.24.8.95-.75,2.49-.35,3.78-.22a6.68,6.68,0,0,0,6.08-2.92,5.54,5.54,0,0,0,.67-1.57A6.66,6.66,0,0,1,388.6,177.2Z\"\r\n                        transform=\"translate(-95.23 -55.03)\"\r\n                    />\r\n                </g>\r\n                <polygon\r\n                    points=\"317.24 201 332.49 219.34 330.5 237.85 312.07 209 317.24 201\"\r\n                    fill=\"#dce6f2\"\r\n                />\r\n                <polygon\r\n                    points=\"332.48 219.34 330.61 236.75 330.49 237.85 313.86 211.81 312.07 209 312.59 208.19 317.23 201 318.26 202.24 332.48 219.34\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M435.63,231.2c-5.16,1.48-10.09,6.56-14.38,12.73a108.65,108.65,0,0,0-7.76,13.34c-1.41,2.82-2.65,5.53-3.68,7.89l-.72,1.68c-1.74,4.11-2.71,6.86-2.71,6.86S366.88,244,373.13,242c2.1-.67,4.86-5.17,7.59-10.84l.34-.72c1.73-3.64,3.43-7.7,4.94-11.52,3.09-7.85,5.38-14.67,5.38-14.67S451.38,226.7,435.63,231.2Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#efb7b9\"\r\n                />\r\n                <path\r\n                    d=\"M459.26,202.58s9.12,16.5,21.37,14.25,7.21-8.86,7.21-8.86Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#444053\"\r\n                />\r\n                <path\r\n                    d=\"M441.59,773.73c-8.08,3.69-26.35,0-26.35,0l-7.7-.48c-10-.64-26.74-1.72-32.66-2.2-8.64-.71-6.52-4.25-6.52-4.25V745.41l41.92-10.62s16.57,5.67,21.11,10.62c4.31,4.72,6.83,1.09,14.52,2.45.38.07.78.15,1.2.25,7.3,1.67,11.26,2.33,13.6,8.38a28.1,28.1,0,0,1,1.13,3.9C464,770.13,449.66,770.06,441.59,773.73Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#a36468\"\r\n                />\r\n                <path\r\n                    d=\"M460.71,756.49a31.34,31.34,0,0,1-4.72,2.42c-5.5,2.51-10.73,5.57-16.29,7.94s-11.55,4.06-17.57,3.61c-3.15-.23-6.37-1-9.38-.1a21.66,21.66,0,0,0-5.21,2.89c-10-.64-26.74-1.72-32.66-2.2-8.64-.71-6.52-4.25-6.52-4.25v-2.5c.31,0,.66-.09,1.06-.12a18.88,18.88,0,0,1,6.1.91c4.34,1.18,8.66,2.34,13,3.5a10.27,10.27,0,0,1,5-6.38,15.94,15.94,0,0,1,8.06-1.85c6.73.09,13.1,3.28,19.82,3.6a10.92,10.92,0,0,0,5.49-.92c.92-.46,1.73-1.13,2.63-1.64a19.2,19.2,0,0,1,4.53-1.53A99.76,99.76,0,0,0,447,755.69c1.2-.47,2.6-1.32,2.44-2.6-.21-1.7-2.88-1.9-3.58-3.46a2,2,0,0,1,.08-1.77c.38.07.78.15,1.2.25C454.41,749.78,458.37,750.44,460.71,756.49Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M433.05,820.53c-9.5,4.34-31,0-31,0L393,820c-11.72-.75-31.46-2-38.43-2.59-10.17-.84-7.67-5-7.67-5V787.2l49.33-12.5s19.5,6.67,24.84,12.5c5.07,5.55,8,1.28,17.09,2.88.45.08.92.18,1.41.29,8.59,2,13.25,2.75,16,9.87a32.1,32.1,0,0,1,1.33,4.59C459.38,816.29,442.55,816.2,433.05,820.53Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#a36468\"\r\n                />\r\n                <path\r\n                    d=\"M455.55,800.24a37.23,37.23,0,0,1-5.55,2.85c-6.47,2.95-12.63,6.55-19.17,9.34s-13.59,4.77-20.68,4.25c-3.7-.27-7.49-1.2-11-.12A25.5,25.5,0,0,0,393,820c-11.72-.75-31.46-2-38.43-2.59-10.17-.84-7.67-5-7.67-5v-2.94a12.5,12.5,0,0,1,1.25-.14,21.94,21.94,0,0,1,7.18,1.07l15.29,4.12a12.1,12.1,0,0,1,5.93-7.51,18.66,18.66,0,0,1,9.49-2.18c7.92.11,15.41,3.86,23.32,4.24A12.91,12.91,0,0,0,415.8,808c1.09-.55,2-1.34,3.1-1.93a21.75,21.75,0,0,1,5.33-1.8,119.69,119.69,0,0,0,15.16-4.92c1.41-.56,3.06-1.56,2.87-3.06-.25-2-3.39-2.24-4.22-4.08a2.41,2.41,0,0,1,.1-2.08c.45.08.92.18,1.41.29C448.14,792.34,452.8,793.12,455.55,800.24Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M411.55,647.54l-2.67,62.83s-4,12.83-1.83,16.5,5.83,7.33,4.5,9.5S394.22,762,389.05,753s-10.27-48-10.27-48l4.77-48.17Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#444053\"\r\n                />\r\n                <path\r\n                    d=\"M423.13,491l7.42,9.92V587.2s2.17,23,0,27.75-13.17,14.25-13.17,14.25l-9.25-47.5,2-50.25Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#444053\"\r\n                />\r\n                <path\r\n                    d=\"M411.55,647.54l-2.67,62.83s-4,12.83-1.83,16.5,5.83,7.33,4.5,9.5S394.22,762,389.05,753s-10.27-48-10.27-48l4.77-48.17Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M423.13,491l7.42,9.92V587.2s2.17,23,0,27.75-13.17,14.25-13.17,14.25l-9.25-47.5,2-50.25Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M430.55,454.2v46.67l-8.33,36.33s-2.67,87.67-.34,98.33-8,20.67-8,20.67-6,.67-6,5.33-10,18-10,18l.33,26s4.34,48.67-2.33,58,2.33,10.67,2.33,10.67c-8.33,27.33-48.33,21-51.94,18s0-62,0-62,8.94-90,15.94-94,.34-9,2.67-15-2.33-22.33-2.33-22.33-2-19.34-7-28.67-4.34-35-4.34-35-14-18.67-18.16-26-6.84-26.33-5.84-40.67c.68-9.69,5.77-23.8,9-31.92,1.55-3.89,2.67-6.41,2.67-6.41l.95.25,54.62,14.3Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#444053\"\r\n                />\r\n                <path\r\n                    d=\"M435.63,231.2c-5.16,1.48-10.09,6.56-14.38,12.73l-1.12,0a35.72,35.72,0,0,1-31-17.93,35.18,35.18,0,0,1-3.14-7.15c3.09-7.85,5.38-14.67,5.38-14.67S451.38,226.7,435.63,231.2Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M455.88,206.2A35.75,35.75,0,1,1,389,188.68a34.93,34.93,0,0,1,3.78-5.46A36.18,36.18,0,0,1,401,176a35.75,35.75,0,0,1,54.83,27.58C455.85,204.46,455.88,205.33,455.88,206.2Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#efb7b9\"\r\n                />\r\n                <path\r\n                    d=\"M425.84,291.78l-.12,1.1-16.63-26c-1.74,4.11-2.71,6.86-2.71,6.86S366.88,244,373.13,242c2.1-.67,4.86-5.17,7.59-10.84l.34-.72c2.9,8.64,19.75,25.91,26.76,32.83.81.8,1.48,1.46,2,1.94l1.07,1,.56.56C414,269.4,424.76,281,425.84,291.78Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M438.27,380l-1.82,58.57L436.13,449s-21.56-2-41.68-4.2c-16.2-1.77-31.47-3.68-33.82-4.8-3-1.41-9.43-2.5-14.5-3.19-3.92-.53-7-.81-7-.81s-1.15.34-2.92.66c-3.86.7-10.64,1.27-14.59-2.16-5.05-4.39,8.22-20.34,11.53-24.17l.73-.83-1.25-11.55L329.38,368s-2-17.25-5-26.5a48.88,48.88,0,0,1-1.73-8.05,64.48,64.48,0,0,1,1.68-25.26,55.08,55.08,0,0,0,1.8-10.69c.5-9.25,28.75-45,35.75-48.25a14.84,14.84,0,0,0,7.16-7.14,13.64,13.64,0,0,0,1.09-3.11c3-13,10.59-7.84,10.59-7.84,1.83,10.17,30.16,37.09,30.16,37.09l.56.56c2.81,2.88,15.33,16.4,14.44,27.94a33.87,33.87,0,0,0,1.89,12.64,213.75,213.75,0,0,1,9.85,56Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#dce6f2\"\r\n                />\r\n                <path\r\n                    d=\"M398.13,310.45s-7,17-12.25,19.75S400.63,336,398.13,310.45Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M403.38,342.2s-16,2-16,5S403.38,342.2,403.38,342.2Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M420.13,361.7s-23.25,49.5-29.75,51S420.13,361.7,420.13,361.7Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M410.44,270.76l-19.23,8.36L368,244.06a13.64,13.64,0,0,0,1.09-3.11c3-13,10.59-7.84,10.59-7.84,1.83,10.17,30.16,37.09,30.16,37.09Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M411.44,268.76l-19.23,8.36L369,242.06a13.64,13.64,0,0,0,1.09-3.11c3-13,10.59-7.84,10.59-7.84,1.83,10.17,30.16,37.09,30.16,37.09Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#dce6f2\"\r\n                />\r\n                <path\r\n                    d=\"M436.13,449s-21.56-2-41.68-4.2l36.1,9.45v11c-1.58,1.43-2.95,2.17-3.84,1.79-4.16-1.75-38.11-7.25-38.11-7.25s-19.72-10-41-22a16.43,16.43,0,0,1-1.5-.94,23.64,23.64,0,0,1-6.3-6.31c-3.93-5.69-5.85-13-6.68-20.17a87.22,87.22,0,0,1-.52-12.38A101.51,101.51,0,0,1,333.88,384a460.08,460.08,0,0,1-3-54c.25-28,26.5-38,26.5-38,48.25-4.25,33.29,73.75,33.29,73.75s-2.79,22-3.55,24.25-3.49,6-3.12,11.25,9.59,11.53,9.59,11.53,9,4.22,12.71,10.47c2.7,4.61,20.24,10.86,30.15,15.32Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M452.29,184a11.32,11.32,0,0,1-1,4.78,29.55,29.55,0,0,1-1.78,3.56,16.4,16.4,0,0,1-4.38,5.44c-2.31,1.65-5.23,2.11-8,2.78s-5.65,1.74-7.23,4.1a14.34,14.34,0,0,0-1.69,4.9,10.54,10.54,0,0,1-2,4.74,3.93,3.93,0,0,1-4.68,1.12,4.73,4.73,0,0,1-1.81-2.33c-1.14-2.57-1.43-5.42-1.89-8.19s-1.11-5.62-2.81-7.85-4.71-3.7-7.38-2.83a7.11,7.11,0,0,0-4,3.88,22.24,22.24,0,0,0-1.51,5.52q-1.86,10.18-4.39,20.24a1.86,1.86,0,0,1-.33.76,1.44,1.44,0,0,1-1,.42c-2.24.3-4.39-1.27-6.65-1.1a3.82,3.82,0,0,0-.69.11,35.73,35.73,0,0,1,3.61-40.8l.18-.05a10.78,10.78,0,0,0,4-2.52,42.22,42.22,0,0,0,4-4.63l.8-1a45.61,45.61,0,0,1,7.8-7.41,8,8,0,0,1,2.66-1.44,7.88,7.88,0,0,1,2.52-.08,63.57,63.57,0,0,0,10.41.39,66.79,66.79,0,0,1,7.31-.74c6.33.18,11.73,4.65,15.73,9.55C450.24,177.83,452.16,180.72,452.29,184Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M384.33,189.63c-1.39,2.28-3.9,3.83-4.84,6.33-1.38,3.63.95,8.15-1.19,11.39-.71,1.09-1.88,1.9-2.28,3.15-.68,2.11,1.18,4.36.7,6.53s-3.34,4-2.58,6.12a4,4,0,0,0,2.2,2,8.6,8.6,0,0,0,5,1.11c2.73-.45,4.76-3.13,7.53-3.33,2.25-.16,4.4,1.4,6.64,1.11a1.5,1.5,0,0,0,1-.43,1.73,1.73,0,0,0,.33-.76q2.52-10.05,4.4-20.24a21.8,21.8,0,0,1,1.5-5.52,7.17,7.17,0,0,1,4-3.88c2.67-.86,5.67.6,7.38,2.83s2.36,5.08,2.82,7.85.75,5.62,1.88,8.19a4.78,4.78,0,0,0,1.82,2.34c1.5.87,3.52.18,4.67-1.12a10.43,10.43,0,0,0,2-4.75,14.28,14.28,0,0,1,1.69-4.89c1.58-2.36,4.47-3.43,7.23-4.1s5.67-1.14,8-2.79a16.46,16.46,0,0,0,4.38-5.43c1.48-2.58,2.86-5.38,2.74-8.35-.13-3.24-2.05-6.13-4.1-8.65-4-4.9-9.41-9.37-15.74-9.54a62.2,62.2,0,0,0-7.31.74,62.57,62.57,0,0,1-10.41-.4,8.18,8.18,0,0,0-2.52.09,7.54,7.54,0,0,0-2.65,1.44,45.63,45.63,0,0,0-7.81,7.4,57.31,57.31,0,0,1-4.82,5.6,10.85,10.85,0,0,1-4,2.53c-1,.28-2,.08-2.95.39C386.09,183.52,385.7,187.37,384.33,189.63Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#965d7b\"\r\n                />\r\n                <path\r\n                    d=\"M480.63,216.82c-8,1.47-14.63-5-18.3-9.72a39.22,39.22,0,0,1-3.07-4.52l27.46,5.18,1.11.21S492.88,214.58,480.63,216.82Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <g opacity=\"0.1\">\r\n                    <path\r\n                        d=\"M376.72,214.17a8.33,8.33,0,0,0-.58-3.84c0,.1-.09.2-.12.3-.43,1.34.15,2.73.52,4.12A3,3,0,0,0,376.72,214.17Z\"\r\n                        transform=\"translate(-95.23 -55.03)\"\r\n                    />\r\n                    <path\r\n                        d=\"M379.1,197.8a22.22,22.22,0,0,0,.08,4.15A22.28,22.28,0,0,0,379.1,197.8Z\"\r\n                        transform=\"translate(-95.23 -55.03)\"\r\n                    />\r\n                    <path\r\n                        d=\"M448.55,188.45a16.4,16.4,0,0,1-4.38,5.44c-2.31,1.65-5.22,2.11-8,2.78s-5.65,1.74-7.23,4.1a14.41,14.41,0,0,0-1.69,4.9,10.47,10.47,0,0,1-2,4.75c-1.15,1.3-3.17,2-4.67,1.12a4.78,4.78,0,0,1-1.82-2.34c-1.13-2.57-1.43-5.41-1.88-8.19s-1.12-5.62-2.82-7.85-4.71-3.7-7.38-2.83a7.14,7.14,0,0,0-4,3.88,21.8,21.8,0,0,0-1.5,5.52q-1.87,10.19-4.4,20.24a1.73,1.73,0,0,1-.33.76,1.5,1.5,0,0,1-1,.43c-2.24.29-4.39-1.27-6.64-1.11-2.77.2-4.8,2.88-7.53,3.32a8.45,8.45,0,0,1-5-1.11,5.35,5.35,0,0,1-1.83-1.3,2.7,2.7,0,0,0-.37,2.33,3.9,3.9,0,0,0,2.2,2,8.45,8.45,0,0,0,5,1.11c2.73-.44,4.76-3.12,7.53-3.32,2.25-.16,4.4,1.4,6.64,1.11a1.5,1.5,0,0,0,1-.43,1.73,1.73,0,0,0,.33-.76q2.52-10,4.4-20.24a21.8,21.8,0,0,1,1.5-5.52,7.14,7.14,0,0,1,4-3.88c2.67-.87,5.67.6,7.38,2.83s2.36,5.08,2.82,7.85.75,5.62,1.88,8.19a4.78,4.78,0,0,0,1.82,2.34c1.5.87,3.52.18,4.67-1.12a10.47,10.47,0,0,0,2-4.75,14.41,14.41,0,0,1,1.69-4.9c1.58-2.36,4.47-3.42,7.23-4.1s5.67-1.13,8-2.78a16.4,16.4,0,0,0,4.38-5.44c1.48-2.57,2.86-5.37,2.74-8.34a10.74,10.74,0,0,0-.12-1.14A19.65,19.65,0,0,1,448.55,188.45Z\"\r\n                        transform=\"translate(-95.23 -55.03)\"\r\n                    />\r\n                </g>\r\n                <path\r\n                    d=\"M451.33,188.75a35.33,35.33,0,0,1,4.45,14.85c-8.91-5-17.29-10.49-21.52-12.4-7.37-3.33-34.93-2.83-45.29-2.52a34.93,34.93,0,0,1,3.78-5.46A36.18,36.18,0,0,1,401,176a35.77,35.77,0,0,1,50.38,12.73Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M483.13,212.58c-4.81,1.48-12.66-1.38-20.8-5.48a39.22,39.22,0,0,1-3.07-4.52l27.46,5.18C488.54,209,489,210.77,483.13,212.58Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M422.26,154.08s-26.25-1.5-33.63,12.75l-1.19,12.63-2-.22-.4,8.59s40.12-1.75,49.25,2.37,37.5,24.88,48.87,21.38-1-6.75-1-6.75S466.51,198.2,466.51,193,462.63,160.33,422.26,154.08Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#444053\"\r\n                />\r\n                <path\r\n                    d=\"M371.63,622.28s16.75,16.25,24,15C395.63,637.28,375.13,635.53,371.63,622.28Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M368.13,629.81s1.5,8.36,5.5,7.54S368.13,629.81,368.13,629.81Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M394.38,769.53s-23.78,18.5-19.77,19S394.38,769.53,394.38,769.53Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <polygon\r\n                    points=\"330.96 347.33 407.96 334.8 407.96 407.7 334.8 403.87 330.96 347.33\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"330.96 347.33 407.96 334.8 407.96 407.7 334.8 403.87 330.96 347.33\"\r\n                    opacity=\"0.05\"\r\n                />\r\n                <polygon\r\n                    points=\"407.96 334.8 500.3 341.71 495.19 405.15 407.96 407.7 407.96 334.8\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"407.96 334.8 500.3 341.71 495.19 405.15 407.96 407.7 407.96 334.8\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <polygon\r\n                    points=\"436.35 312.55 407.96 334.8 500.3 341.71 515.39 318.94 436.35 312.55\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"303.08 323.03 372.4 314.59 407.96 334.8 330.96 347.33 303.08 323.03\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"424.84 353.73 424.84 453.4 388.77 449.7 373.08 448.1 368.3 447.6 352.62 445.99 330.96 443.77 330.96 347.33 407.95 352.57 424.84 353.73\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"500.3 341.71 500.3 438.91 471.39 444.46 457.33 447.16 424.84 453.4 424.84 353.73 500.3 341.71\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"500.3 341.71 500.3 438.91 471.39 444.46 457.33 447.16 424.84 453.4 424.84 353.73 500.3 341.71\"\r\n                    opacity=\"0.05\"\r\n                />\r\n                <polygon\r\n                    points=\"303.08 368.31 330.96 347.33 424.84 353.73 411.02 377.01 303.08 368.31\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"303.08 368.31 330.96 347.33 424.84 353.73 411.02 377.01 303.08 368.31\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <polygon\r\n                    points=\"500.3 341.71 424.84 353.73 449.4 375.73 530.23 362.17 500.3 341.71\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <polygon\r\n                    points=\"500.3 341.71 424.84 353.73 449.4 375.73 530.23 362.17 500.3 341.71\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <polygon\r\n                    points=\"471.39 444.46 457.33 447.16 457.33 426.39 470.5 423.07 471.39 444.46\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <polygon\r\n                    points=\"388.77 435.96 388.77 449.7 373.08 448.1 373.08 435.96 388.77 435.96\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <polygon\r\n                    points=\"368.3 440.29 368.3 447.6 352.62 445.99 352.62 440.29 368.3 440.29\"\r\n                    fill=\"#fff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M510.63,483.7c-10.75,13.75-46.25,4.25-46.25,4.25L438,460.43l-3.58-3.73,7-13s2,.66,5.34,1.82C464.44,451.7,519.68,472.13,510.63,483.7Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M509.63,481.7c-10.75,13.75-46.25,4.25-46.25,4.25L437,458.43l-3.58-3.73,7-13s2,.66,5.34,1.82C463.44,449.7,518.68,470.13,509.63,481.7Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#efb7b9\"\r\n                />\r\n                <path\r\n                    d=\"M445.72,443.52c-1.46,4.2-5.17,10.42-8.76,14.91l-3.58-3.73,7-13S442.39,442.36,445.72,443.52Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M358.38,288s-26.25,10-26.5,38a460.08,460.08,0,0,0,3,54s-7.5,41.75,13.75,53.75,41,22,41,22,33.95,5.5,38.12,7.25,18.66-20.75,16.41-24.5-33.16-13-36.83-19.25-12.71-10.46-12.71-10.46-9.22-6.29-9.59-11.54,2.35-9,3.12-11.25,3.56-24.25,3.56-24.25S406.63,283.7,358.38,288Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#dce6f2\"\r\n                />\r\n                <path\r\n                    d=\"M370.38,380.7s-35.5,4-32.75,16.5C337.63,397.2,351.12,384.59,370.38,380.7Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M370.38,385.7s-20.15,14.75-16.45,15.75S370.38,385.7,370.38,385.7Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M379.38,391.7s-5.75,10.34-2.5,9.8S379.38,391.7,379.38,391.7Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M749,167.42s-38-2.29-33.56,24.37c0,0-.89,4.71,3.38,6.85,0,0,.07-2,3.9-1.31a17.51,17.51,0,0,0,4.13.2,8.57,8.57,0,0,0,5.06-2.09h0s10.69-4.41,14.85-21.89c0,0,3.08-3.82,3-4.8l-6.42,2.75s2.19,4.63.46,8.48c0,0-.2-8.31-1.44-8.12-.25,0-3.33,1.61-3.33,1.61s3.77,8.06.92,13.93c0,0,1.08-9.94-2.1-13.35l-4.52,2.64s4.41,8.33,1.42,15.13c0,0,.77-10.43-2.37-14.49l-4.1,3.19s4.15,8.22,1.62,13.86c0,0-.33-12.14-2.51-13.06,0,0-3.58,3.16-4.12,4.46,0,0,2.83,6,1.07,9.11,0,0-1.08-8.09-2-8.13,0,0-3.57,5.36-3.94,9a19.46,19.46,0,0,1,3.07-9.54,10.71,10.71,0,0,0-5.46,2.83s.55-3.79,6.34-4.12c0,0,3-4.07,3.74-4.32,0,0-5.76-.48-9.25,1.07,0,0,3.07-3.57,10.31-2l4-3.3s-7.58-1-10.8.11c0,0,3.7-3.16,11.89-.86l4.4-2.63s-6.46-1.4-10.31-.89c0,0,4.06-2.19,11.6.18l3.15-1.41s-4.74-.93-6.12-1.08-1.46-.53-1.46-.53a16.36,16.36,0,0,1,8.89,1S749.14,167.84,749,167.42Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <path\r\n                    d=\"M864.46,300.76s-38-2.29-33.56,24.37c0,0-.89,4.71,3.38,6.85,0,0,.07-2,3.91-1.31a17.51,17.51,0,0,0,4.13.2,8.56,8.56,0,0,0,5-2.08h0s10.7-4.42,14.86-21.9c0,0,3.07-3.81,2.95-4.79l-6.42,2.74s2.19,4.63.47,8.48c0,0-.21-8.31-1.44-8.12-.25,0-3.34,1.61-3.34,1.61s3.78,8.07.93,13.93c0,0,1.08-9.94-2.11-13.35L848.75,310s4.41,8.33,1.42,15.13c0,0,.77-10.43-2.37-14.49l-4.09,3.2s4.14,8.21,1.62,13.85c0,0-.33-12.14-2.51-13.06,0,0-3.58,3.16-4.13,4.46,0,0,2.84,6,1.08,9.11,0,0-1.08-8.09-2-8.13,0,0-3.57,5.36-3.94,9a19.52,19.52,0,0,1,3.08-9.54,10.76,10.76,0,0,0-5.47,2.83s.56-3.79,6.35-4.12c0,0,2.95-4.07,3.74-4.32,0,0-5.76-.48-9.25,1.07,0,0,3.07-3.57,10.3-1.95l4-3.3s-7.59-1-10.8.11c0,0,3.7-3.16,11.89-.86l4.4-2.63s-6.47-1.39-10.32-.89c0,0,4.07-2.19,11.61.18l3.15-1.41s-4.74-.93-6.13-1.08-1.46-.53-1.46-.53a16.39,16.39,0,0,1,8.9,1S864.58,301.18,864.46,300.76Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M633.61,277.09s8.75-37.09-18.29-37.22c0,0-4.49-1.68-7.32,2.16,0,0,1.93.41.62,4.07a17.8,17.8,0,0,0-.9,4,8.59,8.59,0,0,0,1.19,5.33h0s2.53,11.3,19,18.38c0,0,3.24,3.68,4.22,3.72l-1.6-6.79s-4.94,1.37-8.44-1c0,0,8.23,1.21,8.24,0,0-.25-1-3.56-1-3.56s-8.59,2.34-13.89-1.47c0,0,9.61,2.76,13.52.21L627.16,260s-9,2.93-15.16-1.18c0,0,10.15,2.54,14.69.14l-2.45-4.58s-8.8,2.68-13.93-.77c0,0,12,1.74,13.3-.24,0,0-2.5-4.07-3.69-4.83,0,0-6.36,1.78-9.16-.49,0,0,8.15.31,8.34-.55,0,0-4.67-4.43-8.23-5.43a19.6,19.6,0,0,1,8.89,4.66,10.79,10.79,0,0,0-1.86-5.87s3.64,1.2,3,7c0,0,3.5,3.6,3.61,4.42,0,0,1.45-5.59.52-9.3,0,0,3,3.64.17,10.49l2.56,4.55s2.32-7.3,1.73-10.66c0,0,2.49,4.18-1.18,11.86l1.85,4.79s2.47-6.14,2.63-10c0,0,1.47,4.38-2.16,11.41l.86,3.34s1.72-4.51,2.1-5.85.77-1.35.77-1.35a16.38,16.38,0,0,1-2.49,8.6S633.18,277.14,633.61,277.09Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M550.39,289.73s-30.52-22.83-41.43,1.9c0,0-3.33,3.45-.94,7.58,0,0,1.14-1.61,4,1.06a17.51,17.51,0,0,0,3.34,2.44,8.58,8.58,0,0,0,5.37,1h0s11.36,2.19,24.44-10.12c0,0,4.67-1.5,5.11-2.38L543.39,290s-.72,5.07-4.27,7.34c0,0,4.39-7.06,3.25-7.57-.23-.11-3.67-.5-3.67-.5s-1.28,8.82-6.88,12.15c0,0,6.37-7.71,5.58-12.31l-5.23-.28s-.89,9.39-7.13,13.43c0,0,6.37-8.29,6-13.41l-5.18.42s-1.05,9.13-6.26,12.45c0,0,6.39-10.32,5.08-12.28,0,0-4.73.67-5.9,1.45,0,0-.91,6.54-4.11,8.2,0,0,3.55-7.35,2.83-7.86,0,0-5.93,2.51-8.26,5.37a19.53,19.53,0,0,1,7.82-6.28,10.77,10.77,0,0,0-6.12-.64s2.54-2.86,7.56.05c0,0,4.7-1.77,5.5-1.55,0,0-4.55-3.57-8.32-4.19,0,0,4.54-1.3,9.69,4l5.19-.53s-5.77-5-9.08-5.84c0,0,4.83-.61,10.4,5.81l5.12.23s-4.63-4.72-8.12-6.42c0,0,4.59.4,9.59,6.53l3.41.55s-3.45-3.38-4.53-4.26-.93-1.25-.93-1.25a16.43,16.43,0,0,1,6.89,5.72S550.26,290.14,550.39,289.73Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M652,77.62s-30.52-22.84-41.43,1.9c0,0-3.33,3.45-.94,7.58,0,0,1.14-1.61,4,1.06a17.79,17.79,0,0,0,3.35,2.43,8.57,8.57,0,0,0,5.37,1h0s11.36,2.19,24.44-10.13c0,0,4.67-1.49,5.1-2.38L645,77.89s-.71,5.07-4.27,7.34c0,0,4.4-7.06,3.26-7.57-.23-.11-3.67-.5-3.67-.5S639,86,633.4,89.31c0,0,6.36-7.71,5.58-12.31l-5.23-.28s-.9,9.39-7.13,13.42c0,0,6.37-8.29,6-13.41l-5.17.42s-1.06,9.14-6.27,12.46c0,0,6.4-10.32,5.09-12.28,0,0-4.73.67-5.9,1.45,0,0-.91,6.54-4.11,8.2,0,0,3.55-7.35,2.83-7.87,0,0-5.93,2.52-8.26,5.38a19.44,19.44,0,0,1,7.82-6.28,10.7,10.7,0,0,0-6.13-.64s2.55-2.86,7.57.05c0,0,4.7-1.78,5.5-1.55,0,0-4.55-3.57-8.32-4.2,0,0,4.53-1.29,9.68,4l5.19-.53s-5.76-5-9.08-5.85c0,0,4.83-.6,10.41,5.82l5.12.22s-4.63-4.72-8.13-6.41c0,0,4.6.4,9.6,6.53l3.4.55S640,72.86,638.92,72s-.93-1.24-.93-1.24a16.4,16.4,0,0,1,6.89,5.72S651.83,78,652,77.62Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M768.62,106.55s-12.2-36.11-35.21-21.92c0,0-4.7,1-5.07,5.71,0,0,1.85-.68,2.67,3.12a18,18,0,0,0,1.37,3.91,8.66,8.66,0,0,0,3.84,3.89h0s8.12,8.25,25.88,5.52c0,0,4.69,1.42,5.55.93l-5-4.91s-3.46,3.77-7.68,3.62c0,0,7.63-3.32,7-4.39-.13-.21-2.74-2.48-2.74-2.48s-6.06,6.53-12.56,6.1c0,0,9.61-2.74,11.57-7l-4.14-3.19s-6.06,7.22-13.49,7c0,0,10-3.21,12.53-7.65l-4.5-2.59s-6,6.93-12.22,6.71c0,0,11.12-4.87,11.15-7.23,0,0-4.27-2.13-5.68-2.15,0,0-4.46,4.87-8,4.43,0,0,7.08-4.05,6.78-4.88,0,0-6.3-1.29-9.85-.25a19.49,19.49,0,0,1,10-.75,10.79,10.79,0,0,0-4.69-4s3.72-.91,6.21,4.33c0,0,4.88,1.21,5.4,1.84,0,0-1.72-5.51-4.47-8.17,0,0,4.47,1.51,5.69,8.82l4.58,2.5s-1.89-7.41-4.17-10c0,0,4.33,2.24,5.27,10.69l4.1,3.09s-1.14-6.52-3.06-9.9c0,0,3.56,2.94,4.2,10.83l2.49,2.38s-.92-4.74-1.3-6.08S761,93,761,93a16.49,16.49,0,0,1,2.43,8.62S768.27,106.81,768.62,106.55Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M689,108.33S651.1,104.11,654.23,131c0,0-1.13,4.66,3,7,0,0,.17-2,4-1.1a18.4,18.4,0,0,0,4.12.41,8.6,8.6,0,0,0,5.15-1.83h0s10.91-3.87,16-21.12c0,0,3.26-3.65,3.19-4.64l-6.55,2.42s2,4.73,0,8.49c0,0,.21-8.31-1-8.18-.25,0-3.41,1.44-3.41,1.44s3.36,8.25.22,14c0,0,1.58-9.88-1.43-13.44l-4.65,2.4s4,8.55.65,15.19c0,0,1.3-10.38-1.63-14.59l-4.25,3s3.72,8.41.91,13.92c0,0,.29-12.14-1.84-13.17,0,0-3.74,3-4.35,4.24,0,0,2.53,6.1.62,9.15,0,0-.67-8.13-1.55-8.21,0,0-3.84,5.17-4.4,8.82a19.47,19.47,0,0,1,3.56-9.38,10.76,10.76,0,0,0-5.6,2.55s.74-3.75,6.54-3.79c0,0,3.15-3.91,4-4.12,0,0-5.73-.77-9.3.6,0,0,3.25-3.42,10.39-1.43l4.21-3.09S663.22,115,660,116c0,0,3.86-3,11.92-.25l4.53-2.41s-6.39-1.72-10.26-1.41c0,0,4.17-2,11.58.77l3.22-1.25s-4.69-1.17-6.07-1.39-1.43-.6-1.43-.6a16.45,16.45,0,0,1,8.84,1.44S689.07,108.75,689,108.33Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M1020.6,402.5s-37.88-4.22-34.75,22.64c0,0-1.13,4.66,3,7,0,0,.17-2,4-1.11a17.3,17.3,0,0,0,4.12.41,8.53,8.53,0,0,0,5.15-1.83h0s10.91-3.87,15.95-21.11c0,0,3.26-3.66,3.19-4.64l-6.55,2.41s2,4.74,0,8.5c0,0,.21-8.32-1-8.18-.25,0-3.41,1.43-3.41,1.43s3.36,8.25.22,14c0,0,1.58-9.87-1.43-13.44l-4.65,2.41s4,8.55.66,15.19c0,0,1.29-10.38-1.64-14.6l-4.25,3s3.72,8.41.91,13.91c0,0,.29-12.14-1.84-13.16,0,0-3.73,3-4.35,4.24,0,0,2.54,6.1.62,9.15,0,0-.67-8.13-1.55-8.21,0,0-3.84,5.17-4.4,8.82a19.47,19.47,0,0,1,3.56-9.38,10.67,10.67,0,0,0-5.6,2.55s.74-3.76,6.54-3.8c0,0,3.16-3.91,4-4.11,0,0-5.73-.78-9.3.59,0,0,3.25-3.41,10.4-1.42l4.2-3.09s-7.52-1.42-10.79-.44c0,0,3.86-3,11.92-.26l4.53-2.4s-6.39-1.72-10.26-1.41c0,0,4.17-2,11.58.77l3.22-1.26s-4.69-1.17-6.07-1.38-1.43-.6-1.43-.6a16.39,16.39,0,0,1,8.84,1.43S1020.7,402.93,1020.6,402.5Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M1078.51,437.88s-37.88-4.21-34.75,22.64c0,0-1.12,4.66,3,7,0,0,.17-2,4-1.1a17.65,17.65,0,0,0,4.11.4A8.64,8.64,0,0,0,1060,465h0s10.9-3.87,15.94-21.12c0,0,3.27-3.65,3.19-4.64l-6.55,2.41s2,4.74,0,8.5c0,0,.21-8.31-1-8.18-.25,0-3.41,1.43-3.41,1.43s3.36,8.25.22,14c0,0,1.58-9.87-1.43-13.43l-4.65,2.4s4,8.55.66,15.19c0,0,1.29-10.38-1.64-14.59l-4.25,3s3.72,8.41.92,13.92c0,0,.28-12.15-1.85-13.17,0,0-3.73,3-4.35,4.24,0,0,2.54,6.1.62,9.15,0,0-.67-8.13-1.55-8.21,0,0-3.84,5.17-4.39,8.82a19.52,19.52,0,0,1,3.55-9.38,10.76,10.76,0,0,0-5.6,2.55s.75-3.76,6.55-3.79c0,0,3.15-3.91,4-4.12,0,0-5.73-.77-9.3.6,0,0,3.25-3.42,10.4-1.43l4.2-3.09s-7.52-1.42-10.79-.44c0,0,3.86-3,11.92-.25l4.53-2.41s-6.39-1.72-10.26-1.41c0,0,4.17-2,11.58.77l3.22-1.25s-4.69-1.17-6.06-1.39-1.44-.6-1.44-.6a16.45,16.45,0,0,1,8.84,1.44S1078.61,438.31,1078.51,437.88Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M949.94,139.87s-30.52-22.83-41.43,1.9c0,0-3.33,3.45-.94,7.58,0,0,1.14-1.61,4,1.06a17.51,17.51,0,0,0,3.34,2.44,8.59,8.59,0,0,0,5.37,1h0s11.36,2.19,24.45-10.12c0,0,4.66-1.5,5.1-2.38l-6.87-1.24s-.72,5.07-4.27,7.34c0,0,4.39-7.06,3.25-7.57-.23-.11-3.66-.5-3.66-.5s-1.29,8.82-6.89,12.15c0,0,6.37-7.71,5.58-12.31l-5.23-.28s-.89,9.39-7.13,13.43c0,0,6.38-8.29,6-13.41l-5.18.42s-1,9.13-6.26,12.45c0,0,6.4-10.32,5.08-12.28,0,0-4.73.67-5.9,1.45,0,0-.9,6.54-4.1,8.2,0,0,3.54-7.35,2.82-7.86,0,0-5.93,2.51-8.26,5.37a19.53,19.53,0,0,1,7.82-6.28,10.77,10.77,0,0,0-6.12-.64s2.55-2.86,7.57.05c0,0,4.69-1.77,5.49-1.55,0,0-4.55-3.57-8.32-4.19,0,0,4.54-1.3,9.69,4l5.19-.53s-5.76-5-9.08-5.84c0,0,4.83-.61,10.4,5.81l5.13.23s-4.64-4.72-8.13-6.42c0,0,4.6.4,9.59,6.53l3.41.55s-3.45-3.38-4.53-4.26S936,133,936,133a16.44,16.44,0,0,1,6.88,5.72S949.81,140.28,949.94,139.87Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M973.52,304.69S963,268.06,939.34,281.21c0,0-4.74.73-5.33,5.47,0,0,1.88-.59,2.53,3.24a17.73,17.73,0,0,0,1.2,4A8.59,8.59,0,0,0,941.4,298h0s7.74,8.6,25.6,6.68c0,0,4.62,1.62,5.5,1.18l-4.73-5.14s-3.63,3.62-7.83,3.28c0,0,7.76-3,7.16-4.07-.12-.22-2.62-2.61-2.62-2.61s-6.34,6.26-12.82,5.53c0,0,9.73-2.3,11.87-6.44l-4-3.38s-6.38,6.94-13.79,6.4c0,0,10.08-2.77,12.86-7.08l-4.38-2.79s-6.35,6.65-12.51,6.15c0,0,11.33-4.37,11.47-6.72,0,0-4.18-2.32-5.59-2.4,0,0-4.67,4.66-8.22,4.06,0,0,7.26-3.73,7-4.57,0,0-6.24-1.57-9.83-.7a19.51,19.51,0,0,1,10-.29,10.73,10.73,0,0,0-4.5-4.2s3.76-.75,6,4.6c0,0,4.81,1.42,5.31,2.08,0,0-1.47-5.59-4.1-8.36,0,0,4.4,1.7,5.29,9.06l4.46,2.71s-1.56-7.5-3.72-10.14c0,0,4.22,2.43,4.79,10.91l4,3.27s-.85-6.56-2.61-10c0,0,3.43,3.1,3.71,11l2.38,2.5s-.7-4.78-1-6.14,0-1.55,0-1.55a16.39,16.39,0,0,1,2.05,8.72S973.16,304.93,973.52,304.69Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M739.1,387.23s-20.43-32.18-39.4-12.92c0,0-4.34,2-3.58,6.75,0,0,1.65-1.1,3.35,2.4a17.12,17.12,0,0,0,2.26,3.46,8.54,8.54,0,0,0,4.65,2.88h0s9.85,6.08,26.45-.8c0,0,4.89.26,5.61-.41l-6-3.6s-2.47,4.5-6.6,5.35c0,0,6.62-5,5.73-5.92-.17-.18-3.25-1.76-3.25-1.76s-4.33,7.78-10.75,8.91c0,0,8.69-4.95,9.59-9.53l-4.79-2.11s-4.17,8.45-11.43,10c0,0,8.9-5.49,10.35-10.41l-5-1.44s-4.22,8.17-10.27,9.42c0,0,9.64-7.38,9.11-9.68,0,0-4.66-1.05-6-.73,0,0-3.17,5.79-6.75,6.21,0,0,5.92-5.62,5.43-6.36,0,0-6.43.25-9.63,2.1a19.46,19.46,0,0,1,9.54-3.1,10.73,10.73,0,0,0-5.49-2.77s3.39-1.77,7,2.73c0,0,5,0,5.69.5,0,0-3-5-6.29-6.87,0,0,4.7.4,7.62,7.21l5.05,1.34s-3.61-6.75-6.42-8.68c0,0,4.73,1.14,7.66,9.13l4.72,2s-2.66-6.05-5.33-8.88c0,0,4.16,2,6.65,9.51l3,1.73s-2-4.39-2.71-5.6-.43-1.49-.43-1.49a16.4,16.4,0,0,1,4.41,7.79S738.83,387.57,739.1,387.23Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <path\r\n                    d=\"M873.37,222.81s-19.43-32.79-39-14.13c0,0-4.4,1.9-3.78,6.64,0,0,1.67-1.06,3.27,2.49a17.28,17.28,0,0,0,2.15,3.54,8.49,8.49,0,0,0,4.56,3h0s9.65,6.38,26.46,0c0,0,4.88.41,5.62-.24l-5.87-3.78s-2.6,4.41-6.76,5.14c0,0,6.77-4.83,5.92-5.74-.18-.19-3.2-1.87-3.2-1.87s-4.57,7.65-11,8.58c0,0,8.84-4.68,9.87-9.22L856.89,215s-4.43,8.33-11.74,9.66c0,0,9.07-5.21,10.67-10.08l-4.94-1.6s-4.48,8-10.56,9.1c0,0,9.86-7.08,9.4-9.39,0,0-4.62-1.2-6-.92,0,0-3.35,5.69-6.94,6,0,0,6.09-5.42,5.63-6.18,0,0-6.44.05-9.69,1.8a19.52,19.52,0,0,1,9.63-2.8,10.75,10.75,0,0,0-5.41-2.94s3.45-1.67,7,2.94c0,0,5,.17,5.67.68,0,0-2.83-5-6.07-7.06,0,0,4.68.54,7.39,7.44l5,1.5s-3.39-6.86-6.15-8.88c0,0,4.7,1.29,7.38,9.36l4.65,2.17s-2.47-6.13-5-9c0,0,4.09,2.13,6.36,9.71l2.93,1.82s-1.88-4.45-2.54-5.68-.38-1.5-.38-1.5a16.43,16.43,0,0,1,4.17,7.92S873.08,223.14,873.37,222.81Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <path\r\n                    d=\"M750.44,291.76s1-38.1-25.47-32.73c0,0-4.74-.73-6.74,3.61,0,0,2,0,1.44,3.85a17.56,17.56,0,0,0-.06,4.14,8.55,8.55,0,0,0,2.25,5h0s4.77,10.54,22.38,14.12c0,0,3.91,2.95,4.89,2.79l-3-6.32s-4.55,2.34-8.46.75c0,0,8.3-.49,8.07-1.71,0-.25-1.72-3.29-1.72-3.29s-7.94,4.05-13.89,1.39c0,0,10,.75,13.27-2.54l-2.79-4.43s-8.18,4.68-15.08,1.92c0,0,10.45.42,14.41-2.85l-3.33-4s-8.07,4.42-13.79,2.08c0,0,12.12-.73,13-2.94,0,0-3.28-3.47-4.6-4,0,0-5.86,3-9.06,1.38,0,0,8-1.34,8.05-2.23,0,0-5.47-3.39-9.16-3.64a19.47,19.47,0,0,1,9.65,2.76,10.75,10.75,0,0,0-3-5.37s3.81.43,4.33,6.2c0,0,4.17,2.82,4.44,3.6,0,0,.29-5.77-1.38-9.21,0,0,3.68,2.95,2.3,10.23l3.43,3.94s.78-7.62-.47-10.79c0,0,3.28,3.59,1.26,11.85l2.77,4.31s1.18-6.51.55-10.34c0,0,2.32,4,.2,11.61l1.52,3.1s.77-4.77.87-6.16.48-1.48.48-1.48a16.42,16.42,0,0,1-.69,8.93S750,291.89,750.44,291.76Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <ellipse\r\n                    cx=\"698.97\"\r\n                    cy=\"716.3\"\r\n                    rx=\"26.93\"\r\n                    ry=\"4.55\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <ellipse\r\n                    cx=\"600.8\"\r\n                    cy=\"785.38\"\r\n                    rx=\"26.93\"\r\n                    ry=\"4.55\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <ellipse\r\n                    cx=\"93.14\"\r\n                    cy=\"749.99\"\r\n                    rx=\"26.93\"\r\n                    ry=\"4.55\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <ellipse\r\n                    cx=\"805.06\"\r\n                    cy=\"780.83\"\r\n                    rx=\"26.93\"\r\n                    ry=\"4.55\"\r\n                    fill=\"#6c63ff\"\r\n                    opacity=\"0.1\"\r\n                />\r\n                <ellipse\r\n                    cx=\"833.1\"\r\n                    cy=\"723.1\"\r\n                    rx=\"40.21\"\r\n                    ry=\"6.8\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <path\r\n                    d=\"M945,767a11.61,11.61,0,0,0,3.83-5.78c.5-2.3-.48-5.05-2.67-5.89-2.46-.94-5.09.76-7.09,2.48s-4.27,3.69-6.88,3.33a10.5,10.5,0,0,0,3.24-9.81,4.11,4.11,0,0,0-.9-2c-1.37-1.46-3.84-.83-5.48.32-5.2,3.66-6.65,10.72-6.68,17.08-.52-2.29-.08-4.68-.09-7s-.66-5-2.65-6.22a7.91,7.91,0,0,0-4-1c-2.34-.08-4.95.15-6.54,1.86-2,2.12-1.47,5.69.25,8s4.35,3.8,6.77,5.42a15.13,15.13,0,0,1,4.84,4.61,4.7,4.7,0,0,1,.35.82h14.66A40.44,40.44,0,0,0,945,767Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#6c63ff\"\r\n                />\r\n                <path\r\n                    d=\"M170.29,783.87s15.35-.47,20-3.77,23.63-7.23,24.78-1.94,23.08,26.29,5.74,26.43-40.29-2.7-44.91-5.52S170.29,783.87,170.29,783.87Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    fill=\"#a8a8a8\"\r\n                />\r\n                <path\r\n                    d=\"M221.1,802.75c-17.34.14-40.29-2.7-44.91-5.52-3.52-2.14-4.92-9.83-5.39-13.38l-.51,0s1,12.39,5.59,15.2,27.57,5.66,44.91,5.52c5,0,6.73-1.82,6.64-4.46C226.73,801.72,224.82,802.72,221.1,802.75Z\"\r\n                    transform=\"translate(-95.23 -55.03)\"\r\n                    opacity=\"0.2\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Faculty from \"../pages/researches/dashboard/Faculties\";\r\nimport Admin from \"../pages/researches/dashboard/Administrator\";\r\n\r\nimport Proposal from \"../pages/researches/Proposal\";\r\nimport Completed from \"../pages/researches/Completed\";\r\nimport Presentation from \"../pages/researches/Presentation\";\r\nimport Publication from \"../pages/researches/Publication\";\r\nimport Utilization from \"../pages/researches/Utilization\";\r\nimport Innovation from \"../pages/researches/Innovation\";\r\nimport Seminar from \"../pages/researches/Seminar\";\r\n\r\nimport Campus from \"../pages/manage/Campus\";\r\nimport Department from \"../pages/manage/Department\";\r\nimport Account from \"../pages/manage/Account\";\r\nimport Profile from \"../pages/manage/Profile\";\r\nimport ChangePassword from \"../pages/manage/ChangePassword\";\r\n\r\nimport Login from \"../auth/Login\";\r\nimport Registration from \"../auth/Registration\";\r\n\r\nimport PageNotFound from \"../pages/error/PageNotFound\";\r\n\r\nimport AccountContext from \"../../context/AccountContext\";\r\n\r\nconst Content = () => {\r\n    const { userData } = useContext(AccountContext);\r\n\r\n    if (userData.user && userData.user !== undefined) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-wrapper\" style={{ display: \"block\" }}>\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/dashboard\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"rh\" ||\r\n                                    userData.user.user_type === \"admin\"\r\n                                ) {\r\n                                    return (\r\n                                        <Admin currentUser={userData.user} />\r\n                                    );\r\n                                } else if (userData.user.user_type === \"user\") {\r\n                                    return (\r\n                                        <Faculty currentUser={userData.user} />\r\n                                    );\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/proposal\"\r\n                            render={() => (\r\n                                <Proposal currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n                        <Route\r\n                            exact\r\n                            path=\"/completed\"\r\n                            render={() => (\r\n                                <Completed currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n                        <Route\r\n                            exact\r\n                            path=\"/presentation\"\r\n                            render={() => (\r\n                                <Presentation currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n                        <Route\r\n                            exact\r\n                            path=\"/publication\"\r\n                            render={() => (\r\n                                <Publication currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n                        <Route\r\n                            exact\r\n                            path=\"/utilization\"\r\n                            render={() => (\r\n                                <Utilization currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n                        <Route\r\n                            exact\r\n                            path=\"/innovation\"\r\n                            render={() => (\r\n                                <Innovation currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n                        <Route\r\n                            exact\r\n                            path=\"/seminar\"\r\n                            render={() => (\r\n                                <Seminar currentUser={userData.user} />\r\n                            )}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/campus\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"rh\" ||\r\n                                    userData.user.user_type === \"admin\"\r\n                                ) {\r\n                                    return <Campus />;\r\n                                } else {\r\n                                    return <PageNotFound />;\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/department\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"rh\" ||\r\n                                    userData.user.user_type === \"admin\"\r\n                                ) {\r\n                                    return <Department />;\r\n                                } else {\r\n                                    return <PageNotFound />;\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/account\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"rh\" ||\r\n                                    userData.user.user_type === \"admin\"\r\n                                ) {\r\n                                    return <Account />;\r\n                                } else {\r\n                                    return <PageNotFound />;\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/registration\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"rh\" ||\r\n                                    userData.user.user_type === \"admin\"\r\n                                ) {\r\n                                    return <Registration />;\r\n                                } else {\r\n                                    return <PageNotFound />;\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/profile\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"user\" ||\r\n                                    userData.user.user_type === \"rh\" || \r\n                                    userData.user.user_type === \"admin\" \r\n                                ) {\r\n                                    return <Profile currentUser={userData.user} />;\r\n                                } else {\r\n                                    return <PageNotFound />;\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/change-password\"\r\n                            render={() => {\r\n                                if (\r\n                                    userData.user.user_type === \"user\"\r\n                                ) {\r\n                                    return <ChangePassword currentUser={userData.user} />;\r\n                                } else {\r\n                                    return <PageNotFound />;\r\n                                }\r\n                            }}\r\n                        ></Route>\r\n\r\n                        <Route component={PageNotFound}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route \r\n                        // path=\"/login\" \r\n                        component={Login}\r\n                    ></Route>\r\n\r\n                    {/* <Route component={PageNotFound}></Route> */}\r\n                </Switch>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Content;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AccountContext from '../../context/AccountContext';\r\n\r\nconst Footer = () => {\r\n    const { userData } = useContext(AccountContext);\r\n        \r\n    return <div></div>\r\n    // if(userData.user !== undefined) {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             <div className=\"page-wrapper\">\r\n    //                 <footer className=\"footer text-center text-muted\">\r\n    //                     <Link to=\"#\">Surigao del Sur State University</Link> Research Management System v.1.\r\n    //                 </footer>\r\n    //             </div>\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AccountContext from \"../../context/AccountContext\";\r\n\r\nimport Header from './Header';\r\nimport SideMenu from './SideMenu';\r\nimport SideMenuBarUser from './SideMenuBarUser';\r\nimport Content from './Content';\r\nimport Footer from './Footer'; \r\n\r\nconst Main = () => {\r\n    const [userType, setUserType] = useState(\"\");\r\n\r\n    const { userData, setUserData } = useContext(AccountContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (userData.user && userData.user !== undefined) {\r\n            const typeOfUser = userData.user.user_type;\r\n            setUserType(typeOfUser);\r\n        }\r\n    }, [userData.user]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <SideMenu />\r\n            <Content />\r\n            <Footer />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './App.css';\nimport Main from './components/layouts/Main';\n\nimport AccountContext from './context/AccountContext';\n\nconst App = () => {\n\tconst [userData, setUserData] = useState({ token: undefined, user: undefined });\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst getloggedInAccount = async() => {\n\t\t\tlet token = localStorage.getItem(\"auth-token\");\n\t\t\t// CHECKS token if does exist for the first time it uses the browser\n\t\t\tif(token === null) {\n\t\t\t\tlocalStorage.setItem(\"auth-token\", \"\");\n\t\t\t\ttoken = \"\";\n\t\t\t}\n\n\t\t\t// CHECKS if token is VALID\n\t\t\tconst isTokenValid = await axios.post(\"http://localhost:3001/account/is_token_valid\", null, {\n\t\t\t\theaders: { \"Authorization\": token }\n\t\t\t});\n\n\t\t\tif(isTokenValid.data) {\n\t\t\t\tconst userResponse = await axios.get(\"http://localhost:3001/account/get_logged_in_user\", {\n\t\t\t\t\theaders: { \"Authorization\": token }\n\t\t\t\t});\n\n\t\t\t\tsetUserData({ token, user: userResponse.data });\n\t\t\t}\n\t\t}\n\n\t\tgetloggedInAccount();\n\t}, [history]);\n\n\treturn(\n\t\t<Fragment>\n\t\t\t<AccountContext.Provider value={{ userData, setUserData }}>\n\t\t\t\t<Main />\n\t\t\t</AccountContext.Provider>\n\t\t</Fragment>\n\t)\n}\n\nexport default App;\n\n","const initialState = {\r\n    proposals: []\r\n}\r\n\r\nconst proposalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_PROPOSAL':\r\n            return {\r\n                ...state\r\n                , proposals: action.payload\r\n            }\r\n\r\n        case 'CREATE_PROPOSAL':\r\n            return {\r\n                ...state\r\n                , proposals: [...state.proposals, action.payload]\r\n            }\r\n\r\n        case 'UPDATE_PROPOSAL':\r\n            const updatedState = state.proposals.map(proposal => proposal._id === action.payload._id ? action.payload : proposal);\r\n\r\n            return {\r\n                ...state\r\n                , proposals: updatedState\r\n            }\r\n\r\n        case 'UPDATE_PROPOSAL_REMARKS':\r\n            const filteredRemarks = state.proposals.map(proposal => proposal._id === action.payload._id ? action.payload : proposal);\r\n\r\n            return {\r\n                ...state\r\n                , proposals: filteredRemarks\r\n            }\r\n\r\n        case 'DELETE_PROPOSAL':\r\n            const deletedState = state.proposals.filter(proposal => proposal._id !== action.payload);\r\n\r\n            return {\r\n                ...state\r\n                , proposals: deletedState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default proposalReducer;","const initialState = {\r\n    completed: []\r\n}\r\n\r\nconst proposalCompletedReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_PROPOSAL_COMPLETED':\r\n            return { \r\n                ...state\r\n                , completed: action.payload \r\n            }\r\n\r\n        case 'CREATE_PROPOSAL_COMPLETED':\r\n            return { \r\n                ...state\r\n                , completed: [ ...state.completed, action.payload ] \r\n            }\r\n\r\n        case 'UPDATE_PROPOSAL_COMPLETED':\r\n            return { \r\n                ...state\r\n                , completed: [ ...state.completed, action.payload ] \r\n            }\r\n\r\n        // case 'UPDATE_COMPLETED':\r\n        //     const filtered = state.completed.map(proposal => proposal._id === action.payload._id ? action.payload : proposal)\r\n\r\n        //     return { \r\n        //         ...state\r\n        //         , completed: filtered \r\n        //     }\r\n\r\n        case 'UPDATE_PROPOSAL_COMPLETED_REMARKS':\r\n            const filteredState = state.completed.map(proposal => proposal._id === action.payload._id ? action.payload : proposal)\r\n\r\n            return { \r\n                ...state\r\n                , completed: filteredState \r\n            }\r\n\r\n        // case 'UPDATE_PROPOSAL_COMPLETED_REMARKS':\r\n        //     const filteredState = state.completed.filter(proposal => proposal._id !== action.payload._id);\r\n\r\n        //     return {\r\n        //         ...state\r\n        //         , completed: filteredState\r\n        //     }\r\n\r\n        // case 'DELETE_PROPOSAL':\r\n        //     const deletedState = state.proposals.filter(proposal => proposal._id !== action.payload);\r\n\r\n        //     return { ...state,  proposals: deletedState }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default proposalCompletedReducer;","const initialState = {\r\n    presentations: []\r\n}\r\n\r\nconst presentationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_PRESENTATION':\r\n            return { \r\n                ...state\r\n                , presentations: action.payload \r\n            }\r\n            \r\n        case 'CREATE_PRESENTATION':\r\n            return { \r\n                ...state\r\n                , presentations: [ ...state.presentations, action.payload ] \r\n            }\r\n\r\n        case 'UPDATE_PRESENTATION':\r\n            const updatedState = state.presentations.map(presentation => presentation._id === action.payload._id ? action.payload : presentation);\r\n\r\n            return {\r\n                ...state\r\n                , presentations: updatedState\r\n            }\r\n\r\n        case 'DELETE_PRESENTATION':\r\n            const deletedState = state.presentations.filter(presentation => presentation._id !== action.payload);\r\n\r\n            return { \r\n                ...state\r\n                ,  presentations: deletedState \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default presentationReducer;","const initialState = {\r\n    publications: []\r\n}\r\n\r\nconst publicationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_PUBLICATION':\r\n            return { \r\n                ...state\r\n                , publications: action.payload \r\n            }\r\n            \r\n        case 'CREATE_PUBLICATION':\r\n            return { \r\n                ...state\r\n                , publications: [ ...state.publications, action.payload ] \r\n            }\r\n\r\n        case 'UPDATE_PUBLICATION':\r\n            const updatedState = state.publications.map(publication => publication._id === action.payload._id ? action.payload : publication);\r\n\r\n            return {\r\n                ...state\r\n                , publications: updatedState\r\n            }\r\n\r\n        case 'DELETE_PUBLICATION':\r\n            const deletedState = state.publications.filter(publication => publication._id !== action.payload);\r\n\r\n            return { \r\n                ...state\r\n                ,  publications: deletedState \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default publicationReducer;","const initialState = {\r\n    utilizations: []\r\n}\r\n\r\nconst utilizationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_UTILIZATION':\r\n            return { \r\n                ...state\r\n                , utilizations: action.payload \r\n            }\r\n            \r\n        case 'CREATE_UTILIZATION':\r\n            return { \r\n                ...state\r\n                , utilizations: [ ...state.utilizations, action.payload ] \r\n            }\r\n\r\n        case 'UPDATE_UTILIZATION':\r\n            const updatedState = state.utilizations.map(proposal => proposal._id === action.payload._id ? action.payload : proposal);\r\n\r\n            return {\r\n                ...state\r\n                , utilizations: updatedState\r\n            }\r\n\r\n        case 'DELETE_UTILIZATION':\r\n            const deletedState = state.utilizations.filter(proposal => proposal._id !== action.payload);\r\n\r\n            return { \r\n                ...state\r\n                ,  utilizations: deletedState \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default utilizationReducer;","const initialState = {\r\n    innovations: []\r\n}\r\n\r\nconst innovationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_INNOVATION':\r\n            return { \r\n                ...state\r\n                , innovations: action.payload \r\n            }\r\n            \r\n        case 'CREATE_INNOVATION':\r\n            return { \r\n                ...state\r\n                , innovations: [ ...state.innovations, action.payload ] \r\n            }\r\n\r\n        case 'UPDATE_INNOVATION':\r\n            const updatedState = state.innovations.map(proposal => proposal._id === action.payload._id ? action.payload : proposal);\r\n\r\n            return {\r\n                ...state\r\n                , innovations: updatedState\r\n            }\r\n\r\n        case 'DELETE_INNOVATION':\r\n            const deletedState = state.innovations.filter(proposal => proposal._id !== action.payload);\r\n\r\n            return { \r\n                ...state\r\n                ,  innovations: deletedState \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default innovationReducer;","const initialState = {\r\n    seminars: []\r\n}\r\n\r\nconst seminarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_SEMINAR':\r\n            return { \r\n                ...state\r\n                , seminars: action.payload \r\n            }\r\n            \r\n        case 'CREATE_SEMINAR':\r\n            return { \r\n                ...state\r\n                , seminars: [ ...state.seminars, action.payload ] \r\n            }\r\n\r\n        case 'UPDATE_SEMINAR':\r\n            const updatedState = state.seminars.map(seminar => seminar._id === action.payload._id ? action.payload : seminar);\r\n\r\n            return {\r\n                ...state\r\n                , seminars: updatedState\r\n            }\r\n\r\n        case 'DELETE_SEMINAR':\r\n            const deletedState = state.seminars.filter(seminar => seminar._id !== action.payload);\r\n\r\n            return { \r\n                ...state\r\n                ,  seminars: deletedState \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default seminarReducer;","const initialState = {\r\n    campuses: []\r\n}\r\n\r\nconst campusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_CAMPUS':\r\n            return { ...state, campuses: action.payload }\r\n        case 'CREATE_CAMPUS':\r\n            return { ...state, campuses: [...state.campuses, action.payload] }\r\n        case 'UPDATE_CAMPUS':\r\n            const updatedState = state.campuses.map(campus => campus._id === action.payload._id ? action.payload : campus);\r\n\r\n            return { ...state,  campuses: updatedState }\r\n        case 'DELETE_CAMPUS':\r\n            const deletedState = state.campuses.filter(campus => campus._id !== action.payload);\r\n\r\n            return { ...state,  campuses: deletedState }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default campusReducer;","const initialState = {\r\n    departments: []\r\n}\r\n\r\nconst departmentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DEPT':\r\n            return { \r\n                ...state\r\n                , departments: action.payload \r\n            }\r\n\r\n        case 'CREATE_DEPT':\r\n            return { \r\n                ...state\r\n                , departments: [...state.departments, action.payload] \r\n            }\r\n\r\n        case 'UPDATE_DEPT':\r\n            const updatedState = state.departments.map(department => department._id === action.payload._id ? action.payload : department)\r\n\r\n            return { \r\n                ...state\r\n                , departments: updatedState \r\n            }\r\n\r\n        case 'DELETE_DEPT':\r\n            const deletedState = state.departments.filter(department => department._id !== action.payload)\r\n\r\n            return { \r\n                ...state\r\n                ,  departments: deletedState \r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default departmentReducer;","const initialState = {\r\n    accounts: [],\r\n};\r\n\r\nconst accountReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_ACCOUNT\":\r\n            return {\r\n                ...state,\r\n                accounts: action.payload,\r\n            };\r\n\r\n        case \"CREATE_ACCOUNT\":\r\n            return {\r\n                ...state,\r\n                accounts: [...state.accounts, action.payload],\r\n            };\r\n\r\n        case \"UPDATE_ACCOUNT\":\r\n            const updatedState = state.accounts.map((accounts) =>\r\n                accounts._id === action.payload._id ? action.payload : accounts\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                accounts: updatedState,\r\n            };\r\n\r\n        case \"DELETE_ACCOUNT\":\r\n            const deletedState = state.accounts.filter(\r\n                (accounts) => accounts._id !== action.payload\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                accounts: deletedState,\r\n            };\r\n\r\n        case \"CHANGE_PASSWORD\":\r\n            const updatedPassword = state.accounts.map((accounts) =>\r\n                accounts._id === action.payload._id ? action.payload : accounts\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                accounts: updatedPassword,\r\n            };\r\n\r\n        case \"FETCH_LOGGED_IN_ACCOUNT\":\r\n            return {\r\n                ...state,\r\n                accounts: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default accountReducer;\r\n","const initialState = {\r\n    logged_accounts: []\r\n}\r\n\r\nconst loggedAccountReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_LOGGED_ACCOUNT':\r\n            return { \r\n                ...state\r\n                , logged_accounts: action.payload \r\n            }\r\n        \r\n        case 'LOG_IN':\r\n            return { \r\n                ...state\r\n                , logged_accounts: [...state.logged_in, action.payload] \r\n            }\r\n        \r\n        case 'LOG_OUT':\r\n            return { \r\n                ...state\r\n                , logged_accounts: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default loggedAccountReducer;","import { combineReducers } from 'redux';\r\n\r\nimport proposal_reducer from './proposal';\r\n// import proposal_submitted_reducer from './proposal_submitted_reducer';\r\n// import proposal_evaluated_reducer from './proposal_evaluated_reducer';\r\n// import proposal_for_approval_reducer from './proposal_for_approval_reducer';\r\n// import proposal_approved_reducer from './proposal_approved_reducer';\r\nimport completed_reducer from './completed';\r\n// import completed_approved_reducer from './completed_approved_reducer';\r\nimport presentation_reducer from './presentation';\r\nimport publication_reducer from './publication';\r\nimport utilization_reducer from './utilization';\r\nimport innovation_reducer from './innovation';\r\nimport seminar_reducer from './seminar';\r\n\r\nimport campus_reducer from './campus';\r\nimport department_reducer from './department';\r\nimport account_reducer from './account';\r\n\r\nimport logged_account_reducer from './authentication';\r\n\r\nexport default combineReducers({\r\n    proposal: proposal_reducer\r\n    // , proposal_submitted: proposal_submitted_reducer\r\n    // , proposal_evaluated: proposal_evaluated_reducer\r\n    // , proposal_for_approval: proposal_for_approval_reducer\r\n    // , proposal_approved: proposal_approved_reducer\r\n    , completed: completed_reducer\r\n    // , completed_approved: completed_approved_reducer\r\n    , presentation: presentation_reducer\r\n    , publication: publication_reducer\r\n    , utilization: utilization_reducer\r\n    , innovation: innovation_reducer\r\n    , seminar: seminar_reducer\r\n    , campus: campus_reducer\r\n    , department: department_reducer\r\n    , account: account_reducer\r\n    , logged_account: logged_account_reducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\n\nimport reducers from './redux/reducers';\n\n// create store\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</Provider>\n\t</React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}