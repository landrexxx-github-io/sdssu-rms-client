[{"E:\\Projects\\_Backup\\react-admin\\client\\src\\index.js":"1","E:\\Projects\\_Backup\\react-admin\\client\\src\\App.js":"2","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\Header.js":"3","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\Footer.js":"4","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\SideMenu.js":"5","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\Content.js":"6","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Dashboard.js":"7","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Completed.js":"8","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Utilization.js":"9","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Proposal.js":"10","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Publication.js":"11","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Innovation.js":"12","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Presentation.js":"13","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\errors\\Error404.js":"14","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\Campus.js":"15","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\Colleges.js":"16","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\Accounts.js":"17","E:\\Projects\\_Backup\\react-admin\\client\\src\\reducers\\index.js":"18","E:\\Projects\\_Backup\\react-admin\\client\\src\\reducers\\campus_reducer.js":"19","E:\\Projects\\_Backup\\react-admin\\client\\src\\actions\\campus_action.js":"20","E:\\Projects\\_Backup\\react-admin\\client\\src\\api\\index.js":"21","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\modal\\Campus_modal.js":"22","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\hooks\\useForm.js":"23","Z:\\Projects\\_Backup\\react-admin\\client\\src\\index.js":"24","Z:\\Projects\\_Backup\\react-admin\\client\\src\\App.js":"25","Z:\\Projects\\_Backup\\react-admin\\client\\src\\api\\index.js":"26","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\auth\\Login.js":"27","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Content.js":"28","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\manage\\Campus.js":"29","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\manage\\Department.js":"30","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\manage\\Account.js":"31","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Dashboard.js":"32","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Proposal.js":"33","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Publication.js":"34","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Utilization.js":"35","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Innovation.js":"36","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Header.js":"37","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\SideMenu.js":"38","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Footer.js":"39","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\auth\\Registration.js":"40","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\account_action.js":"41","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\campus_action.js":"42","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\department_action.js":"43","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\auth_action.js":"44","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\index.js":"45","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\innovation_action.js":"46","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\proposal_approved_action.js":"47","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\completed_action.js":"48","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\presentation_action.js":"49","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\proposal_action.js":"50","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\publication_action.js":"51","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\utilization_action.js":"52","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\campus.js":"53","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\account.js":"54","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\authentication.js":"55","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\completed.js":"56","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\presentation.js":"57","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\publication.js":"58","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\innovation.js":"59","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\utilization.js":"60","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\proposal.js":"61","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\department.js":"62","Z:\\Projects\\_Backup\\react-admin\\client\\src\\context\\AccountContext.js":"63","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Main.js":"64","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Completed.jsx":"65","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Presentation.jsx":"66","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\dashboard\\Faculties.jsx":"67","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\dashboard\\Administrator.jsx":"68","D:\\research-management-system\\client\\src\\index.js":"69","D:\\research-management-system\\client\\src\\App.js":"70","D:\\research-management-system\\client\\src\\redux\\reducers\\index.js":"71","D:\\research-management-system\\client\\src\\context\\AccountContext.js":"72","D:\\research-management-system\\client\\src\\components\\layouts\\Main.js":"73","D:\\research-management-system\\client\\src\\redux\\reducers\\utilization.js":"74","D:\\research-management-system\\client\\src\\redux\\reducers\\innovation.js":"75","D:\\research-management-system\\client\\src\\redux\\reducers\\presentation.js":"76","D:\\research-management-system\\client\\src\\redux\\reducers\\account.js":"77","D:\\research-management-system\\client\\src\\redux\\reducers\\campus.js":"78","D:\\research-management-system\\client\\src\\redux\\reducers\\completed.js":"79","D:\\research-management-system\\client\\src\\redux\\reducers\\department.js":"80","D:\\research-management-system\\client\\src\\redux\\reducers\\proposal.js":"81","D:\\research-management-system\\client\\src\\redux\\reducers\\publication.js":"82","D:\\research-management-system\\client\\src\\redux\\reducers\\authentication.js":"83","D:\\research-management-system\\client\\src\\components\\layouts\\Content.js":"84","D:\\research-management-system\\client\\src\\components\\layouts\\SideMenu.js":"85","D:\\research-management-system\\client\\src\\components\\layouts\\Header.js":"86","D:\\research-management-system\\client\\src\\components\\layouts\\Footer.js":"87","D:\\research-management-system\\client\\src\\components\\pages\\manage\\Department.js":"88","D:\\research-management-system\\client\\src\\components\\pages\\manage\\Campus.js":"89","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Completed.jsx":"90","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Presentation.jsx":"91","D:\\research-management-system\\client\\src\\components\\pages\\researches\\dashboard\\Administrator.jsx":"92","D:\\research-management-system\\client\\src\\components\\pages\\researches\\dashboard\\Faculties.jsx":"93","D:\\research-management-system\\client\\src\\redux\\actions\\campus_action.js":"94","D:\\research-management-system\\client\\src\\redux\\actions\\account_action.js":"95","D:\\research-management-system\\client\\src\\redux\\actions\\innovation_action.js":"96","D:\\research-management-system\\client\\src\\redux\\actions\\utilization_action.js":"97","D:\\research-management-system\\client\\src\\redux\\actions\\completed_action.js":"98","D:\\research-management-system\\client\\src\\redux\\actions\\publication_action.js":"99","D:\\research-management-system\\client\\src\\redux\\actions\\department_action.js":"100","D:\\research-management-system\\client\\src\\redux\\actions\\proposal_action.js":"101","D:\\research-management-system\\client\\src\\redux\\actions\\presentation_action.js":"102","D:\\research-management-system\\client\\src\\api\\index.js":"103","D:\\research-management-system\\client\\src\\components\\pages\\error\\PageNotFound.jsx":"104","D:\\research-management-system\\client\\src\\components\\pages\\manage\\Profile.jsx":"105","D:\\research-management-system\\client\\src\\components\\pages\\manage\\ChangePassword.jsx":"106","D:\\research-management-system\\client\\src\\redux\\actions\\auth_action.js":"107","D:\\research-management-system\\client\\src\\components\\auth\\Login.jsx":"108","D:\\research-management-system\\client\\src\\components\\auth\\Registration.jsx":"109","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Publication.jsx":"110","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Utilization.jsx":"111","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Innovation.jsx":"112","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Proposal.jsx":"113","D:\\research-management-system\\client\\src\\components\\pages\\researches\\Seminar.jsx":"114","D:\\research-management-system\\client\\src\\redux\\reducers\\seminar.js":"115","D:\\research-management-system\\client\\src\\redux\\actions\\seminar_action.js":"116","D:\\research-management-system\\client\\src\\components\\pages\\manage\\Account.jsx":"117","D:\\research-management-system\\client\\src\\components\\layouts\\SideMenuBarUser.jsx":"118"},{"size":579,"mtime":1611709129757,"results":"119","hashOfConfig":"120"},{"size":400,"mtime":1611238804533,"results":"121","hashOfConfig":"120"},{"size":8182,"mtime":1610370001787,"results":"122","hashOfConfig":"120"},{"size":516,"mtime":1610428001164,"results":"123","hashOfConfig":"120"},{"size":3413,"mtime":1610432847799,"results":"124","hashOfConfig":"120"},{"size":1871,"mtime":1611311709966,"results":"125","hashOfConfig":"120"},{"size":1865,"mtime":1610428249596,"results":"126","hashOfConfig":"120"},{"size":15831,"mtime":1610554539657,"results":"127","hashOfConfig":"120"},{"size":5781,"mtime":1610555848043,"results":"128","hashOfConfig":"120"},{"size":18852,"mtime":1610457396081,"results":"129","hashOfConfig":"120"},{"size":8249,"mtime":1610555409569,"results":"130","hashOfConfig":"120"},{"size":11683,"mtime":1610607396942,"results":"131","hashOfConfig":"120"},{"size":7841,"mtime":1610554606198,"results":"132","hashOfConfig":"120"},{"size":242,"mtime":1610381094006,"results":"133","hashOfConfig":"120"},{"size":5144,"mtime":1611757681934,"results":"134","hashOfConfig":"120"},{"size":5723,"mtime":1610608054349,"results":"135","hashOfConfig":"120"},{"size":12402,"mtime":1610626577090,"results":"136","hashOfConfig":"120"},{"size":160,"mtime":1611216375802,"results":"137","hashOfConfig":"120"},{"size":344,"mtime":1611715806842,"results":"138","hashOfConfig":"120"},{"size":608,"mtime":1611726575629,"results":"139","hashOfConfig":"120"},{"size":189,"mtime":1611738969700,"results":"140","hashOfConfig":"120"},{"size":3276,"mtime":1611763409860,"results":"141","hashOfConfig":"120"},{"size":336,"mtime":1611761630324,"results":"142","hashOfConfig":"120"},{"size":585,"mtime":1622670562267,"results":"143","hashOfConfig":"144"},{"size":1289,"mtime":1622773437102,"results":"145","hashOfConfig":"144"},{"size":3778,"mtime":1622771246265,"results":"146","hashOfConfig":"144"},{"size":5425,"mtime":1622781712471,"results":"147","hashOfConfig":"144"},{"size":3275,"mtime":1625390343974,"results":"148","hashOfConfig":"144"},{"size":9260,"mtime":1622669662455,"results":"149","hashOfConfig":"144"},{"size":10686,"mtime":1622669676783,"results":"150","hashOfConfig":"144"},{"size":21166,"mtime":1622669627824,"results":"151","hashOfConfig":"144"},{"size":15715,"mtime":1622784329738,"results":"152","hashOfConfig":"144"},{"size":47870,"mtime":1623381494636,"results":"153","hashOfConfig":"144"},{"size":27745,"mtime":1624695680811,"results":"154","hashOfConfig":"144"},{"size":20839,"mtime":1625389007437,"results":"155","hashOfConfig":"144"},{"size":28188,"mtime":1625387989115,"results":"156","hashOfConfig":"144"},{"size":9350,"mtime":1622727923086,"results":"157","hashOfConfig":"144"},{"size":3824,"mtime":1622781653490,"results":"158","hashOfConfig":"144"},{"size":743,"mtime":1622696261598,"results":"159","hashOfConfig":"144"},{"size":15777,"mtime":1623306196462,"results":"160","hashOfConfig":"144"},{"size":1936,"mtime":1622771375178,"results":"161","hashOfConfig":"144"},{"size":1488,"mtime":1622670397729,"results":"162","hashOfConfig":"144"},{"size":1541,"mtime":1622670419752,"results":"163","hashOfConfig":"144"},{"size":661,"mtime":1622670398600,"results":"164","hashOfConfig":"144"},{"size":1605,"mtime":1622671217589,"results":"165","hashOfConfig":"144"},{"size":1721,"mtime":1622670423483,"results":"166","hashOfConfig":"144"},{"size":1742,"mtime":1622670459323,"results":"167","hashOfConfig":"144"},{"size":2368,"mtime":1622670407195,"results":"168","hashOfConfig":"144"},{"size":1779,"mtime":1622670429268,"results":"169","hashOfConfig":"144"},{"size":2173,"mtime":1623171729364,"results":"170","hashOfConfig":"144"},{"size":1725,"mtime":1622670437123,"results":"171","hashOfConfig":"144"},{"size":1738,"mtime":1622670439987,"results":"172","hashOfConfig":"144"},{"size":825,"mtime":1622670724990,"results":"173","hashOfConfig":"144"},{"size":1213,"mtime":1622670687363,"results":"174","hashOfConfig":"144"},{"size":709,"mtime":1622670720915,"results":"175","hashOfConfig":"144"},{"size":1545,"mtime":1622670796524,"results":"176","hashOfConfig":"144"},{"size":1150,"mtime":1622670813533,"results":"177","hashOfConfig":"144"},{"size":1131,"mtime":1622670846232,"results":"178","hashOfConfig":"144"},{"size":1102,"mtime":1622670810455,"results":"179","hashOfConfig":"144"},{"size":1116,"mtime":1622670849608,"results":"180","hashOfConfig":"144"},{"size":1342,"mtime":1622670839642,"results":"181","hashOfConfig":"144"},{"size":1086,"mtime":1622670805590,"results":"182","hashOfConfig":"144"},{"size":78,"mtime":1622673339839,"results":"183","hashOfConfig":"144"},{"size":388,"mtime":1623070033641,"results":"184","hashOfConfig":"144"},{"size":39051,"mtime":1624257835979,"results":"185","hashOfConfig":"144"},{"size":25753,"mtime":1625388261271,"results":"186","hashOfConfig":"144"},{"size":10158,"mtime":1625482730652,"results":"187","hashOfConfig":"144"},{"size":15729,"mtime":1625389877973,"results":"188","hashOfConfig":"144"},{"size":585,"mtime":1622670562267,"results":"189","hashOfConfig":"190"},{"size":1289,"mtime":1622773437102,"results":"191","hashOfConfig":"190"},{"size":1679,"mtime":1630987224089,"results":"192","hashOfConfig":"190"},{"size":78,"mtime":1622673339839,"results":"193","hashOfConfig":"190"},{"size":961,"mtime":1631153451494,"results":"194","hashOfConfig":"190"},{"size":1116,"mtime":1622670849608,"results":"195","hashOfConfig":"190"},{"size":1102,"mtime":1622670810455,"results":"196","hashOfConfig":"190"},{"size":1150,"mtime":1622670813533,"results":"197","hashOfConfig":"190"},{"size":1579,"mtime":1626518019752,"results":"198","hashOfConfig":"190"},{"size":825,"mtime":1622670724990,"results":"199","hashOfConfig":"190"},{"size":1832,"mtime":1631021598918,"results":"200","hashOfConfig":"190"},{"size":1086,"mtime":1622670805590,"results":"201","hashOfConfig":"190"},{"size":1342,"mtime":1622670839642,"results":"202","hashOfConfig":"190"},{"size":1131,"mtime":1622670846232,"results":"203","hashOfConfig":"190"},{"size":709,"mtime":1622670720915,"results":"204","hashOfConfig":"190"},{"size":8944,"mtime":1631379626494,"results":"205","hashOfConfig":"190"},{"size":14400,"mtime":1631156003541,"results":"206","hashOfConfig":"190"},{"size":19963,"mtime":1631159320117,"results":"207","hashOfConfig":"190"},{"size":743,"mtime":1622696261598,"results":"208","hashOfConfig":"190"},{"size":12657,"mtime":1625844950814,"results":"209","hashOfConfig":"190"},{"size":10271,"mtime":1625843791664,"results":"210","hashOfConfig":"190"},{"size":55709,"mtime":1632310569488,"results":"211","hashOfConfig":"190"},{"size":36284,"mtime":1631108818416,"results":"212","hashOfConfig":"190"},{"size":27206,"mtime":1626618041381,"results":"213","hashOfConfig":"190"},{"size":22931,"mtime":1625825766334,"results":"214","hashOfConfig":"190"},{"size":1488,"mtime":1622670397729,"results":"215","hashOfConfig":"190"},{"size":1922,"mtime":1626594108294,"results":"216","hashOfConfig":"190"},{"size":1694,"mtime":1626608349504,"results":"217","hashOfConfig":"190"},{"size":1738,"mtime":1622670439987,"results":"218","hashOfConfig":"190"},{"size":2251,"mtime":1631022549497,"results":"219","hashOfConfig":"190"},{"size":1725,"mtime":1622670437123,"results":"220","hashOfConfig":"190"},{"size":1541,"mtime":1622670419752,"results":"221","hashOfConfig":"190"},{"size":2173,"mtime":1631156730286,"results":"222","hashOfConfig":"190"},{"size":1779,"mtime":1627287734701,"results":"223","hashOfConfig":"190"},{"size":4354,"mtime":1632315248207,"results":"224","hashOfConfig":"190"},{"size":45968,"mtime":1625913186499,"results":"225","hashOfConfig":"190"},{"size":20949,"mtime":1631164268437,"results":"226","hashOfConfig":"190"},{"size":7991,"mtime":1626610399172,"results":"227","hashOfConfig":"190"},{"size":1345,"mtime":1626596553054,"results":"228","hashOfConfig":"190"},{"size":8729,"mtime":1626677168823,"results":"229","hashOfConfig":"190"},{"size":29092,"mtime":1631175628930,"results":"230","hashOfConfig":"190"},{"size":38957,"mtime":1631504656056,"results":"231","hashOfConfig":"190"},{"size":28765,"mtime":1631108636876,"results":"232","hashOfConfig":"190"},{"size":40133,"mtime":1631108681544,"results":"233","hashOfConfig":"190"},{"size":65975,"mtime":1631850055169,"results":"234","hashOfConfig":"190"},{"size":22928,"mtime":1631148252528,"results":"235","hashOfConfig":"190"},{"size":1055,"mtime":1630987191806,"results":"236","hashOfConfig":"190"},{"size":1670,"mtime":1630994570915,"results":"237","hashOfConfig":"190"},{"size":16407,"mtime":1631164562714,"results":"238","hashOfConfig":"190"},{"size":0,"mtime":1631153280060,"results":"239","hashOfConfig":"190"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"123vcnr",{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"242"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"242"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"242"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"242"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},"7lvhkh",{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"294"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"294"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"294"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"294"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"294"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"294"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"294"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"294"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"294"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"294"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"294"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"347"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"294"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"294"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g3jen0",{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"479","messages":"480","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\_Backup\\react-admin\\client\\src\\index.js",[],["499","500"],"E:\\Projects\\_Backup\\react-admin\\client\\src\\App.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\Header.js",["501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521"],"import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n            <React.Fragment>\r\n\t\t\t\t<header className=\"topbar\" data-navbarbg=\"skin6\">\r\n\t\t\t\t\t\t<nav className=\"navbar top-navbar navbar-expand-md\">\r\n\t\t\t\t\t\t\t<div className=\"navbar-header\" data-logobg=\"skin6\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"#\"><i className=\"ti-menu ti-close\" /></a>\r\n\t\t\t\t\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t\t\t\t<a href=\"index.html\">\r\n\t\t\t\t\t\t\t\t\t{/* <b className=\"logo-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"light-logo\" />\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t<span className=\"logo-text\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-text.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-light-text.png\" className=\"light-logo\" alt=\"homepage\" />\r\n\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t<span className=\"logo-text\">\r\n\t\t\t\t\t\t\t\t\t\t[ Title of the App ] \t\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"#\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\" /></a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t\t\t<ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle pl-md-3 position-relative\" href=\"#\" id=\"bell\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<span><i data-feather=\"bell\" className=\"svg-icon\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"badge badge-primary notify-no rounded-circle\">5</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-left mailbox animated bounceInDown\">\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"list-style-none\">\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"message-center notifications position-relative\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"btn btn-danger rounded-circle btn-circle\"><i data-feather=\"airplay\" className=\"text-white\" /></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Luanch Admin</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">Just see\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe my new\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadmin!</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:30 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"btn btn-success text-white rounded-circle btn-circle\"><i data-feather=\"calendar\" className=\"text-white\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Event today</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted text-truncate\">Just\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta reminder that you have event</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:10 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"btn btn-info rounded-circle btn-circle\"><i data-feather=\"settings\" className=\"text-white\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Settings</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted text-truncate\">You\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcan customize this template\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tas you want</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:08 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"btn btn-primary rounded-circle btn-circle\"><i data-feather=\"box\" className=\"text-white\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Pavan kumar</h6> <span className=\"font-12 text-nowrap d-block text-muted\">Just\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsee the my admin!</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:02 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"nav-link pt-3 text-center text-dark\" href=\"#\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Check all notifications</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-right\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<i data-feather=\"settings\" className=\"svg-icon\" />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\">Action</a>\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item d-none d-md-block\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"customize-input\">\r\n\t\t\t\t\t\t\t\t\t\t<select className=\"custom-select form-control bg-white custom-radius custom-shadow border-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option>EN</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={1}>AB</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={2}>AK</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={3}>BE</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"navbar-nav float-right\">\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item d-none d-md-block\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"customize-input\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-control custom-shadow custom-radius border-0 bg-white\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"form-control-icon\" data-feather=\"search\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"../assets/images/users/profile-avatar.svg\" alt=\"user\" className=\"rounded-circle\" width={40} />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 d-none d-lg-inline-block\"><span>Hello,</span> <span className=\"text-dark\">Joe Candia</span> <i data-feather=\"chevron-down\" className=\"svg-icon\" /></span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"user\" className=\"svg-icon mr-2 ml-1\" /> My Profile</a>\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"mail\" className=\"svg-icon mr-2 ml-1\" /> Inbox</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"settings\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tAccount Setting\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"power\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"pl-4 p-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"btn btn-sm btn-info\">View\r\n\t\t\t\t\t\t\t\t\t\t\t\tProfile\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</header>\r\n            </React.Fragment>\r\n\t)}\r\n}\r\n","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\Footer.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\SideMenu.js",["522","523"],"import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nexport default class SideMenu extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<aside className=\"left-sidebar\" data-sidebarbg=\"skin6\">\r\n\t\t\t\t\t<div className=\"scroll-sidebar\" data-sidebarbg=\"skin6\">\r\n\t\t\t\t\t\t<nav className=\"sidebar-nav\">\r\n\t\t\t\t\t\t\t<ul id=\"sidebarnav\">\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/\">\r\n\t\t\t\t\t\t\t\t\t\t<i data-feather=\"home\" className=\"feather-icon\" /><span className=\"hide-menu\">Dashboard</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"list-divider\" />\r\n\t\t\t\t\t\t\t\t<li className=\"nav-small-cap\"><span className=\"hide-menu\">Research</span></li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a href=\"/proposal\" className=\"sidebar-link\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"file-text\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Proposal</span></a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/completed\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"file-text\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Completed</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/presentation\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"file-text\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Presentation</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/publication\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"file-text\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Publication</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/utilization\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"file-text\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Utilization</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/innovation\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"monitor\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Innovation</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"list-divider\" />\r\n\t\t\t\t\t\t\t\t<li className=\"nav-small-cap\"><span className=\"hide-menu\">Settings</span></li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/campus\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"trello\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Campus</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/colleges\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"trello\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Colleges</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t\t<a className=\"sidebar-link\" href=\"/accounts\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"user\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Accounts</span>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"list-divider\" />\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</aside>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\Content.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Dashboard.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Completed.js",["524"],"import React, { Component } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css';\r\nimport Stepper from 'bs-stepper';\r\n\r\nexport default class Completed extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.stepper = new Stepper(document.querySelector('#completed-stepper'), {\r\n            linear: false,\r\n            animation: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-breadcrumb\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7 align-self-center\">\r\n                        <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Completed</h3>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <nav aria-label=\"breadcrumb\">\r\n                                    <ol className=\"breadcrumb m-0 p-0\">\r\n                                        <li className=\"breadcrumb-item\">\r\n                                            <a href=\"/\">Research</a>\r\n                                        </li>\r\n                                        <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                            <a href=\"/completed\">Completed</a>\r\n                                        </li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-5 align-self-center\">\r\n                            <div className=\"customize-input float-right\">\r\n                                <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                    <option>2019</option>\r\n                                    <option value={1}>2020</option>\r\n                                    <option value={2}>2021</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Start of modal add here */}\r\n                <div className=\"modal fade\" id=\"bs-example-modal-lg\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header bg-primary text-light\">\r\n                                <h4 className=\"modal-title\" id=\"myLargeModalLabel\">Add Completed Research</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                            </div>\r\n                            <form>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"container\">\r\n                                        <div id=\"completed-stepper\" className=\"bs-stepper\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <div className=\"bs-stepper-header\">\r\n                                                        <div className=\"step\" data-target=\"#test-1-1\">\r\n                                                            <button className=\"step-trigger\">\r\n                                                                <span className=\"bs-stepper-circle\">1</span>\r\n                                                                <span className=\"bs-stepper-label\">Completed (From Proposal)</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                    <div className=\"bs-stepper-header\">\r\n                                                        <div className=\"step\" data-target=\"#test-1-2\">\r\n                                                            <button className=\"step-trigger\">\r\n                                                                <span className=\"bs-stepper-circle\">2</span>\r\n                                                                <span className=\"bs-stepper-label\">Completed (New)</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"bs-stepper-content\">\r\n                                                <div id=\"test-1-1\" className=\"content\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Title of Research <span className=\"text-danger\"> *</span></label>\r\n                                                                <select name=\"research_id\" id=\"research_id\" className=\"custom-select form-control\">\r\n                                                                    <option value=\"\">Choose...</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Abstract <span className=\"text-danger\"> *</span></label>\r\n                                                                <textarea className=\"form-control\" id=\"abstract\" name=\"abstract\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Upload <span className=\"text-danger\">*</span></label>\r\n                                                                <div className=\"custom-file\">\r\n                                                                    <input type=\"file\" className=\"custom-file-input\" />\r\n                                                                    <label className=\"custom-file-label\">Choose file</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div id=\"test-1-2\" className=\"content\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Title of Research <span className=\"text-danger\"> *</span></label>\r\n                                                                <input type=\"text\" className=\"form-control\" id=\"title_of_research\" name=\"title_of_research\" placeholder=\"Enter title of research\"/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label htmlFor=\"\">Type of Research <span className=\"text-danger\"> *</span></label>\r\n                                                                <select name=\"type_of_research\" id=\"type_of_research\" className=\"custom-select form-control\">\r\n                                                                    <option value=\"\">Choose...</option>\r\n                                                                    <option value=\"descriptive\">Descriptive</option>\r\n                                                                    <option value=\"developmental\">Developmental</option>\r\n                                                                    <option value=\"experimental\">Experimental</option>\r\n                                                                    <option value=\"modelling\">Modelling</option>\r\n                                                                    <option value=\"others\">Others</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Author(s) <span className=\"text-danger\"> *</span></label>\r\n                                                                <textarea type=\"text\" className=\"form-control\" id=\"author\" name=\"author\" placeholder=\"Enter author(s)\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label htmlFor=\"\">Source of Funding <span className=\"text-danger\"> *</span></label>\r\n                                                                <select name=\"source_of_funding\" id=\"source_of_funding\" className=\"custom-select form-control\">\r\n                                                                    <option value=\"\">Choose...</option>\r\n                                                                    <option value=\"stf\">STF</option>\r\n                                                                    <option value=\"gaa\">GAA</option>\r\n                                                                    <option value=\"external\">External</option>\r\n                                                                    <option value=\"personal\">Personal</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label htmlFor=\"\">Name of Agency </label>\r\n                                                                <input type=\"text\" name=\"name_of_agency\" id=\"name_of_agency\" className=\"form-control\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label htmlFor=\"\">Date of Completion <span className=\"text-danger\"> *</span></label>\r\n                                                                <input type=\"date\" className=\"form-control\" id=\"date_of_completion\" name=\"date_of_completion\" placeholder=\"mm/dd/yyyy\"/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Abstract <span className=\"text-danger\"> *</span></label>\r\n                                                                <textarea className=\"form-control\" id=\"abstract\" name=\"abstract\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label htmlFor=\"\">Upload <span className=\"text-danger\">*</span></label>\r\n                                                                <div className=\"custom-file\">\r\n                                                                    <input type=\"file\" className=\"custom-file-input\" />\r\n                                                                    <label className=\"custom-file-label\">Choose file</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                                </div>    \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* End of modal add here */}\r\n\r\n                {/* This is where the content will be displayed. */}\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title text-right\">\r\n                                <button type=\"button\" className=\"btn btn-circle btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#bs-example-modal-lg\">\r\n                                    <i className=\"fas fa-plus\"></i>\r\n                                </button>\r\n                            </h4>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Utilization.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Proposal.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Publication.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Innovation.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\researches\\Presentation.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\errors\\Error404.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\Campus.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\Colleges.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\Accounts.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\reducers\\index.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\reducers\\campus_reducer.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\actions\\campus_action.js",[],"E:\\Projects\\_Backup\\react-admin\\client\\src\\api\\index.js",[],["525","526"],"E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\manage\\modal\\Campus_modal.js",["527","528","529","530","531"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCampus } from '../../../actions/campus_action';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport { Container \r\n    , Modal, ModalHeader, ModalBody, ModalFooter, Button\r\n    , Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst Campus_modal = ({ isOpen, isToggle, data }) => {\r\n    // const selectedCampus = useSelector((state) => currentId ? state.campus.find((c) => c._id === currentId) : null);\r\n    const dispatch = useDispatch();\r\n    \r\n    const [values, setValues] = useState({\r\n        campus_name: '',\r\n        campus_address: ''\r\n    })\r\n    \r\n    const handleOnChange = (e) => {\r\n        console.log('OnChange: ', e);\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // const [values, handleOnChange] = useForm(initialValues);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // dispatch(createCampus(values));\r\n    }\r\n\r\n    const handleClearForm = () => {\r\n        setValues({\r\n            campus_name: '',\r\n            campus_address: ''\r\n        })\r\n    }\r\n\r\n    console.log(\"Data:\", data);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* Modal Using Reactstrap */}\r\n            <Modal isOpen={isOpen} toggle={isToggle} size=\"lg\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={handleClearForm}>{!data.campus_id ? 'Add Campus' : 'Update Campus' }</ModalHeader>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label for=\"Name of Campus\">Campus Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"campus_name\"\r\n                                    id=\"campus_name\"\r\n                                    value={!data.campus_id ? values.campus_name : data.campus_name}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"Address of the Campus\">Campus Address</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"campus_address\"\r\n                                    id=\"campus_address\"\r\n                                    value={values.campus_address}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={isToggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            {/* End of Modal Using ReactStrap */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Campus_modal;","E:\\Projects\\_Backup\\react-admin\\client\\src\\components\\hooks\\useForm.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\index.js",[],["532","533"],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\App.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\api\\index.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\auth\\Login.js",["534","535","536"],"import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport AccountContext from '../../context/AccountContext';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nimport { \r\n    Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Container\r\n    , Row\r\n    , Col\r\n    , Card \r\n} from \"reactstrap\";\r\n\r\nconst Login = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const [username, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const { setUserData } = useContext(AccountContext); \r\n    const history = useHistory();\r\n\r\n    const onSubmitFormLogin = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const loginResponse = await axios.post(\"http://localhost:3001/account/login\", { username, password });\r\n        const { success, token, user, message } = loginResponse.data;\r\n\r\n        if(success) {\r\n            setUserData({ token, user });\r\n            localStorage.setItem(\"auth-token\", `Bearer ${token}`);\r\n\r\n            history.push(\"/dashboard\");\r\n        } else {\r\n            toast.error(message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col sm=\"3\">&nbsp;</Col>\r\n                    <Col md=\"5\" className=\"pt-5 mx-auto d-block\">\r\n                        <Card className=\"p-5 bg-dark font-14\">\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <h2 className=\"text-white\">Welcome to RMS</h2>\r\n                                    <p>Enter your credentials.</p>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label className=\"text-white\"><FaUser></FaUser> Username</Label>\r\n                                    <Input\r\n                                        autoComplete=\"false\"\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        id=\"username\"\r\n                                        value={username}\r\n                                        onChange={(e) => {setUserName(e.target.value)}}\r\n                                        required\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"text-white\"><FaLock></FaLock> Password</Label>\r\n                                    <Input\r\n                                        autoComplete=\"false\"\r\n                                        type={showPassword ? \"text\" : \"password\"}\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => {setPassword(e.target.value)}}\r\n                                        required\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check className=\"text-white\">\r\n                                        <Input \r\n                                            type=\"checkbox\"\r\n                                            onChange={() => { setShowPassword(!showPassword) }} \r\n                                        />{' '}\r\n                                        Show password\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input \r\n                                        type=\"submit\" \r\n                                        onClick={onSubmitFormLogin} \r\n                                        className=\"btn btn-primary mt-3\" \r\n                                        value=\"Login\"\r\n                                    >\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"text-center\">\r\n                                    <Link className to=\"#\">Forgot password?</Link>\r\n                                </FormGroup>\r\n                                {/* <hr />\r\n                                <FormGroup className=\"text-center\">\r\n                                    <Label>New to RMS? <Link to=\"/registration\">Create an Account</Link></Label>\r\n                                </FormGroup> */}\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"3\">&nbsp;</Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Content.js",["537"],"import React, { Component, useContext } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// DASHBOARDS\r\nimport Faculty from '../pages/researches/dashboard/Faculties';\r\nimport Admin from '../pages/researches/dashboard/Administrator';\r\n\r\n// RESEARCH\r\nimport Proposal from '../pages/researches/Proposal';\r\nimport Completed from '../pages/researches/Completed';\r\nimport Presentation from '../pages/researches/Presentation';\r\nimport Publication from '../pages/researches/Publication';\r\nimport Utilization from '../pages/researches/Utilization';\r\nimport Innovation from '../pages/researches/Innovation';\r\n\r\n// SETTTINGS\r\nimport Campus from '../pages/manage/Campus';\r\nimport Department from '../pages/manage/Department';\r\nimport Account from '../pages/manage/Account';\r\n\r\n// LOGIN and REGISTRATION\r\nimport Login from '../auth/Login';\r\nimport Registration from '../auth/Registration';\r\n\r\nimport AccountContext from '../../context/AccountContext';\r\n\r\nconst Content = () => {\r\n    const { userData } = useContext(AccountContext);\r\n    \r\n    if(userData.user && userData.user !== undefined) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-wrapper\" style={{ \"display\": \"block\" }}>\r\n                    <Switch>\r\n                        <Route exact path=\"/dashboard\" render={() => {\r\n                            if(userData.user.user_type === \"rh\" || userData.user.user_type === \"admin\") {\r\n                                return <Admin />\r\n                            }\r\n                            \r\n                            else if(userData.user.user_type === \"user\") {\r\n                                return <Faculty />\r\n                            }\r\n                        }}></Route>\r\n\r\n                        <Route exact path=\"/proposal\" render={() => <Proposal currentUser={userData.user}/>}></Route>\r\n                        <Route exact path=\"/completed\" render={() => <Completed currentUser={userData.user} />}></Route>\r\n                        <Route exact path=\"/presentation\" render={() => <Presentation currentUser={userData.user} />}></Route>\r\n                        <Route exact path=\"/publication\" render={() => <Publication currentUser={userData.user} />}></Route>\r\n                        <Route exact path=\"/utilization\" render={() => <Utilization currentUser={userData.user} />}></Route>\r\n                        <Route exact path=\"/innovation\" render={() => <Innovation currentUser={userData.user} /> }></Route>\r\n                        \r\n                        <Route exact path=\"/campus\" component={Campus}></Route>\r\n                        <Route exact path=\"/department\" component={Department}></Route>\r\n                        <Route exact path=\"/account\" component={Account}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login}></Route>\r\n                        <Route path=\"/registration\" component={Registration}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\manage\\Campus.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\manage\\Department.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\manage\\Account.js",["538","539","540","541","542"],"import React\r\n, { \r\n    useState\r\n    , useEffect \r\n} from 'react';\r\n\r\nimport { \r\n    useDispatch\r\n    , useSelector \r\n} from 'react-redux';\r\n\r\nimport { \r\n    getAccount\r\n    , createAccount \r\n} from '../../../redux/actions/account_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Row\r\n    , Col \r\n} from 'reactstrap';\r\n\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst CREATE_UPDATE = 'CREATE_UPDATE';\r\nconst ACTIVATE_ACCOUNT = 'ACTIVATE';\r\n\r\nconst Account = () => {\r\n    const account = useSelector((state) => state.account.accounts); // This is to populate campus data\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModalAccount] = useState(false);\r\n    const [modalActivateAccount, setModalAccountActivateAccount] = useState(false);\r\n\r\n    const [accountId, setAccountId] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [middleInitial, setMiddleInitial] = useState(\"\");\r\n    const [college, setCollege] = useState(\"\");\r\n    const [campus, setCampus] = useState(\"\");\r\n    const [fieldOfSpecialization, setFieldOfSpecialization] = useState(\"\");\r\n    const [educationalAttainment, setEducationalAttainment] = useState(\"\");\r\n\r\n    // Account activation\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [userType, setUserType] = useState(false);\r\n\r\n    // Flags\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"campus_no\",\r\n            text: \"\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 150,\r\n            cell: account => {\r\n                return(\r\n                    <>\r\n                        <Button\r\n                            color=\"secondary\" \r\n                            size=\"sm\" \r\n                            className=\"btn-circle\"\r\n                            onClick={() => showEditForm(account)}\r\n                        ><i className=\"fas fa-edit ml-1\"></i>\r\n                        </Button> &nbsp;\r\n                        <Button\r\n                            color=\"success\"\r\n                            size=\"sm\"\r\n                            className=\"btn-circle\"\r\n                            onClick={() => showActivateAccount(account._id)}\r\n                        ><i className=\"fas fa-lock\"></i>\r\n                        </Button>\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"full_name\",\r\n            text: \"Faculty Name\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"academic_rank\",\r\n            text: \"Academic Rank\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"college\",\r\n            text: \"College\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"activation_status\",\r\n            text: \"Status\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            cell: account => {\r\n                return(\r\n                    <div className=\"badge badge-success\">\r\n                        ACTIVE\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    const dtConfig = {\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                setModalAccount(!modal)\r\n            }\r\n        },\r\n    ]\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => { \r\n        dispatch(getAccount());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setAccountId(\"\");\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setMiddleInitial(\"\");\r\n        setEducationalAttainment(\"\");\r\n        setCollege(\"\");\r\n    }\r\n\r\n    const toggleModal = (modal_type) => {\r\n        if(modal_type === CREATE_UPDATE) \r\n            setModalAccount(!modal);\r\n\r\n        if(modal_type === ACTIVATE_ACCOUNT) \r\n            setModalAccountActivateAccount(!modalActivateAccount);\r\n\r\n        clearForm(); \r\n    }\r\n\r\n\r\n    const showEditForm = (data) => {\r\n        const { \r\n            _id\r\n            , first_name\r\n            , last_name\r\n            , middle_initial\r\n            , educational_attainment\r\n            , college \r\n        } = data;\r\n\r\n        toggleModal(CREATE_UPDATE);\r\n\r\n        setAccountId(_id);\r\n        setFirstName(first_name);\r\n        setLastName(last_name);\r\n        setMiddleInitial(middle_initial);\r\n        setEducationalAttainment(educational_attainment);\r\n        setCollege(college);\r\n    }\r\n\r\n    const showActivateAccount = () => {\r\n        toggleModal(ACTIVATE_ACCOUNT);\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            account_id: accountId,\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            middle_initial: middleInitial,\r\n            educational_attainment: educationalAttainment,\r\n            college: college\r\n        }\r\n\r\n        if(!accountId) {\r\n            dispatch(createAccount(data));\r\n        } else {\r\n            // dispatch(updateCampus(data));\r\n        }\r\n\r\n        toggleModal(CREATE_UPDATE);\r\n    }\r\n\r\n    const onSubmitFormActivateAccount = () => {\r\n        return false;\r\n    }\r\n\r\n    const onClickDelete = (campus_id) => {\r\n        const isDelete = window.confirm(\"Are you sure you want to delete this data?\");\r\n\r\n        if(isDelete) \r\n            // dispatch(deleteCampus(campus_id));\r\n            return false;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal isOpen={modal} toggle={() => toggleModal(CREATE_UPDATE)} size=\"lg\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={() => toggleModal(CREATE_UPDATE)}>{!accountId ? 'Add Faculty' : 'Update Faculty'}</ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Input\r\n                                type=\"hidden\"\r\n                                name=\"account_id\"\r\n                                id=\"account_id\"\r\n                                value={accountId}\r\n                                onChange={e => { setAccountId(e.target.value) }}\r\n                            />\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"5\">\r\n                                        <Label>First Name <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"first_name\"\r\n                                            id=\"first_name\"\r\n                                            value={firstName}\r\n                                            placeholder=\"Juan dela\"\r\n                                            onChange={e => { setFirstName(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"5\">\r\n                                        <Label>Last Name <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"last_name\"\r\n                                            id=\"last_name\"\r\n                                            value={lastName}\r\n                                            placeholder=\"Cruz\"\r\n                                            onChange={e => { setLastName(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <Label>M.I.</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"middle_initial\"\r\n                                            id=\"middle_initial\"\r\n                                            value={middleInitial}\r\n                                            onChange={e => { setMiddleInitial(e.target.value) }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Email Address</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"email_address\"\r\n                                            id=\"email_address\"\r\n                                            // value={emailAddress}\r\n                                            // placeholder=\"example@email.com\"\r\n                                            // onChange={e => { setEmailAddress(e.target.value) }}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Academic Rank <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"academic_rank\"\r\n                                            id=\"academic_rank\"\r\n                                            // value={academicRank}\r\n                                            // onChange={e => { setAcademicRank(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"Instructor I\">Instructor I</option>\r\n                                            <option value=\"Instructor II\">Instructor II</option>\r\n                                            <option value=\"Instructor III\">Instructor III</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Educational Attainment</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"educational_attainment\"\r\n                                            id=\"educational_attainment\"\r\n                                            value={educationalAttainment}\r\n                                            placeholder=\"BSCS, MSCS and etc..\"\r\n                                            onChange={e => { setEducationalAttainment(e.target.value) }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        <Label>College <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"college\"\r\n                                            id=\"college\"\r\n                                            value={college}\r\n                                            onChange={e => { setCollege(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"CITE\">CITE - College of Information Technology Education</option>\r\n                                            <option value=\"CBM\">CBM - College of Business and Management</option>\r\n                                            <option value=\"CTE\">CTE - College of Teacher Education</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={() => toggleModal(CREATE_UPDATE)}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalActivateAccount} toggle={() => toggleModal(ACTIVATE_ACCOUNT)} size=\"md\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={() => toggleModal(ACTIVATE_ACCOUNT)}>Activate Account</ModalHeader>\r\n                <Form onSubmit={onSubmitFormActivateAccount}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Input\r\n                                type=\"hidden\"\r\n                                name=\"faculty_id\"\r\n                                id=\"faculty_id\"\r\n                                value=\"\"\r\n                            // onChange={e => { setCampusId(e.target.value) }}\r\n                            />\r\n                            <FormGroup>\r\n                                <Label>Username <span className=\"text-danger\">*</span></Label>\r\n                                <div style={{ 'position' : 'relative' }}>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        id=\"username\"\r\n                                        value={username}\r\n                                        onChange={e => { setUsername(e.target.value) }}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Password <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type={showPassword === true ? \"text\" : \"password\"}\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    onChange={e => { setPassword(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input value={showPassword} onChange={() => setShowPassword(!showPassword)} type=\"checkbox\" />{' '}\r\n                                    Show password\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <Label>User Type <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"user_type\"\r\n                                    id=\"user_type\"\r\n                                    value={userType}\r\n                                    onChange={e => { setUserType(e.target.value) }}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    <option value=\"user\">User</option>\r\n                                    <option value=\"guest\">Guest</option>\r\n                                    <option value=\"research_head\">Research Head</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Status </Label><br/>\r\n                                <div className=\"badge badge-secondary\">For Activation</div>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\"form-control\" type=\"button\" color=\"danger\" disabled>Disable</Button>\r\n                        <Button className=\"form-control\" type=\"submit\" color=\"primary\">Activate</Button>\r\n                        <Button color=\"light\" onClick={() => toggleModal(ACTIVATE_ACCOUNT)}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Account</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/campus\">Account</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <ReactDatatable\r\n                            className=\"table\"\r\n                            tHeadClassName=\"thead-dark\" \r\n                            config={dtConfig}\r\n                            records={account}\r\n                            columns={dtColumns}\r\n                            extraButtons={dtExtraButtons}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Account;\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Dashboard.js",[],["543","544"],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Proposal.js",["545","546"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { \r\n    getProposal\r\n    , createProposal\r\n    , updateProposal\r\n    , updateProposalRemarks\r\n    , deleteProposal \r\n} from '../../../redux/actions/proposal_action';\r\n\r\nimport { getAccount } from '../../../redux/actions/account_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Nav\r\n    , NavItem\r\n    , NavLink\r\n    , TabContent\r\n    , TabPane\r\n    , Row\r\n    , Col \r\n} from 'reactstrap';\r\n\r\nimport { MdDelete, MdKeyboardTab, MdMoreVert, MdThumbUp, MdThumbDown } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport moment from 'moment';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst REMARKS = {\r\n    PENDING: 'pending', \r\n    SUBMITTED: 'submitted', \r\n    EVALUATED: 'evaluated', \r\n    FOR_APPROVAL: 'for approval', \r\n    APPROVED: 'approved', \r\n    DISAPPROVED: 'disapproved'\r\n}\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: 'CREATE',\r\n    UPD: 'UPDATE',\r\n    DEL: 'DELETE'\r\n}\r\n\r\nconst USER_TYPE = {\r\n    USR: 'user', \r\n    ADMIN: 'admin',\r\n    RD: 'rd', //? research director \r\n    RH: 'rh', //? research head\r\n    CD: 'cd' //? campus director\r\n}\r\n\r\nconst Proposal = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate faculty data\r\n    const proposal = useSelector((state) => state.proposal.proposals); // This is to populate proposal data\r\n    \r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalPrompt, setModalPrompt] = useState(false);\r\n    const [modalType, setModaType] = useState(null);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [typeOfResearch, setTypeOfResearch] = useState(\"\");\r\n    const [author, setAuthor] = useState([]);\r\n    const [sourceOfFunding, setSourceOfFunding] = useState(\"\");\r\n    const [nameOfAgency, setNameOfAgency] = useState(\"\");\r\n    const [dateOfCompletion, setDateOfCompletion] = useState(new Date());\r\n    const [remarks, setRemarks] = useState(\"pending\");\r\n    const [status, setStatus] = useState(\"proposal\");\r\n    const [createdBy, setCreatedBy] = useState({ \r\n        user_id: currentUser.id, \r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`, \r\n        user_type: currentUser.user_type \r\n    });\r\n\r\n    // datatables configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            width: proposal.remarks === REMARKS.PENDING ? 80 : null,\r\n            cell: proposal => {\r\n                // Only the Research Head has the access of all the buttons\r\n                if(proposal.remarks === REMARKS.PENDING) {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Link \r\n                                to=\"#\"\r\n                                className={proposal.remarks === REMARKS.PENDING ? \"text-secondary\" : \"hidden\"}\r\n                                onClick={() => showEditForm(proposal)}\r\n                            ><MdKeyboardTab size={20} />\r\n                            </Link>\r\n                            &nbsp;&nbsp;\r\n                            <Link \r\n                                to=\"#\"\r\n                                className={proposal.remarks === REMARKS.PENDING ? \"text-secondary\" : \"hidden\"}\r\n                                onClick={() => showModalPrompt(proposal, null, MODAL_TYPE.DEL)}\r\n                            ><MdDelete size={20} />\r\n                            </Link>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            width: 400,\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"type_of_research\",\r\n            text: \"Type of Research\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: proposal => {\r\n                const { type_of_research } = proposal;\r\n\r\n                return <div>{ type_of_research.charAt(0).toUpperCase() + type_of_research.substring(1) }</div>\r\n            }\r\n        },\r\n        {\r\n            key: \"author_list\",\r\n            text: \"Author(s)\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"source_of_funding\",\r\n            text: \"Funding\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            isSearchable: true,\r\n            cell: proposal => {\r\n                const { source_of_funding } = proposal;\r\n\r\n                return <div>{ source_of_funding.charAt(0).toUpperCase() + source_of_funding.substring(1) }</div>\r\n            }\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            cell: proposal => {\r\n                // Only the Research Head has the access of all the buttons\r\n                if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                    if(proposal.remarks === REMARKS.PENDING) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    className=\"btn btn-primary btn-sm\"\r\n                                    onClick={() => showModalPrompt(proposal, REMARKS.SUBMITTED, MODAL_TYPE.UPD)} >Submitted\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )\r\n                    } else if(proposal.remarks === REMARKS.SUBMITTED) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    className=\"btn btn-primary btn-sm\"\r\n                                    onClick={() => showModalPrompt(proposal, REMARKS.EVALUATED, MODAL_TYPE.UPD)} >Evaluated\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )\r\n                    } else if(proposal.remarks === REMARKS.EVALUATED) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"dropdown\">\r\n                                    <Link to=\"#\" className=\"text-secondary dropdown-toggle\" type=\"button\" id=\"dropDownApprovedDisapproved\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <MdMoreVert size={20} />\r\n                                    </Link>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                        <Link \r\n                                            className=\"dropdown-item\" \r\n                                            to=\"#\"\r\n                                            onClick={() => showModalPrompt(proposal, REMARKS.FOR_APPROVAL, MODAL_TYPE.UPD)}\r\n                                        ><MdThumbUp/>&nbsp;&nbsp;For Approval</Link>\r\n                                        <Link \r\n                                            className=\"dropdown-item\" \r\n                                            to=\"#\"\r\n                                            onClick={() => showModalPrompt(proposal, REMARKS.DISAPPROVED, MODAL_TYPE.UPD)}\r\n                                        ><MdThumbDown/>&nbsp;&nbsp;Disapproved</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )\r\n                    } else if(proposal.remarks === REMARKS.FOR_APPROVAL) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Button\r\n                                    className=\"btn btn-primary btn-sm\"\r\n                                    onClick={() => showModalPrompt(proposal, REMARKS.APPROVED, MODAL_TYPE.UPD)} >Approved\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )\r\n                    } else if(proposal.remarks === REMARKS.APPROVED) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <div className=\"badge badge-success\">{ proposal.remarks.toUpperCase() }</div>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    ]\r\n\r\n    const dtConfig = {\r\n        key_column: 'id',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => { setModal(!modal) }\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccount());\r\n        dispatch(getProposal());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setTypeOfResearch(\"\");\r\n        setAuthor(\"\")\r\n        setSourceOfFunding(\"\");\r\n        setNameOfAgency(\"\");\r\n        setDateOfCompletion(\"\");\r\n        // setRemarks(\"\");\r\n    }\r\n\r\n    const toggleModal = (modal_type) => {\r\n        if(modal_type === MODAL_TYPE.CRT) { //? CREATE MODAL\r\n            setModal(!modal);\r\n            setModaType(MODAL_TYPE.CRT);\r\n            clearForm(); \r\n        } else if(modal_type === MODAL_TYPE.UPD) { //* UPDATE status modal prompt\r\n            setModalPrompt(!modalPrompt);\r\n            setModaType(MODAL_TYPE.UPD);\r\n        } else {\r\n            setModalPrompt(!modalPrompt);\r\n            setModaType(MODAL_TYPE.DEL); //! DELETE record modal prompt\r\n        }\r\n    }\r\n\r\n    const toggleTab = tabId => {\r\n        if(activeTab !== tabId) setActiveTab(tabId)\r\n    }\r\n\r\n    const showEditForm = (data) => {\r\n        const { \r\n            _id\r\n            , title_of_research\r\n            , type_of_research\r\n            , author\r\n            , source_of_funding\r\n            , name_of_agency\r\n            , date_of_completion\r\n            , remarks \r\n        } = data;\r\n        \r\n        const date_completed = moment(date_of_completion).format(\"MM/DD/YYYY\");\r\n\r\n        toggleModal(MODAL_TYPE.CRT);\r\n\r\n        setResearchId(_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setTypeOfResearch(type_of_research);\r\n        setAuthor(author);\r\n        setSourceOfFunding(source_of_funding);\r\n        setNameOfAgency(name_of_agency);\r\n        setDateOfCompletion(date_completed);\r\n        setRemarks(remarks);\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const authors = [];\r\n        const dateFormat = moment(dateOfCompletion).format(\"L\");\r\n        author.map((list) => authors.push(list.label));\r\n\r\n        const data = {\r\n            research_id: researchId\r\n            , title_of_research: titleOfResearch\r\n            , type_of_research: typeOfResearch\r\n            , author\r\n            , author_list: authors.join(\", \")\r\n            , source_of_funding: sourceOfFunding\r\n            , date_of_completion: dateFormat\r\n            , remarks: remarks\r\n            , status: status\r\n            , created_by: createdBy\r\n        }\r\n\r\n        if(!researchId) {\r\n            dispatch(createProposal(data));\r\n        } else {\r\n            dispatch(updateProposal(data));\r\n        }\r\n\r\n        toggleModal(MODAL_TYPE.CRT);\r\n    }\r\n\r\n    const showModalPrompt = (proposal, remarks, modal_type) => {\r\n        // UPDATE status modal will appear.\r\n        if(modal_type === MODAL_TYPE.UPD) {\r\n            setResearchId(proposal._id);\r\n            setRemarks(remarks);\r\n            toggleModal(MODAL_TYPE.UPD);\r\n        }\r\n\r\n        // DELETE modal will appear\r\n        if(modal_type === MODAL_TYPE.DEL) {\r\n            setResearchId(proposal._id);\r\n            toggleModal(MODAL_TYPE.DEL);\r\n        }\r\n    }\r\n\r\n    const onSubmitUpdateStatusOrDelete = (modal_type) => {\r\n        // IF MODAL is delete\r\n        if(modal_type === MODAL_TYPE.DEL) {\r\n            dispatch(deleteProposal(researchId));\r\n        } else if(modal_type === MODAL_TYPE.UPD) {\r\n            dispatch(updateProposalRemarks({ research_id: researchId, remarks }));\r\n        }\r\n\r\n        toggleModal(modal_type === MODAL_TYPE.DEL ? MODAL_TYPE.DEL : MODAL_TYPE.UPD);\r\n    }\r\n\r\n    // ! PAHIBALO!\r\n    // ! DIRE KUHAON ANG RECORD NGA PENDING\r\n    const getPendingProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof proposal !== undefined){\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ALL the records.\r\n                    if(proposal[i].remarks === REMARKS.PENDING) {\r\n                        pending.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return pending;\r\n            } \r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n        \r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.PENDING && user_id === currentUserId) {\r\n                        pending.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return pending;\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const getSubmittedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const submitted = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.SUBMITTED) {\r\n                        submitted.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                            , created_by_id: proposal[i].created_by.user_id\r\n                            , created_by_name: proposal[i].created_by.full_name\r\n                            , created_by_type: proposal[i].created_by.user_type\r\n                        })\r\n                    } \r\n                }\r\n\r\n                return submitted;\r\n            } \r\n            // Current logged in user is USER.\r\n            else {\r\n                const submitted = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n        \r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.SUBMITTED && user_id === currentUserId) {\r\n                        submitted.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return submitted;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getEvaluatedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const evaluated = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.EVALUATED) {\r\n                        evaluated.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                            , created_by_id: proposal[i].created_by.user_id\r\n                            , created_by_name: proposal[i].created_by.full_name\r\n                            , created_by_type: proposal[i].created_by.user_type\r\n                        })\r\n                    } \r\n                }\r\n\r\n                return evaluated;\r\n            } \r\n            // Current logged in user is USER.\r\n            else {\r\n                const evaluated = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n        \r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.EVALUATED && user_id === currentUserId) {\r\n                        evaluated.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return evaluated;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getForApprovalProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const for_approval = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.FOR_APPROVAL) {\r\n                        for_approval.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                            , created_by_id: proposal[i].created_by.user_id\r\n                            , created_by_name: proposal[i].created_by.full_name\r\n                            , created_by_type: proposal[i].created_by.user_type\r\n                        })\r\n                    } \r\n                }\r\n\r\n                return for_approval;\r\n            } \r\n            // Current logged in user is USER.\r\n            else {\r\n                const for_approval = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n        \r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.FOR_APPROVAL && user_id === currentUserId) {\r\n                        for_approval.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return for_approval;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getApprovedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const approved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.APPROVED) {\r\n                        approved.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                            , created_by_id: proposal[i].created_by.user_id\r\n                            , created_by_name: proposal[i].created_by.full_name\r\n                            , created_by_type: proposal[i].created_by.user_type\r\n                        })\r\n                    } \r\n                }\r\n\r\n                return approved;\r\n            } \r\n            // Current logged in user is USER.\r\n            else {\r\n                const approved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n        \r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.APPROVED && user_id === currentUserId) {\r\n                        approved.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return approved;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getDisApprovedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof proposal !== undefined) {\r\n            // Current logged in is RESEARCH HEAD or ADMINISTRATOR.\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const disapproved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Displays ONLY the proposal of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.DISAPPROVED) {\r\n                        disapproved.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                            , created_by_id: proposal[i].created_by.user_id\r\n                            , created_by_name: proposal[i].created_by.full_name\r\n                            , created_by_type: proposal[i].created_by.user_type\r\n                        })\r\n                    } \r\n                }\r\n\r\n                return disapproved;\r\n            } \r\n            // Current logged in user is USER.\r\n            else {\r\n                const disapproved = [];\r\n\r\n                for (let i = 0; i < proposal.length; i++) {\r\n                    // Destructure some of the details created by.\r\n                    let { user_id } = proposal[i].created_by;\r\n        \r\n                    // Displays ONLY the records of the current logged in user.\r\n                    if(proposal[i].remarks === REMARKS.DISAPPROVED && user_id === currentUserId) {\r\n                        disapproved.push({\r\n                            _id: proposal[i]._id\r\n                            , title_of_research: proposal[i].title_of_research\r\n                            , type_of_research: proposal[i].type_of_research\r\n                            , author: proposal[i].author\r\n                            , author_list: proposal[i].author_list\r\n                            , source_of_funding: proposal[i].source_of_funding\r\n                            , date_of_completion: proposal[i].date_of_completion\r\n                            , status: proposal[i].status\r\n                            , remarks: proposal[i].remarks\r\n                        })\r\n                    } \r\n                }\r\n    \r\n                return disapproved;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getAuthorOptions = () => {\r\n        const authors = []\r\n        \r\n        for (let i = 0; i < faculty.length; i++) {\r\n            authors.push({ \r\n                value: faculty[i]._id\r\n                , label: faculty[i].full_name \r\n            });\r\n        }\r\n\r\n        return authors;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer position=\"top-right\" autoClose={2000} hideProgressBar newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n\r\n            <Modal isOpen={modalPrompt} toggle={() => toggleModal(MODAL_TYPE.DEL)} className=\"modal-dialogue\" >\r\n                <ModalHeader className={modalType === MODAL_TYPE.DEL ? \"bg-danger text-light\" : \"bg-primary text-light\"} toggle={() => toggleModal(MODAL_TYPE.DEL)}>{modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update Status\" }</ModalHeader>\r\n                <ModalBody>\r\n                    <Label>{modalType === MODAL_TYPE.DEL ? \"Are you sure do you want to delete this data?\" : \"Are you sure you want to update the status?\" }</Label>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type=\"submit\" color={modalType === MODAL_TYPE.DEL ? \"danger\" : \"primary\" } onClick={() => onSubmitUpdateStatusOrDelete(modalType === MODAL_TYPE.DEL ? MODAL_TYPE.DEL : MODAL_TYPE.UPD)}>{modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update\" }</Button>\r\n                    <Button color=\"light\" onClick={() => toggleModal(MODAL_TYPE.DEL)}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            \r\n            <Modal isOpen={modal} toggle={() => toggleModal(MODAL_TYPE.CRT)} size=\"lg\" className=\"modal-dialogue\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={() => toggleModal(MODAL_TYPE.CRT)}>{!researchId ? 'Add Proposal' : 'Update Proposal' }</ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    value={researchId}\r\n                                    onChange={(e) => { setResearchId(e.target.value) }}\r\n                                />\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"status\"\r\n                                    id=\"status\"\r\n                                    value={status}\r\n                                    onChange={(e) => { setStatus(e.target.value) }}\r\n                                />\r\n                                <Label for=\"\">Title of Research <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"title_of_research\"\r\n                                    id=\"title_of_research\"\r\n                                    value={titleOfResearch}\r\n                                    onChange={(e) => { setTitleOfResearch(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"\">Type of Research <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"type_of_research\"\r\n                                    id=\"type_of_research\"\r\n                                    value={typeOfResearch}\r\n                                    onChange={(e) => { setTypeOfResearch(e.target.value) }}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    <option value=\"descriptive\">Descriptive</option>\r\n                                    <option value=\"developmental\">Developmental</option>\r\n                                    <option value=\"experimental\">Experimental</option>\r\n                                    <option value=\"modelling\">Modelling</option>\r\n                                    <option value=\"others\">Others</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"\">Author(s) <span className=\"text-danger\">*</span></Label>\r\n                                <Select\r\n                                    closeMenuOnSelect={false}\r\n                                    components={animatedComponents}\r\n                                    isMulti \r\n                                    options={getAuthorOptions()}\r\n                                    name=\"author\"\r\n                                    value={author}\r\n                                    onChange={setAuthor}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">Source of Funding <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"source_of_funding\"\r\n                                            id=\"source_of_funding\"\r\n                                            value={sourceOfFunding}\r\n                                            onChange={(e) => { setSourceOfFunding(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"stf\">STF</option>\r\n                                            <option value=\"gaa\">GAA</option>\r\n                                            <option value=\"external\">External</option>\r\n                                            <option value=\"personal\">Personal</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">{ sourceOfFunding === 'external' ? \"Name of Agency\" : \"\" }</Label>\r\n                                        <Input\r\n                                            type={ sourceOfFunding === 'external' ? \"text\" : \"hidden\" }\r\n                                            name=\"name_of_agency\"\r\n                                            id=\"name_of_agency\"\r\n                                            value={nameOfAgency}\r\n                                            onChange={(e) => { setNameOfAgency(e.target.value) }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">Date of Completion <span className=\"text-danger\">*</span></Label>\r\n                                        <div>\r\n                                            <DateTimePickerComponent\r\n                                                format=\"yyyy-MM-dd\" \r\n                                                id=\"datetimepicker\" \r\n                                                value={dateOfCompletion} \r\n                                                onChange={(e) => { setDateOfCompletion(e.target.value) }} \r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label for=\"\">Status</Label><br/>\r\n                                        <p className=\"badge badge-primary\">{remarks.toUpperCase()}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={() => toggleModal(MODAL_TYPE.CRT)}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Proposal</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/proposal\">Proposal</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Nav tabs pills className=\"mb-3 font-14\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '1' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Pending</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '2' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('2') }} \r\n                                >Submitted</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '3' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('3') }} \r\n                                >Evaluated</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '4' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('4') }} \r\n                                >For Approval</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '5' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('5') }} \r\n                                >Approved</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '6' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('6') }} \r\n                                >Disapproved</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-14 font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getPendingProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-14 font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getSubmittedProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"3\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-14 font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getEvaluatedProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"4\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getForApprovalProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"5\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getApprovedProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"6\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getDisApprovedProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                        </TabContent>  \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Publication.js",["547","548","549","550"],"import React\r\n, { \r\n    useState\r\n    , useEffect \r\n} from 'react';\r\n\r\nimport { \r\n    useDispatch\r\n    , useSelector \r\n} from 'react-redux';\r\n\r\nimport { getProposalCompleted } from '../../../redux/actions/completed_action';\r\n\r\nimport { \r\n    getPublication\r\n    , createPublication\r\n    , updatePublication\r\n    , deletePublication\r\n} from '../../../redux/actions/publication_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Nav\r\n    , NavItem\r\n    , NavLink\r\n    , TabContent\r\n    , TabPane\r\n    , Row\r\n    , Col\r\n} from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport moment from 'moment';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: 'CREATE',\r\n    UPD: 'UPDATE',\r\n    DEL: 'DELETE'\r\n}\r\n\r\nconst USER_TYPE = {\r\n    USR: 'user', \r\n    ADMIN: 'admin',\r\n    RD: 'rd', //? research director \r\n    RH: 'rh', //? research head\r\n    CD: 'cd' //? campus director\r\n}\r\n\r\nconst Toastify = () => {\r\n    return <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />  \r\n}\r\n\r\nconst Publication = ({ currentUser }) => {\r\n    const completed = useSelector((state) => state.completed.completed);\r\n    const publication = useSelector((state) => state.publication.publications);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [publicationId, setPublicationId] = useState(null);\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [titleOfPublication, setTitleOfPublication] = useState(\"\");\r\n    const [dateOfPublication, setDateOfPublication] = useState(\"\");\r\n    const [titleOfJournal, setTitleOfJournal] = useState(\"\");\r\n    const [typeOfJournal, setTypeOfJournal] = useState(\"\");\r\n    const [issnIsbn, setIssnIsbn] = useState(\"\");\r\n    const [volumeNo, setVolumeNo] = useState(\"\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({ \r\n        user_id: currentUser.id, \r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`, \r\n        user_type: currentUser.user_type \r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            // width: 125  ,\r\n            cell: publication => {\r\n                if(publication.is_completed === 'N') {\r\n                    return(\r\n                        <React.Fragment>\r\n                            {/* <Button \r\n                                size=\"sm\" \r\n                                className=\"btn-circle\"\r\n                                onClick={() => showEditForm(publication)}\r\n                            ><i className=\"fas fa-edit ml-1\"></i>\r\n                            </Button> &nbsp;\r\n                            <Button \r\n                                color=\"danger\" \r\n                                size=\"sm\" \r\n                                className=\"btn-circle\"\r\n                                onClick={() => onClickDelete(publication._id)}\r\n                            ><i className=\"fas fa-trash\"></i>\r\n                            </Button> */}\r\n                            <Link \r\n                                to=\"#\" \r\n                                className=\"text-secondary\" \r\n                                onClick={() => showEditForm(publication)}\r\n                            ><i className=\"fas fa-pencil-alt ml-1\"></i>\r\n                            </Link>\r\n                            &nbsp;&nbsp;\r\n                            <Link \r\n                                to=\"#\" \r\n                                className=\"text-danger\" \r\n                                onClick={() => onClickDelete(publication._id)}\r\n                            ><i className=\"fas fa-trash-alt ml-1\"></i>\r\n                            </Link>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"title_of_publication\",\r\n            text: \"Title of Publication\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_of_publication\",\r\n            text: \"Date of Publication\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: publication => {\r\n                return (\r\n                    <React.Fragment>\r\n                        { moment(publication.date_of_publication).format(\"LL\") }\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: publication => {\r\n                if(publication.is_completed === 'N') {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                className=\"btn btn-sm\"\r\n                                onClick={() => { onSubmitUpdateRemarks(publication._id) }}\r\n                            >Completed\r\n                            </Button>&nbsp;\r\n                        </React.Fragment>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"badge badge-success\">COMPLETED</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    const dtConfig = {\r\n        key_column: 'id',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => { setModal(!modal) }\r\n        },\r\n    ]\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        // dispatch(getProposalCompletedApproved());\r\n        dispatch(getProposalCompleted());\r\n        dispatch(getPublication());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setPublicationId(null);\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setTitleOfPublication(\"\");\r\n        setDateOfPublication(\"\");\r\n        setTitleOfJournal(\"\");\r\n        setTypeOfJournal(\"\");\r\n        setIssnIsbn(\"\")\r\n        setVolumeNo(\"\");\r\n    }\r\n\r\n    const toggleModal = () => { \r\n        setModal(!modal);\r\n        clearForm(); \r\n    }\r\n\r\n    const toggleTab = tabId => {\r\n        if(activeTab !== tabId) \r\n            setActiveTab(tabId)\r\n\r\n        clearForm();\r\n    }\r\n\r\n    const showEditForm = (data) => {\r\n        const {  \r\n            _id\r\n            , research_id\r\n            , title_of_research\r\n            , title_of_publication\r\n            , date_of_publication\r\n            , title_of_journal\r\n            , type_of_journal\r\n            , issn_isbn\r\n            , volume_no\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        console.log(\"Research id: \", research_id);\r\n\r\n        setPublicationId(_id);\r\n        setResearchId(research_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setTitleOfPublication(title_of_publication);\r\n        setDateOfPublication(date_of_publication);\r\n        setTitleOfJournal(title_of_journal);\r\n        setTypeOfJournal(type_of_journal);\r\n        setIssnIsbn(issn_isbn);\r\n        setVolumeNo(volume_no);\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            publication_id: publicationId\r\n            , research_id: researchId\r\n            , title_of_research: titleOfResearch\r\n            , title_of_publication: titleOfPublication\r\n            , date_of_publication: dateOfPublication\r\n            , title_of_journal: titleOfJournal\r\n            , type_of_journal: typeOfJournal\r\n            , issn_isbn: issnIsbn\r\n            , volume_no: volumeNo\r\n        }\r\n\r\n        if(!publicationId) {\r\n            dispatch(createPublication(data));\r\n        } else {\r\n            dispatch(updatePublication(data));\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    const onClickDelete = (publication_id) => {\r\n        const isDelete = window.confirm(\"Are you sure you want to delete this data?\");\r\n\r\n        if(isDelete)\r\n            dispatch(deletePublication(publication_id));\r\n    }\r\n\r\n    const onSubmitUpdateRemarks = (publication_id) => {\r\n        const data = {\r\n            publication_id\r\n            , is_completed: 'Y'\r\n            , updated_by: updatedBy\r\n            , updated_at: new Date()\r\n        }\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if(isSubmit) {\r\n            dispatch(updatePublication(data));\r\n        }\r\n    }\r\n\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof completed !== undefined) {\r\n            const list_of_research = []; \r\n\r\n            for (let i = 0; i < completed.length; i++) {\r\n                let { user_id } = completed[i].created_by;\r\n                // display only the researches of the current user\r\n                if((completed[i].is_completed === 'Y' || completed[i].is_completed === 'N') && user_id === currentUserId) {\r\n                    list_of_research.push(\r\n                        <option key={completed[i]._id} value={completed[i]._id}>\r\n                            { completed[i].title_of_research }\r\n                        </option>\r\n                    )\r\n                }\r\n            }\r\n    \r\n            return list_of_research;\r\n        }\r\n    }\r\n\r\n    const getPendingPublications = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof publication !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < publication.length; i++) {\r\n                    if(publication[i].is_completed === 'N') {\r\n                        pending.push({\r\n                            _id: publication[i]._id\r\n                            , research_id: publication[i].research_id\r\n                            , title_of_research: publication[i].title_of_research\r\n                            , title_of_publication: publication[i].title_of_publication\r\n                            , date_of_publication: publication[i].date_of_publication\r\n                            , title_of_journal: publication[i].title_of_publication\r\n                            , type_of_journal: publication[i].type_of_journal\r\n                            , issn_isbn: publication[i].issn_isbn\r\n                            , volume_no: publication[i].volume_no\r\n                            , is_completed: publication[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n                \r\n                for (let i = 0; i < publication.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = publication[i].created_by;\r\n\r\n                    if(publication[i].is_completed === 'N' && user_id === currentUserId) {\r\n                        pending.push({ \r\n                            _id: publication[i]._id\r\n                            , research_id: publication[i].research_id\r\n                            , title_of_research: publication[i].title_of_research\r\n                            , title_of_publication: publication[i].title_of_publication\r\n                            , date_of_publication: publication[i].date_of_publication\r\n                            , title_of_journal: publication[i].title_of_publication\r\n                            , type_of_journal: publication[i].type_of_journal\r\n                            , issn_isbn: publication[i].issn_isbn\r\n                            , volume_no: publication[i].volume_no\r\n                            , is_completed: publication[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            } \r\n        }\r\n    }\r\n\r\n    const getCompletedPublications = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof completed !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < publication.length; i++) {\r\n                    if(publication[i].is_completed === 'Y') {\r\n                        completed.push({\r\n                            _id: publication[i]._id\r\n                            , research_id: publication[i].research_id\r\n                            , title_of_research: publication[i].title_of_research\r\n                            , title_of_publication: publication[i].title_of_publication\r\n                            , date_of_publication: publication[i].date_of_publication\r\n                            , title_of_journal: publication[i].title_of_publication\r\n                            , type_of_journal: publication[i].type_of_journal\r\n                            , issn_isbn: publication[i].issn_isbn\r\n                            , volume_no: publication[i].volume_no\r\n                            , is_completed: publication[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n                \r\n                for (let i = 0; i < publication.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = publication[i].created_by;\r\n\r\n                    if(publication[i].is_completed === 'Y' && user_id === currentUserId) {\r\n                        completed.push({ \r\n                            _id: publication[i]._id\r\n                            , research_id: publication[i].research_id\r\n                            , title_of_research: publication[i].title_of_research\r\n                            , title_of_publication: publication[i].title_of_publication\r\n                            , date_of_publication: publication[i].date_of_publication\r\n                            , title_of_journal: publication[i].title_of_publication\r\n                            , type_of_journal: publication[i].type_of_journal\r\n                            , issn_isbn: publication[i].issn_isbn\r\n                            , volume_no: publication[i].volume_no\r\n                            , is_completed: publication[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Toastify />\r\n            <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" className=\"modal-dialog font-14\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={toggleModal}>{!publicationId ? 'Add Publication' : 'Update Publication' }</ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label for=\"\">Title of Research <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"publication_id\"\r\n                                    id=\"publication_id\"\r\n                                    value={publicationId}\r\n                                    onChange={(e) => { setPublicationId(e.target.value) }}\r\n                                    required\r\n                                ></Input>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    value={researchId}\r\n                                    onChange={(e) => \r\n                                        { \r\n                                            setResearchId(e.target.value);\r\n                                            setTitleOfResearch(e.target.options[e.target.selectedIndex].text); \r\n                                        }}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    { getResearchesOptions() }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Title of Publication <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"title_of_publication\"\r\n                                    id=\"title_of_publication\"\r\n                                    value={ titleOfPublication }\r\n                                    onChange={(e) => { setTitleOfPublication(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Date of Publication <span className=\"text-danger\">*</span></Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateOfPublication}\r\n                                            onChange={(e) => { setDateOfPublication(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Title of Journal <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"title_of_journal\"\r\n                                    id=\"title_of_journal\"\r\n                                    value={titleOfJournal}\r\n                                    onChange={(e) => { setTitleOfJournal(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Type of Journal <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"type_of_journal\"\r\n                                            id=\"type_of_journal\"\r\n                                            value={typeOfJournal}\r\n                                            onChange={(e) => { setTypeOfJournal(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"local\">Local</option>\r\n                                            <option value=\"national\">National</option>\r\n                                            <option value=\"international\">International</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Label>ISSN / ISBN <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"issn_isbn_no\"\r\n                                            id=\"issn_isbn_no\"\r\n                                            value={issnIsbn}\r\n                                            onChange={(e) => { setIssnIsbn(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Volume / Issue No. <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"volume_issue_no\"\r\n                                            id=\"volume_issue_no\"\r\n                                            value={volumeNo}\r\n                                            onChange={(e) => { setVolumeNo(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Publication</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/publication\">Publication</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody> \r\n                        <Nav tabs pills className=\"mb-3 font-14\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '1' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Pending</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '2' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('2') }}\r\n                                >Completed</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark\"\r\n                                    config={dtConfig}\r\n                                    records={getPendingPublications()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                            <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark\"\r\n                                    config={dtConfig}\r\n                                    records={getCompletedPublications()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                        </TabContent> \r\n                        \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Publication;\r\n\r\n\r\n\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Utilization.js",["551","552","553","554","555"],"import React\r\n, { \r\n    useState\r\n    , useEffect \r\n} from 'react';\r\n\r\nimport { \r\n    useDispatch\r\n    , useSelector \r\n} from 'react-redux';\r\n\r\nimport { \r\n    getUtilization\r\n    , createUtilizaition\r\n    , updateUtilization\r\n    , deleteUtilization\r\n} from '../../../redux/actions/utilization_action';\r\n\r\nimport { \r\n    getProposalCompleted \r\n} from '../../../redux/actions/completed_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Nav\r\n    , NavItem\r\n    , NavLink\r\n    , TabContent\r\n    , TabPane\r\n    , Row\r\n    , Col\r\n} from 'reactstrap';\r\n\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport moment from 'moment';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: 'CREATE',\r\n    UPD: 'UPDATE',\r\n    DEL: 'DELETE'\r\n}\r\n\r\nconst USER_TYPE = {\r\n    USR: 'user', \r\n    ADMIN: 'admin',\r\n    RD: 'rd', //? research director \r\n    RH: 'rh', //? research head\r\n    CD: 'cd' //? campus director\r\n}\r\n\r\nconst Utilization = ({ currentUser }) => {\r\n    const completed = useSelector((state) => state.completed.completed);\r\n    const utilization = useSelector((state) => state.utilization.utilizations);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [utilizationId, setUtilizationId] = useState(null);\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [beneficiary, setBeneficiary] = useState(\"\");\r\n    const [dateOfUtilization, setDateOfUtilization] = useState(\"\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({ \r\n        user_id: currentUser.id, \r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`, \r\n        user_type: currentUser.user_type \r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            width: 150,\r\n            cell: utilization => {\r\n                return(\r\n                    <React.Fragment>\r\n                        <Button \r\n                            size=\"sm\" \r\n                            className=\"btn-circle\"\r\n                            onClick={() => showEditForm(utilization)}\r\n                        ><i className=\"fas fa-edit ml-1\"></i>\r\n                        </Button> &nbsp;\r\n                        <Button \r\n                            color=\"danger\" \r\n                            size=\"sm\" \r\n                            className=\"btn-circle\"\r\n                            onClick={() => onClickDelete(utilization._id)}\r\n                        ><i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"beneficiary\",\r\n            text: \"Beneficiary\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_of_utilization\",\r\n            text: \"Date of Utilization\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: utilization => {\r\n                return (\r\n                    <React.Fragment>\r\n                        { moment(utilization.date_of_utilization).format(\"LL\") }\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: utilization => {\r\n                if(utilization.is_completed === 'N') {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                className=\"btn btn-sm\"\r\n                                onClick={() => { onSubmitUpdateRemarks(utilization._id) }}\r\n                            >Completed\r\n                            </Button>&nbsp;\r\n                        </React.Fragment>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"badge badge-success\">COMPLETED</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    const dtConfig = {\r\n        key_column: 'id',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => { setModal(!modal) }\r\n        },\r\n    ]\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getUtilization());\r\n        dispatch(getProposalCompleted());\r\n        // dispatch(getProposalCompletedApproved());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setUtilizationId(null);\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setBeneficiary(\"\");\r\n        setDateOfUtilization(\"\");\r\n    }\r\n\r\n    const toggleModal = () => { \r\n        setModal(!modal);\r\n        clearForm(); \r\n    }\r\n\r\n    const toggleTab = tabId => {\r\n        if(activeTab !== tabId) \r\n            setActiveTab(tabId)\r\n\r\n        clearForm();\r\n    }\r\n\r\n    const showEditForm = (data) => {\r\n        console.log(\"DATA: \", data);\r\n        const { \r\n            _id\r\n            , research_id\r\n            , title_of_research\r\n            , beneficiary\r\n            , date_of_utilization\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setUtilizationId(_id);\r\n        setResearchId(research_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setBeneficiary(beneficiary);\r\n        setDateOfUtilization(date_of_utilization);\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            utilization_id: utilizationId\r\n            , research_id: researchId\r\n            , title_of_research: titleOfResearch\r\n            , beneficiary\r\n            , date_of_utilization: dateOfUtilization\r\n        }\r\n\r\n        if(!utilizationId) {\r\n            dispatch(createUtilizaition(data));\r\n        } else {\r\n            dispatch(updateUtilization(data));\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    const onClickDelete = (utilization_id) => {\r\n        const isDelete = window.confirm(\"Are you sure you want to delete this data?\");\r\n\r\n        if(isDelete)\r\n            dispatch(deleteUtilization(utilization_id));\r\n    }\r\n\r\n    const onSubmitUpdateRemarks = (utilization_id) => {\r\n        const data = {\r\n            utilization_id\r\n            , is_completed: 'Y'\r\n            , updated_at: new Date()\r\n        }\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if(isSubmit) {\r\n            dispatch(updateUtilization(data));\r\n        }\r\n    }\r\n\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(completed !== undefined) {\r\n            const list_of_research = []; \r\n\r\n            for (let i = 0; i < completed.length; i++) {\r\n                let { user_id } = completed[i].created_by;\r\n\r\n                // console.log(\"Completed: \", completed[i]);\r\n\r\n                if(completed[i].is_completed === 'Y' && user_id === currentUserId ) {\r\n                    list_of_research.push(\r\n                        <option key={completed[i]._id} value={completed[i]._id}>\r\n                            { completed[i].title_of_research }\r\n                        </option>\r\n                    )\r\n                }                \r\n            }\r\n    \r\n            return list_of_research;\r\n        }\r\n    }\r\n\r\n    const getPendingUtilization = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof presentation !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < utilization.length; i++) {\r\n                    if(utilization[i].is_completed === 'N') {\r\n                        pending.push({\r\n                            _id: utilization[i]._id\r\n                            , research_id: utilization[i].research_id\r\n                            , title_of_research: utilization[i].title_of_research\r\n                            , beneficiary: utilization[i].beneficiary\r\n                            , date_of_utilization: utilization[i].date_of_utilization\r\n                            , is_completed: utilization[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return pending;\r\n            }\r\n        }\r\n        // Current logged in user is USER.\r\n        else {\r\n            const pending = [];\r\n            \r\n            for (let i = 0; i < utilization.length; i++) {\r\n                // Destructure some of the details\r\n                let { user_id } = utilization[i].created_by;\r\n\r\n                if(utilization[i].is_completed === 'N' && user_id === currentUserId) {\r\n                    pending.push({ \r\n                        _id: utilization[i]._id\r\n                        , research_id: utilization[i].research_id\r\n                        , title_of_research: utilization[i].title_of_research\r\n                        , beneficiary: utilization[i].beneficiary\r\n                        , date_of_utilization: utilization[i].date_of_utilization\r\n                        , is_completed: utilization[i].is_completed\r\n                    })\r\n                }\r\n            }\r\n\r\n            return pending;\r\n        }\r\n    }\r\n\r\n    const getCompletedUtilization = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof presentation !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < utilization.length; i++) {\r\n                    if(utilization[i].is_completed === 'Y') {\r\n                        completed.push({\r\n                            _id: utilization[i]._id\r\n                            , research_id: utilization[i].research_id\r\n                            , title_of_research: utilization[i].title_of_research\r\n                            , beneficiary: utilization[i].beneficiary\r\n                            , date_of_utilization: utilization[i].date_of_utilization\r\n                            , is_completed: utilization[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return completed;\r\n            }\r\n        }\r\n        // Current logged in user is USER.\r\n        else {\r\n            const completed = [];\r\n            \r\n            for (let i = 0; i < utilization.length; i++) {\r\n                // Destructure some of the details\r\n                let { user_id } = utilization[i].created_by;\r\n\r\n                if(utilization[i].is_completed === 'Y' && user_id === currentUserId) {\r\n                    completed.push({ \r\n                        __id: utilization[i]._id\r\n                        , research_id: utilization[i].research_id\r\n                        , title_of_research: utilization[i].title_of_research\r\n                        , beneficiary: utilization[i].beneficiary\r\n                        , date_of_utilization: utilization[i].date_of_utilization\r\n                        , is_completed: utilization[i].is_completed\r\n                    })\r\n                }\r\n            }\r\n\r\n            return completed;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={toggleModal}>{!utilizationId ? 'Add Utilization' : 'Update Utilization' }</ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label for=\"\">Title of Research <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"utilization_id\"\r\n                                    id=\"utilization_id\"\r\n                                    value={utilizationId}\r\n                                    onChange={(e) => { setUtilizationId(e.target.value) }}\r\n                                >\r\n                                </Input>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    value={researchId}\r\n                                    onChange={(e) => { \r\n                                        setResearchId(e.target.value);\r\n                                        setTitleOfResearch(e.target.options[e.target.selectedIndex].text); \r\n                                    }}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    { getResearchesOptions() }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Beneficiary <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"beneficiary\"\r\n                                    id=\"beneficiary\"\r\n                                    value={ beneficiary }\r\n                                    onChange={(e) => { setBeneficiary(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Date of Utilization <span className=\"text-danger\">*</span></Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateOfUtilization}\r\n                                            onChange={(e) => { setDateOfUtilization(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Utilization</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/utilization\">Utilzation</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Nav tabs pills className=\"mb-3 font-14\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '1' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Pending</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '2' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('2') }}\r\n                                >Completed</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark\"\r\n                                    config={dtConfig}\r\n                                    records={getPendingUtilization()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                            <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark\"\r\n                                    config={dtConfig}\r\n                                    records={getCompletedUtilization()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                        </TabContent> \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Utilization;\r\n\r\n\r\n\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Innovation.js",["556","557","558","559","560"],"import React\r\n, { \r\n    useState\r\n    , useEffect \r\n} from 'react';\r\n\r\nimport { \r\n    useDispatch\r\n    , useSelector \r\n} from 'react-redux';\r\n\r\nimport { \r\n    getAccount \r\n} from '../../../redux/actions/account_action';\r\n\r\nimport { \r\n    getInnovation\r\n    , createInnovation\r\n    , updateInnovation\r\n    , deleteInnovation \r\n} from '../../../redux/actions/innovation_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Nav\r\n    , NavItem\r\n    , NavLink\r\n    , TabContent\r\n    , TabPane\r\n    , Row\r\n    , Col\r\n    , Toast\r\n    , ToastBody\r\n    , ToastHeader \r\n} from 'reactstrap';\r\n\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: 'CREATE',\r\n    UPD: 'UPDATE',\r\n    DEL: 'DELETE'\r\n}\r\n\r\nconst USER_TYPE = {\r\n    USR: 'user', \r\n    ADMIN: 'admin',\r\n    RD: 'rd', //? research director \r\n    RH: 'rh', //? research head\r\n    CD: 'cd' //? campus director\r\n}\r\n\r\nconst Innovation = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate proposal data\r\n    const innovation = useSelector((state) => state.innovation.innovations); // This is to populate proposal data\r\n    \r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [innovationId, setInnovationId] = useState(null);\r\n    const [facultyDetails, setFacultyDetails] = useState(\"\");\r\n    const [titleOfInnovation, setTitleOfInnovation] = useState(\"\");\r\n    const [typeOfInnovation, setTypeOfInnovation] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [dateSubmitted, setDateSubmitted] = useState(\"\");\r\n    const [grantCode, setGrantCode] = useState(\"\");\r\n    const [dateGranted, setDateGranted] = useState(\"\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({ \r\n        user_id: currentUser.id, \r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`, \r\n        user_type: currentUser.user_type \r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            // width: 150,\r\n            cell: innovation => {\r\n                if(innovation.is_completed === 'N') {\r\n                    return(\r\n                        <React.Fragment>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                className=\"btn-circle\"\r\n                                onClick={() => showEditForm(innovation)}\r\n                            ><i className=\"fas fa-edit ml-1\"></i>\r\n                            </Button> &nbsp;\r\n                            <Button \r\n                                color=\"danger\" \r\n                                size=\"sm\" \r\n                                className=\"btn-circle\"\r\n                                onClick={() => onClickDelete(innovation._id)}\r\n                            ><i className=\"fas fa-trash\"></i>\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            key: \"title_of_innovation\",\r\n            text: \"Title of Innovation\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: innovation => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Link\r\n                            to=\"#\" \r\n                            className=\"text-secondary\"\r\n                            onClick={() => { showToast() }}\r\n                        >{ innovation.title_of_innovation }</Link>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"faculty_name\",\r\n            text: \"Author\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"type_of_innovation\",\r\n            text: \"Type of Innovation\",\r\n            className: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            isSearchable: true,\r\n            cell: innovation => {\r\n                const { type_of_innovation } = innovation;\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        { type_of_innovation[0].toUpperCase() + type_of_innovation.substring(1) }\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key:\"status\",\r\n            text: \"Status\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            isSearchable: true,\r\n            cell: innovation => {\r\n                const { status } = innovation;\r\n\r\n                return(\r\n                    <React.Fragment>\r\n                        <div className=\"text-secondary\">{ status.toUpperCase() }</div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: innovation => {\r\n                if(innovation.is_completed === 'N') {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                className=\"btn btn-sm\"\r\n                                onClick={() => { onSubmitUpdateRemarks(innovation._id) }}\r\n                            >Completed\r\n                            </Button>&nbsp;\r\n                        </React.Fragment>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"badge badge-success\">COMPLETED</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    const dtConfig = {\r\n        key_column: 'id',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => { setModal(!modal) }\r\n        },\r\n    ]\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccount());\r\n        dispatch(getInnovation());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setInnovationId(null);\r\n        setFacultyDetails(\"\");\r\n        setTitleOfInnovation(\"\");\r\n        setTypeOfInnovation(\"\");\r\n        setStatus(\"\");\r\n        setDateSubmitted(\"\");\r\n        setGrantCode(\"\");\r\n        setDateGranted(\"\");\r\n    }\r\n\r\n    const toggleModal = () => { \r\n        setModal(!modal);\r\n        clearForm(); \r\n    }\r\n\r\n    const toggleTab = tabId => {\r\n        if(activeTab !== tabId) \r\n            setActiveTab(tabId)\r\n\r\n        clearForm();\r\n    }\r\n\r\n    const showToast = () => {\r\n        return(\r\n            <Toast>\r\n                <ToastHeader>\r\n                    Header\r\n                </ToastHeader>\r\n                <ToastBody>\r\n                    Hello\r\n                </ToastBody>\r\n            </Toast>\r\n        )\r\n    }\r\n\r\n    const showEditForm = (data) => {\r\n        const {  \r\n            _id\r\n            , faculty_id\r\n            , faculty_name\r\n            , title_of_innovation\r\n            , type_of_innovation\r\n            , status\r\n            , date_submitted\r\n            , grant_code\r\n            , date_granted\r\n        } = data;\r\n\r\n        toggleModal();\r\n\r\n        setInnovationId(_id);\r\n        setFacultyDetails({ \"value\" : faculty_id , \"label\" : faculty_name });\r\n        setTitleOfInnovation(title_of_innovation);\r\n        setTypeOfInnovation(type_of_innovation);\r\n        setStatus(status);\r\n        setDateSubmitted(date_submitted);\r\n        setGrantCode(grant_code);\r\n        setDateGranted(date_granted);\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            innovation_id: innovationId\r\n            , faculty_id: facultyDetails.value\r\n            , faculty_name: facultyDetails.label\r\n            , title_of_innovation: titleOfInnovation\r\n            , type_of_innovation: typeOfInnovation\r\n            , status\r\n            , date_submitted: dateSubmitted\r\n            , grant_code: grantCode\r\n            , date_granted: dateGranted\r\n        }\r\n\r\n        if(!innovationId) {\r\n            dispatch(createInnovation(data));\r\n        } else {\r\n            dispatch(updateInnovation(data));\r\n        }\r\n\r\n        toggleModal();\r\n    }\r\n\r\n    const onClickDelete = (innovation_id) => {\r\n        const isDelete = window.confirm(\"Are you sure you want to delete this data?\");\r\n\r\n        if(isDelete)\r\n            dispatch(deleteInnovation(innovation_id));\r\n    }\r\n    \r\n    const onSubmitUpdateRemarks = (innovation_id) => {\r\n        const data = {\r\n            innovation_id\r\n            , is_completed: 'Y'\r\n            , updated_at: new Date()\r\n        }\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if(isSubmit) {\r\n            dispatch(updateInnovation(data));\r\n        }\r\n    }\r\n\r\n    // authors option assigning\r\n    const getFacultyOption = () => {\r\n        const options = [];\r\n\r\n        for(let i = 0; i < faculty.length; i++) {\r\n            options.push({ \r\n                value: faculty[i]._id, label: faculty[i].full_name \r\n            })\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    const getPendingInnovations = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof presentation !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    if(innovation[i].is_completed === 'N') {\r\n                        pending.push({\r\n                            _id: innovation[i]._id\r\n                            , faculty_name: innovation[i].faculty_name\r\n                            , title_of_innovation: innovation[i].title_of_innovation\r\n                            , type_of_innovation: innovation[i].type_of_innovation\r\n                            , status: innovation[i].status\r\n                            , date_submitted: innovation[i].date_submitted\r\n                            , grant_code: innovation[i].grant_code\r\n                            , date_granted: innovation[i].date_granted\r\n                            , is_completed: innovation[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n                \r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = innovation[i].created_by;\r\n\r\n                    if(innovation[i].is_completed === 'N' && user_id === currentUserId) {\r\n                        pending.push({ \r\n                            _id: innovation[i]._id\r\n                            , faculty_name: innovation[i].faculty_name\r\n                            , title_of_innovation: innovation[i].title_of_innovation\r\n                            , type_of_innovation: innovation[i].type_of_innovation\r\n                            , status: innovation[i].status\r\n                            , date_submitted: innovation[i].date_submitted\r\n                            , grant_code: innovation[i].grant_code\r\n                            , date_granted: innovation[i].date_granted\r\n                            , is_completed: innovation[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const getCompletedInnovations = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof presentation !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    if(innovation[i].is_completed === 'Y') {\r\n                        completed.push({\r\n                            _id: innovation[i]._id\r\n                            , faculty_name: innovation[i].faculty_name\r\n                            , title_of_innovation: innovation[i].title_of_innovation\r\n                            , type_of_innovation: innovation[i].type_of_innovation\r\n                            , status: innovation[i].status\r\n                            , date_submitted: innovation[i].date_submitted\r\n                            , grant_code: innovation[i].grant_code\r\n                            , date_granted: innovation[i].date_granted\r\n                            , is_completed: innovation[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n                \r\n                for (let i = 0; i < innovation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = innovation[i].created_by;\r\n\r\n                    if(innovation[i].is_completed === 'Y' && user_id === currentUserId) {\r\n                        completed.push({ \r\n                            _id: innovation[i]._id\r\n                            , faculty_name: innovation[i].faculty_name\r\n                            , title_of_innovation: innovation[i].title_of_innovation\r\n                            , type_of_innovation: innovation[i].type_of_innovation\r\n                            , status: innovation[i].status\r\n                            , date_submitted: innovation[i].date_submitted\r\n                            , grant_code: innovation[i].grant_code\r\n                            , date_granted: innovation[i].date_granted\r\n                            , is_completed: innovation[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" className=\"modal-dialog\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={toggleModal}>{!innovationId ? 'Add Innovation' : 'Update Innovation' }</ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Label>Author <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"hidden\"\r\n                                    name=\"innovation_id\"\r\n                                    id=\"innovation_id\"\r\n                                    value={innovationId}\r\n                                    onChange={(e) => { setInnovationId(e.target.value) }}\r\n                                    required\r\n                                />\r\n                                <Select\r\n                                    id=\"react-select\"\r\n                                    closeMenuOnSelect={false}\r\n                                    components={animatedComponents}\r\n                                    isMulti={false}\r\n                                    options={getFacultyOption()}\r\n                                    name=\"faculty\"\r\n                                    value={facultyDetails}\r\n                                    onChange={setFacultyDetails}\r\n                                    isSearchable\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Title of Innovation <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"title_of_innovation\"\r\n                                    id=\"title_of_innovation\"\r\n                                    value={titleOfInnovation}\r\n                                    onChange={(e) => { setTitleOfInnovation(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Type of Innovation <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"type_of_innovation\"\r\n                                            id=\"type_of_innovation\"\r\n                                            value={typeOfInnovation}\r\n                                            onChange={(e) => { setTypeOfInnovation(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"patent\">Patent</option>\r\n                                            <option value=\"utility model\">Utility Model</option>\r\n                                            <option value=\"trademark\">Trademark</option>\r\n                                            <option value=\"industrial design\">Industrial Design</option>\r\n                                            <option value=\"copyright\">Copyright</option>\r\n                                            <option value=\"geographic indication\">Geographic Indication</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Status <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"is_submitted_or_granted\"\r\n                                            id=\"is_submitted_or_granted\"\r\n                                            value={status}\r\n                                            onChange={(e) => { setStatus(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"submitted\">Submitted</option>\r\n                                            <option value=\"granted\">Granted</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup className={status === 'submitted' ? \"\" : \"hidden\"}>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Date Submitted <span className=\"text-danger\">*</span></Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateSubmitted}\r\n                                            onChange={(e) => { setDateSubmitted(e.target.value) }}\r\n                                            required={status === 'submitted' ? true : false}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup className={status === 'granted' ? \"\" : \"hidden\"}>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Grant Code <span className=\"text-danger\">*</span></Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"grant_code\"\r\n                                            id=\"grant_code\"\r\n                                            value={grantCode}\r\n                                            onChange={(e) => { setGrantCode(e.target.value) }}\r\n                                            required={status === 'granted' ? true : false}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup className={status === 'granted' ? \"\" : \"hidden\"}>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Date Granted <span className=\"text-danger\">*</span></Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={dateGranted}\r\n                                            onChange={(e) => { setDateGranted(e.target.value) }}\r\n                                            required={status === 'granted' ? true : false}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Innovation</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/innovation\">Innovation</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody> \r\n                        <Nav tabs pills className=\"mb-3 font-14\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '1' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Pending</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '2' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('2') }}\r\n                                >Completed</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark\"\r\n                                    config={dtConfig}\r\n                                    records={getPendingInnovations()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark\"\r\n                                    config={dtConfig}\r\n                                    records={getCompletedInnovations()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Innovation;\r\n\r\n\r\n\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Header.js",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport AccountContext from '../../context/AccountContext';\r\n\r\nconst Header = () => {\r\n\tconst { userData, setUserData } = useContext(AccountContext);\r\n\tconst history = useHistory();\r\n\r\n\tconst [firstName, setFirstName] = useState(userData.user ? userData.user.first_name : \"\");\r\n\tconst [lastName, setLastName] = useState(userData.user ? userData.user.last_name : \"\");\r\n\tconst [position, setPosition] = useState(userData.user ? userData.user.position : \"\");\r\n\tconst [college, setCollege] = useState(userData.user ? userData.user.college : \"\");\r\n\tconst [userType, setUserType] = useState(userData.user ? userData.user.user_type : \"\");\r\n\t\r\n\tconst onLogOut = () => {\r\n\t\tsetUserData({\r\n\t\t\ttoken: undefined,\r\n\t\t\tuser: undefined\r\n\t\t});\r\n\t\t\r\n\t\tlocalStorage.setItem(\"auth-token\", \"\");\r\n\t\thistory.push(\"/login\");\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(userData.user) {\r\n\t\t\tsetFirstName(userData.user.first_name);\r\n\t\t\tsetLastName(userData.user.last_name);\r\n\t\t\tsetPosition(userData.user.position);\r\n\t\t\tsetCollege(userData.user.college);\r\n\t\t\tsetUserType(userData.user.user_type);\r\n\t\t}\r\n\t}, [userData.user]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<header className={ userData.user ? \"topbar\" : \"hidden\" } data-navbarbg=\"skin6\">\r\n\t\t\t\t<nav className=\"navbar top-navbar navbar-expand-md\">\r\n\t\t\t\t\t<div className=\"navbar-header bg-dark\" data-logobg=\"skin6\">\r\n\t\t\t\t\t\t<a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"#\"><i className=\"ti-menu ti-close\" /></a>\r\n\t\t\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t\t<a href=\"index.html\">\r\n\t\t\t\t\t\t\t{/* <b className=\"logo-icon\">\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"light-logo\" />\r\n\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t<span className=\"logo-text\">\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-text.png\" alt=\"homepage\" className=\"dark-logo\" />\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/logo-light-text.png\" className=\"light-logo\" alt=\"homepage\" />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t<span className=\"logo-text text-white\">\r\n\t\t\t\t\t\t\t\t[ System ni Candia ] \t\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"#\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\" /></a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\r\n\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle pl-md-3 position-relative\" href=\"#\" id=\"bell\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<span><i data-feather=\"bell\" className=\"svg-icon\" /></span>\r\n\t\t\t\t\t\t\t\t<span className=\"badge badge-primary notify-no rounded-circle\">5</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-left mailbox animated bounceInDown\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-style-none\">\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<div className=\"message-center notifications position-relative\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"btn btn-danger rounded-circle btn-circle\"><i data-feather=\"airplay\" className=\"text-white\" /></div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Luanch Admin</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">Just see\r\n\t\t\t\t\t\t\t\t\t\t\t\tthe my new\r\n\t\t\t\t\t\t\t\t\t\t\t\tadmin!</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:30 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"btn btn-success text-white rounded-circle btn-circle\"><i data-feather=\"calendar\" className=\"text-white\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Event today</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted text-truncate\">Just\r\n\t\t\t\t\t\t\t\t\t\t\t\ta reminder that you have event</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:10 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"btn btn-info rounded-circle btn-circle\"><i data-feather=\"settings\" className=\"text-white\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Settings</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted text-truncate\">You\r\n\t\t\t\t\t\t\t\t\t\t\t\tcan customize this template\r\n\t\t\t\t\t\t\t\t\t\t\t\tas you want</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:08 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"message-item d-flex align-items-center border-bottom px-3 py-2\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"btn btn-primary rounded-circle btn-circle\"><i data-feather=\"box\" className=\"text-white\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"w-75 d-inline-block v-middle pl-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"message-title mb-0 mt-1\">Pavan kumar</h6> <span className=\"font-12 text-nowrap d-block text-muted\">Just\r\n\t\t\t\t\t\t\t\t\t\t\t\tsee the my admin!</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-12 text-nowrap d-block text-muted\">9:02 AM</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<a className=\"nav-link pt-3 text-center text-dark\" href=\"#\">\r\n\t\t\t\t\t\t\t\t\t\t<strong>Check all notifications</strong>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-right\" />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"settings\" className=\"svg-icon\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\">Action</a>\r\n\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{/* <li className=\"nav-item d-none d-md-block\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<div className=\"customize-input\">\r\n\t\t\t\t\t\t\t\t<select className=\"custom-select form-control bg-white custom-radius custom-shadow border-0\">\r\n\t\t\t\t\t\t\t\t\t<option>EN</option>\r\n\t\t\t\t\t\t\t\t\t<option value={1}>AB</option>\r\n\t\t\t\t\t\t\t\t\t<option value={2}>AK</option>\r\n\t\t\t\t\t\t\t\t\t<option value={3}>BE</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<ul className=\"navbar-nav float-right\">\r\n\t\t\t\t\t\t{/* <li className=\"nav-item d-none d-md-block\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<div className=\"customize-input\">\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control custom-shadow custom-radius border-0 bg-white\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\t\t\t\t\t\t\t\t\t<i className=\"form-control-icon\" data-feather=\"search\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<img src=\"../assets/images/users/profile-avatar.svg\" alt=\"user\" className=\"rounded-circle\" width={40} />\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2 d-none d-lg-inline-block\"><span>Hello,</span> <span className=\"text-dark\">{firstName} {lastName}</span> <i data-feather=\"chevron-down\" className=\"svg-icon\" /></span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\r\n\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"user\" className=\"svg-icon mr-2 ml-1\" /> My Profile</a>\r\n\t\t\t\t\t\t\t\t{/* <a className=\"dropdown-item\" href=\"#\"><i data-feather=\"mail\" className=\"svg-icon mr-2 ml-1\" /> Inbox</a> */}\r\n\t\t\t\t\t\t\t\t{/* <div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"#\"><i data-feather=\"settings\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\tAccount Setting\r\n\t\t\t\t\t\t\t\t\t</a> */}\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t\t{/* <a className=\"dropdown-item\" href=\"#\"><i data-feather=\"log-out\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t</a> */}\r\n\t\t\t\t\t\t\t\t\t<Link \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"dropdown-item\" \r\n\t\t\t\t\t\t\t\t\t\tto=\"#\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => { onLogOut() }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i data-feather=\"log-out\" className=\"svg-icon mr-2 ml-1\" />\r\n\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\" />\r\n\t\t\t\t\t\t\t\t{/* <div className=\"pl-4 p-3\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\" className=\"btn btn-sm btn-info\">View\r\n\t\t\t\t\t\t\t\t\t\tProfile\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Header;\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\SideMenu.js",["579","580"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport AccountContext from '../../context/AccountContext';\r\n\r\nconst SideMenu = () => {\r\n\tconst [userType, setUserType] = useState(\"\");\r\n\r\n\tconst { userData } = useContext(AccountContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(userData.user !== undefined) {\r\n\t\t\tconst { user_type } = userData.user;\r\n\t\t\tsetUserType(user_type);\r\n\t\t}\r\n\t}, [userData.user]);\r\n\t\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<aside className={userData.user ? \"left-sidebar\" : \"hidden\" } data-sidebarbg=\"skin6\">\r\n\t\t\t\t<div className=\"scroll-sidebar\" data-sidebarbg=\"skin6\">\r\n\t\t\t\t\t<nav className=\"sidebar-nav bg-dark\">\r\n\t\t\t\t\t\t<ul id=\"sidebarnav\">\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/dashboard\">\r\n\t\t\t\t\t\t\t\t\t<i data-feather=\"layout\" className=\"feather-icon\" /><span className=\"hide-menu\">Dashboard</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"list-divider\" />\r\n\t\t\t\t\t\t\t<li className=\"nav-small-cap\"><span className=\"hide-menu text-white\">Research</span></li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a href=\"/proposal\" className=\"sidebar-link text-white\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"edit-3\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Proposal</span></a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/completed\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"check-circle\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Completed</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/presentation\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"pie-chart\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Presentation</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/publication\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"book-open\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Publication</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/utilization\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"file-text\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Utilization</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/innovation\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"monitor\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Innovation</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"list-divider hidden\" />\r\n\t\t\t\t\t\t\t<li className=\"nav-small-cap\"><span className=\"hide-menu text-white hidden\">Settings</span></li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/campus\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"trello\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Campus</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/department\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"trello\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Departments</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"sidebar-item\"> \r\n\t\t\t\t\t\t\t\t<a className=\"sidebar-link text-white\" href=\"/account\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t<i data-feather=\"user\" className=\"feather-icon\" />\r\n\t\t\t\t\t\t\t\t\t<span className=\"hide-menu\">Accounts</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"list-divider\" />\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t</aside>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default SideMenu;\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Footer.js",["581","582"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AccountContext from '../../context/AccountContext';\r\n\r\nconst Footer = () => {\r\n    const { userData } = useContext(AccountContext);\r\n        \r\n    return <div></div>\r\n    // if(userData.user !== undefined) {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             <div className=\"page-wrapper\">\r\n    //                 <footer className=\"footer text-center text-muted\">\r\n    //                     <Link to=\"#\">Surigao del Sur State University</Link> Research Management System v.1.\r\n    //                 </footer>\r\n    //             </div>\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n}\r\n\r\nexport default Footer;\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\auth\\Registration.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\account_action.js",["583"],"import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// action creators\r\nexport const getAccount = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchAccount();\r\n\r\n        if(data.success) {\r\n            dispatch({ \r\n                type: 'FETCH_ACCOUNT', \r\n                payload: data.results \r\n            });\r\n        } else {\r\n            console.log(\"Error:\", data.message);\r\n        }\r\n    } catch (error) {\r\n        console.log('Error: ', error.message);\r\n    }\r\n}\r\n\r\nexport const createAccount = (account_data) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createAccount(account_data);\r\n\r\n        if(data.success) {\r\n            dispatch({ \r\n                type: 'CREATE_ACCOUNT', \r\n                payload: data.results \r\n            });\r\n\r\n            toast.success(data.message);\r\n        } else {\r\n            toast.error(data.message);\r\n        }\r\n    } catch (error) {\r\n        toast.error(\"Unable to create this data.\");\r\n        console.log('Error: ', error);\r\n    }\r\n}\r\n\r\nexport const updateAccount = (department) => async (dispatch) => {\r\n    // try {\r\n    //     const { data } = await api.updateDepartment(department);\r\n        \r\n    //     dispatch({ type: 'UPDATE_DEPT', payload: data });\r\n    //     toast.success(\"Updated successfully\");\r\n    // } catch (error) {\r\n    //     toast.error(\"Unable to update this data.\");\r\n    //     console.log('Error: ', error);\r\n    // }\r\n}\r\n\r\n\r\nexport const deleteAccount = (department_id) => async (dispatch) => {\r\n    // try {\r\n    //     await api.deleteDepartment(department_id);\r\n\r\n    //     dispatch({ type: 'DELETE_DEPT', payload: department_id });\r\n    //     toast.success(\"Deleted successfully\");\r\n    // } catch (error) {\r\n    //     toast.error(\"Unable to delete this data.\");\r\n    //     console.log('Error: ', error);\r\n    // }\r\n}","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\campus_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\department_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\auth_action.js",[],["584","585"],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\index.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\innovation_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\proposal_approved_action.js",["586"],"import * as api from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// action creators\r\nexport const getProposalApproved = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchProposalApproved();\r\n\r\n        dispatch({\r\n            type: 'FETCH_PROPOSAL_APPROVED',\r\n            payload: data.results\r\n        });\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n    }\r\n}\r\n\r\n\r\n\r\n// // export const createProposal = (proposal) => async (dispatch) => {\r\n//     try {\r\n//         const { data } = await api.createProposal(proposal);\r\n        \r\n//         dispatch({ \r\n//             type: 'CREATE_PROPOSAL', \r\n//             payload: data.results \r\n//         });\r\n        \r\n//         toast.success(\"Created successfully\");\r\n//     } catch (error) {\r\n//         toast.error(\"Unable to create this data.\");\r\n//         console.log('Error: ', error);\r\n//     }\r\n// }\r\n\r\n// export const updateProposal = (proposal) => async (dispatch) => {\r\n//     try {\r\n//         const { data } = await api.updateProposal(proposal);\r\n        \r\n//         dispatch({ type: 'UPDATE_PROPOSAL', payload: data });\r\n//         toast.success(\"Updated successfully\");\r\n//     } catch (error) {\r\n//         toast.error(\"Unable to update this data.\");\r\n//         console.log('Error: ', error);\r\n//     }\r\n// }\r\n\r\n\r\n// export const deleteProposal = (research_id) => async (dispatch) => {\r\n//     try {\r\n//         await api.deleteProposal(research_id);\r\n\r\n//         dispatch({ type: 'DELETE_PROPOSAL', payload: research_id });\r\n//         toast.success(\"Deleted successfully\");\r\n//     } catch (error) {\r\n//         toast.error(\"Unable to delete this data.\");\r\n//         console.log('Error: ', error);\r\n//     }\r\n// }\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\completed_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\presentation_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\proposal_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\publication_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\actions\\utilization_action.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\campus.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\account.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\authentication.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\completed.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\presentation.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\publication.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\innovation.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\utilization.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\proposal.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\redux\\reducers\\department.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\context\\AccountContext.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\layouts\\Main.js",[],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Completed.jsx",["587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { \r\n    getProposalCompleted\r\n    , createProposalCompleted\r\n    , updateProposalCompleted\r\n    , updateProposalCompletedApprovedRemarks\r\n} from '../../../redux/actions/completed_action';\r\n\r\nimport { getProposal } from '../../../redux/actions/proposal_action';\r\nimport { getAccount } from '../../../redux/actions/account_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Nav\r\n    , NavItem\r\n    , NavLink\r\n    , TabContent\r\n    , TabPane\r\n    , Row\r\n    , Col\r\n    , Alert\r\n    , Progress\r\n    , Spinner \r\n} from 'reactstrap';\r\n\r\nimport { FaDownload, FaFilePdf, FaCheck, FaRegFilePdf , FaTrash } from 'react-icons/fa';\r\nimport { MdDoneAll, MdDelete, MdKeyboardTab, MdMoreVert, MdThumbUp, MdThumbDown } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport { Document } from \"react-pdf\";\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\n\r\nimport makeAnimated from 'react-select/animated';\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: 'CREATE',\r\n    UPD: 'UPDATE',\r\n    DEL: 'DELETE'\r\n}\r\n\r\nconst USER_TYPE = {\r\n    USR: 'user', \r\n    ADMIN: 'admin',\r\n    RD: 'rd', //? research director \r\n    RH: 'rh', //? research head\r\n    CD: 'cd' //? campus director\r\n}\r\n\r\nconst Completed = ({ currentUser }) => {\r\n    const faculty = useSelector((state) => state.account.accounts); // This is to populate proposal data\r\n    const proposal_approved = useSelector((state) => state.proposal.proposals);\r\n    const completed = useSelector((state) => state.completed.completed);\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalPrompt, setModalPrompt] = useState(false);\r\n    const [modalType, setModalType] = useState(null);\r\n    const [modalPdf, setModalPdf] = useState(false);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [typeOfResearch, setTypeOfResearch] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [sourceOfFunding, setSourceOfFunding] = useState(\"\");\r\n    const [nameOfAgency, setNameOfAgency] = useState(\"\");\r\n    const [dateOfCompletion, setDateOfCompletion] = useState(new Date());\r\n    const [abstract, setAbstract] = useState(\"\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [filePath, setfilePath] = useState(\"\");\r\n    const [remarks, setRemarks] = useState(\"pending\");\r\n    const [status, setStatus] = useState(\"completed\");\r\n    const [isCompleted, setIsCompleted] = useState(\"N\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({ \r\n        user_id: currentUser.id, \r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`, \r\n        user_type: currentUser.user_type \r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"_id\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: completed => {\r\n                let count = 0;\r\n                \r\n                return(\r\n                    <React.Fragment key={completed._id}>\r\n                        <div></div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"abstract\",\r\n            text: \"Abstract\",\r\n            className: \"font-14\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"file\"\r\n            , text: \"Action\"\r\n            , className: \"text-center\"\r\n            , align: \"left\"\r\n            , cell: completed => {\r\n                if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                    if(completed.is_completed === 'N' && currentUser.user_type === USER_TYPE.RH) {\r\n                        return (\r\n                            <React.Fragment key={completed._id}>\r\n                                <Link to=\"#\" className=\"text-secondary dropdown-toggle\" type=\"button\" id=\"dropDownApprovedDisapproved\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <MdMoreVert size={30} />\r\n                                </Link>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <Link \r\n                                        className=\"dropdown-item text-success\" \r\n                                        to=\"#\"\r\n                                        onClick={() => showModalPrompt(completed, MODAL_TYPE.UPD)}\r\n                                    ><MdDoneAll/>&nbsp;&nbsp;Completed</Link>\r\n                                    <Link \r\n                                        className=\"dropdown-item text-danger\" \r\n                                        to=\"#\"\r\n                                        onClick={() => { showModalPrompt(completed, MODAL_TYPE.DEL) }}\r\n                                    ><MdDelete/>&nbsp;&nbsp;Remove</Link>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <React.Fragment key={completed._id}>\r\n                                <div>File here!</div>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                } else {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => { showModalPrompt(completed, MODAL_TYPE.DEL) }}\r\n                            >\r\n                                <MdDelete/>Remove\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                \r\n            }\r\n        },\r\n    ]\r\n\r\n    const dtConfig = {\r\n        key_column: 'id',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => { setModal(!modal) }\r\n        },\r\n    ]\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getProposal());\r\n        dispatch(getProposalCompleted());\r\n        dispatch(getAccount());\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setResearchId(\"\");\r\n        setTitleOfResearch(\"\");\r\n        setTypeOfResearch(\"\");\r\n        setAuthor(\"\")\r\n        setSourceOfFunding(\"\");\r\n        setNameOfAgency(\"\");\r\n        setDateOfCompletion(\"\");\r\n        // setRemarks(\"\");\r\n    }\r\n\r\n    const toggleModal = (modal_type) => {\r\n        if(modal_type === MODAL_TYPE.CRT) { //? CREATE MODAL\r\n            setModal(!modal);\r\n            setModalType(MODAL_TYPE.CRT);\r\n            clearForm(); \r\n        } else if(modal_type === MODAL_TYPE.UPD) { //* UPDATE status modal prompt\r\n            setModalPrompt(!modalPrompt);\r\n            setModalType(MODAL_TYPE.UPD);\r\n        } else {\r\n            setModalPrompt(!modalPrompt);\r\n            setModalType(MODAL_TYPE.DEL); //! DELETE record modal prompt\r\n        }\r\n    }\r\n\r\n    const toggleModalPdf = () => { \r\n        setModalPdf(!modalPdf);\r\n    }\r\n\r\n    const toggleTab = tabId => {\r\n        if(activeTab !== tabId) setActiveTab(tabId)\r\n    }\r\n\r\n    const showModalPdf = (file_name) => {\r\n        toggleModalPdf();\r\n        setFileName(file_name);\r\n        setfilePath(\"\")\r\n    }\r\n\r\n    const onSubmitFormFunded = () => {\r\n        if(researchId) {\r\n            const formData = new FormData();\r\n            const data = {\r\n                research_id: researchId\r\n                , abstract\r\n                , file_name: fileName\r\n                , is_completed: isCompleted\r\n                , update_at: new Date()\r\n                , updated_by: updatedBy\r\n            }\r\n\r\n            formData.append(\"file\", file);\r\n            formData.append(\"data\", JSON.stringify(data));\r\n\r\n            dispatch(updateProposalCompleted(formData));\r\n        } else {\r\n            const authors = [];\r\n            const dateFormat = moment(dateOfCompletion).format(\"L\");\r\n            author.map((list) => authors.push(list.label));\r\n            \r\n            const data = {\r\n                research_id: researchId\r\n                , title_of_research: titleOfResearch\r\n                , type_of_research: typeOfResearch\r\n                , author: author\r\n                , author_list: authors.join(\", \")\r\n                , source_of_funding: sourceOfFunding\r\n                , date_of_completion: dateFormat\r\n                , abstract\r\n                , file_name: fileName\r\n                , created_at: new Date()\r\n                , created_by: updatedBy\r\n                , updated_at: new Date()\r\n                , updated_by: updatedBy \r\n            }\r\n\r\n            dispatch(createProposalCompleted(data));\r\n        }\r\n\r\n        toggleModal(MODAL_TYPE.CRT);\r\n    }\r\n\r\n    const showModalPrompt = (completed, modal_type) => {\r\n        // UPDATE status modal will appear.\r\n        if(modal_type === MODAL_TYPE.UPD) {\r\n            setResearchId(completed._id);\r\n            setIsCompleted('Y');\r\n            setDateOfCompletion(new Date());\r\n            setUpdatedAt(new Date());\r\n            setRemarks(remarks);\r\n\r\n            toggleModal(MODAL_TYPE.UPD);\r\n        }\r\n\r\n        // DELETE modal will appear\r\n        if(modal_type === MODAL_TYPE.DEL) {\r\n            setResearchId(completed._id);\r\n            setIsCompleted(null);\r\n            setDateOfCompletion(null);\r\n            setUpdatedAt(new Date());\r\n\r\n            toggleModal(MODAL_TYPE.DEL);\r\n        }\r\n    }\r\n\r\n    const onSubmitUpdateStatusOrDelete = (modal_type) => {\r\n        const data = {\r\n            research_id: researchId\r\n            , is_completed: isCompleted\r\n            , date_completed: dateOfCompletion\r\n            , updated_at: updatedAt\r\n            , updated_by: updatedBy\r\n        }\r\n\r\n        if (modal_type === MODAL_TYPE.UPD) {\r\n            dispatch(updateProposalCompletedApprovedRemarks(data));\r\n        } else if(modal_type === MODAL_TYPE.DEL) {\r\n            dispatch(updateProposalCompletedApprovedRemarks(data));\r\n        }\r\n\r\n        toggleModal(modal_type === MODAL_TYPE.DEL ? MODAL_TYPE.DEL : MODAL_TYPE.UPD);\r\n    }\r\n\r\n    const getAuthorsOption = () => {\r\n        const authors = []\r\n        \r\n        for (let i = 0; i < faculty.length; i++)\r\n            authors.push({ value: faculty[i]._id, label: faculty[i].full_name });\r\n\r\n        return authors;\r\n    }\r\n\r\n    // Displays only the researches of the current user.\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n        \r\n        if(typeof proposal_approved !== undefined) {\r\n            const list_of_research = []; \r\n\r\n            for (let i = 0; i < proposal_approved.length; i++) {\r\n                let { user_id } = proposal_approved[i].created_by;\r\n                \r\n                if(proposal_approved[i].remarks === 'approved' && proposal_approved[i].is_completed !== 'N' && proposal_approved[i].is_completed !== 'Y' && user_id === currentUserId) {\r\n                    list_of_research.push(\r\n                        <option key={proposal_approved[i]._id} value={proposal_approved[i]._id}>\r\n                            { proposal_approved[i].title_of_research }\r\n                        </option>\r\n                    ) \r\n                } \r\n            }\r\n    \r\n            return list_of_research;\r\n        }\r\n        \r\n    }\r\n\r\n    const getPendingProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof completed !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < completed.length; i++) {\r\n                    if(completed[i].is_completed === 'N') {\r\n                        pending.push({ \r\n                            _id: completed[i]._id\r\n                            , title_of_research: completed[i].title_of_research\r\n                            , type_of_research: completed[i].type_of_research\r\n                            , abstract: completed[i].abstract\r\n                            , author: completed[i].author\r\n                            , author_list: completed[i].author_list\r\n                            , source_of_funding: completed[i].source_of_funding\r\n                            , date_of_completion: completed[i].date_of_completion\r\n                            , file_name: completed[i].file_name\r\n                            , is_completed: completed[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n                \r\n                for (let i = 0; i < completed.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = completed[i].created_by;\r\n\r\n                    if(completed[i].is_completed === 'N' && user_id === currentUserId) {\r\n                        pending.push({ \r\n                            _id: completed[i]._id\r\n                            , title_of_research: completed[i].title_of_research\r\n                            , type_of_research: completed[i].type_of_research\r\n                            , abstract: completed[i].abstract\r\n                            , author: completed[i].author\r\n                            , author_list: completed[i].author_list\r\n                            , source_of_funding: completed[i].source_of_funding\r\n                            , date_of_completion: completed[i].date_of_completion\r\n                            , file_name: completed[i].file_name\r\n                            , is_completed: completed[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getCompletedProposal = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(typeof completed !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const complete = [];\r\n\r\n                for (let i = 0; i < completed.length; i++) {\r\n                    if(completed[i].is_completed === 'Y') {\r\n                        complete.push({ \r\n                            _id: completed[i]._id\r\n                            , title_of_research: completed[i].title_of_research\r\n                            , type_of_research: completed[i].type_of_research\r\n                            , abstract: completed[i].abstract\r\n                            , author: completed[i].author\r\n                            , author_list: completed[i].author_list\r\n                            , source_of_funding: completed[i].source_of_funding\r\n                            , date_of_completion: completed[i].date_of_completion\r\n                            , file_name: completed[i].file_name\r\n                            , is_completed: completed[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return complete;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const complete = [];\r\n                \r\n                for (let i = 0; i < completed.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = completed[i].created_by;\r\n\r\n                    if(completed[i].is_completed === 'Y' && user_id === currentUserId) {\r\n                        complete.push({ \r\n                            _id: completed[i]._id\r\n                            , title_of_research: completed[i].title_of_research\r\n                            , type_of_research: completed[i].type_of_research\r\n                            , abstract: completed[i].abstract\r\n                            , author: completed[i].author\r\n                            , author_list: completed[i].author_list\r\n                            , source_of_funding: completed[i].source_of_funding\r\n                            , date_of_completion: completed[i].date_of_completion\r\n                            , file_name: completed[i].file_name\r\n                            , is_completed: completed[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return complete;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer position=\"top-right\" autoClose={2000} hideProgressBar={true} newestOnTop={false} closeOnClick={true} rtl={false} pauseOnFocusLoss={true} draggable={true} pauseOnHover={true} />\r\n\r\n            <Modal isOpen={modalPrompt} toggle={() => toggleModal(MODAL_TYPE.DEL)} className=\"modal-dialogue\" >\r\n                <ModalHeader className={modalType === MODAL_TYPE.DEL ? \"bg-danger text-light\" : \"bg-primary text-light\"} toggle={() => toggleModal(MODAL_TYPE.DEL)}>{modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update Status\" }</ModalHeader>\r\n                <ModalBody>\r\n                    <Label>{modalType === MODAL_TYPE.DEL ? \"Are you sure do you want to delete this data?\" : \"Are you sure you want to update the status?\" }</Label>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button type=\"submit\" color={modalType === MODAL_TYPE.DEL ? \"danger\" : \"primary\" } onClick={() => onSubmitUpdateStatusOrDelete(modalType === MODAL_TYPE.DEL ? MODAL_TYPE.DEL : MODAL_TYPE.UPD)}>{modalType === MODAL_TYPE.DEL ? \"Delete\" : \"Update\" }</Button>\r\n                    <Button color=\"light\" onClick={() => toggleModal(MODAL_TYPE.DEL)}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            {/* create modal */}\r\n            <Modal isOpen={modal} toggle={() => toggleModal(MODAL_TYPE.CRT)} size=\"lg\" className=\"modal-dialog font-14\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={() => toggleModal(MODAL_TYPE.CRT)}>{!researchId ? 'Add Completed' : 'Update Completed' }</ModalHeader>\r\n                <Form>\r\n                <ModalBody>\r\n                    <Container>\r\n                        <Nav tabs pills className=\"mb-3\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={activeTab === '1' ? \"active\" : \"\"}\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Funded</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={activeTab === '2' ? \"active\" : \"\"}\r\n                                    onClick={() => { toggleTab('2') }}\r\n                                >External</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Title of Research <span className=\"text-danger\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"research_id\"\r\n                                        id=\"research_id\"\r\n                                        value={researchId || \"\"}\r\n                                        onChange={(e) => { setResearchId(e.target.value) }}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Choose...</option>\r\n                                        { getResearchesOptions() }\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>Abstract <span className=\"text-danger\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"textarea\"\r\n                                        name=\"abstract\"\r\n                                        id=\"abstract\"\r\n                                        value={abstract || \"\"}\r\n                                        onChange={(e) => setAbstract(e.target.value)}\r\n                                        required\r\n                                    ></Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>Choose file <span className=\"text-danger\">*</span></Label><br />\r\n                                    <div className=\"input-group mb-2\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <i className=\"fas fa-paperclip\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"custom-file\">\r\n                                            <input \r\n                                                type=\"file\" \r\n                                                className=\"custom-file-input\"  \r\n                                                onChange={(e) => {\r\n                                                    setFile(e.target.files[0])\r\n                                                    setFileName(e.target.files[0].name)\r\n                                                    }\r\n                                                }\r\n                                            />\r\n                                            <label className=\"custom-file-label\">{fileName}</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <Input\r\n                                        name=\"file\"\r\n                                        type=\"file\"\r\n                                        id=\"file\"\r\n                                        onChange={(e) => {\r\n                                            setFile(e.target.files[0])\r\n                                            setFileName(e.target.files[0].name)\r\n                                        }}\r\n                                        required\r\n                                    /> */}\r\n                                    <small className=\"badge badge-danger text-white float-left\"><b>Note:</b> Upload only PDF files.</small>\r\n                                </FormGroup>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        type=\"hidden\"\r\n                                        name=\"research_id\"\r\n                                        id=\"research_id\"\r\n                                        value={researchId || \"\"}\r\n                                        onChange={(e) => { setResearchId(e.target.value) }}\r\n                                    />\r\n                                    <Label for=\"\">Title of Research <span className=\"text-danger\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"title_of_research\"\r\n                                        id=\"title_of_research\"\r\n                                        value={titleOfResearch || \"\"}\r\n                                        onChange={(e) => { setTitleOfResearch(e.target.value) }}\r\n                                        required\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Type of Research <span className=\"text-danger\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"type_of_research\"\r\n                                        id=\"type_of_research\"\r\n                                        value={typeOfResearch || \"\"}\r\n                                        onChange={(e) => { setTypeOfResearch(e.target.value) }}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Choose...</option>\r\n                                        <option value=\"descriptive\">Descriptive</option>\r\n                                        <option value=\"developmental\">Developmental</option>\r\n                                        <option value=\"experimental\">Experimental</option>\r\n                                        <option value=\"modelling\">Modelling</option>\r\n                                        <option value=\"others\">Others</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Author(s) <span className=\"text-danger\">*</span></Label>\r\n                                        <Select\r\n                                            closeMenuOnSelect={false}\r\n                                            components={animatedComponents}\r\n                                            isMulti\r\n                                            // options={getFacultiesOption(null, null)}\r\n                                            options={getAuthorsOption()}\r\n                                            name=\"author\"\r\n                                            value={author}\r\n                                            onChange={setAuthor}\r\n                                            required\r\n                                        />\r\n                                    {/* <Input\r\n                                        type=\"textarea\"\r\n                                        name=\"author\"\r\n                                        id=\"author\"\r\n                                        value={author || \"\"}\r\n                                        onChange={(e) => { setAuthor(e.target.value) }}\r\n                                        required\r\n                                    /> */}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Row>\r\n                                        <Col md=\"6\">\r\n                                            <Label for=\"\">Source of Funding <span className=\"text-danger\">*</span></Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"source_of_funding\"\r\n                                                id=\"source_of_funding\"\r\n                                                value={sourceOfFunding || \"\"}\r\n                                                onChange={(e) => { setSourceOfFunding(e.target.value) }}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Choose...</option>\r\n                                                <option value=\"stf\">STF</option>\r\n                                                <option value=\"gaa\">GAA</option>\r\n                                                <option value=\"external\">External</option>\r\n                                                <option value=\"personal\">Personal</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                        <Col md=\"6\">\r\n                                            <Label for=\"\">{sourceOfFunding === 'external' ? \"Name of Agency\" : \"\"}</Label>\r\n                                            <Input\r\n                                                type={sourceOfFunding === 'external' ? \"text\" : \"hidden\"}\r\n                                                name=\"name_of_agency\"\r\n                                                id=\"name_of_agency\"\r\n                                                value={nameOfAgency || \"\"}\r\n                                                onChange={(e) => { setNameOfAgency(e.target.value) }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Row>\r\n                                        <Col md=\"6\">\r\n                                            <Label for=\"\">Date of Completion <span className=\"text-danger\">*</span></Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date_of_completion\"\r\n                                                id=\"date_of_completion\"\r\n                                                value={dateOfCompletion || \"\"}\r\n                                                onChange={(e) => { setDateOfCompletion(e.target.value) }}\r\n                                                required\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>Abstract</Label>\r\n                                    <Input\r\n                                        type=\"textarea\"\r\n                                        name=\"abstract\"\r\n                                        id=\"abstract\"\r\n                                        value={abstract || \"\"}\r\n                                        onChange={(e) => setAbstract(e.target.value)}\r\n                                        required\r\n                                    ></Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>Upload file</Label><br/>\r\n                                    <Input\r\n                                        name=\"file\"\r\n                                        type=\"file\"\r\n                                        id=\"file\"\r\n                                        onChange={(e) => setFile(e.target.files[0].name)}\r\n                                        required\r\n                                    />\r\n                                </FormGroup>\r\n                                {/* <FormGroup>\r\n                                    <Row>\r\n                                        <Col md=\"6\">\r\n                                            <Label for=\"\">Remarks</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"remarks\"\r\n                                                id=\"remarks\"\r\n                                                value={remarks || \"\"}\r\n                                                onChange={(e) => { setRemarks(e.target.value) }}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Choose...</option>\r\n                                                <option value=\"submitted\">Submitted</option>\r\n                                                <option value=\"evaluated\">Evaluated</option>\r\n                                                <option value=\"for_approval\">For Approval</option>\r\n                                                <option value=\"approved\">Approved</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </FormGroup> */}\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </Container>\r\n                </ModalBody>\r\n                <ModalFooter className=\"mt-3\">\r\n                    <Button type=\"submit\" color=\"primary\" onClick={onSubmitFormFunded}>{activeTab === \"1\" ? \"Save Changes\" : \"Save External\"}</Button>\r\n                    <Button color=\"light\" onClick={() => toggleModal(MODAL_TYPE.CRT)}>Cancel</Button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Completed</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/completed\">Completed</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Alert color=\"warning\">\r\n                    <h4 className=\"alert-heading font-weight-bold\">Reminders!</h4>\r\n                    <p>\r\n                        Be sure to submit the hard copy of your completed research to your respective research coordinator.\r\n                    </p>\r\n                    <hr />\r\n                    <p className=\"mb-0\">\r\n                        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum, voluptates.\r\n                    </p>\r\n                </Alert>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Nav tabs pills className=\"mb-3 font-14 text-dark\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={activeTab === '1' ? \"active\" : \"\"}\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Pending</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={activeTab === '2' ? \"active\" : \"\"}\r\n                                    onClick={() => { toggleTab('2') }}\r\n                                >Completed</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getPendingProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getCompletedProposal()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                        </TabContent>    \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Completed;\r\n\r\n\r\n\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\Presentation.jsx",["604","605","606","607","608","609","610","611","612"],"import React\r\n, {\r\n    useState\r\n    , useEffect\r\n} from 'react';\r\n\r\nimport {\r\n    useDispatch\r\n    , useSelector\r\n} from 'react-redux';\r\n\r\nimport { \r\n    getPresentation \r\n    , createPresentation\r\n    , updatePresentation\r\n    , deletePresentation\r\n} from '../../../redux/actions/presentation_action';\r\n\r\nimport { getProposalCompleted } from '../../../redux/actions/completed_action';\r\n\r\nimport { \r\n    Container\r\n    , Button\r\n    , Card\r\n    , CardBody\r\n    , Modal\r\n    , ModalHeader\r\n    , ModalBody\r\n    , ModalFooter\r\n    , Form\r\n    , FormGroup\r\n    , Label\r\n    , Input\r\n    , Nav\r\n    , NavItem\r\n    , NavLink\r\n    , TabContent\r\n    , TabPane\r\n    , Row\r\n    , Col\r\n} from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport moment from 'moment';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MODAL_TYPE = {\r\n    CRT: 'CREATE',\r\n    UPD: 'UPDATE',\r\n    DEL: 'DELETE'\r\n}\r\n\r\nconst USER_TYPE = {\r\n    USR: 'user', \r\n    ADMIN: 'admin',\r\n    RD: 'rd', //? research director \r\n    RH: 'rh', //? research head\r\n    CD: 'cd' //? campus director\r\n}\r\n\r\nconst Presentation = ({ currentUser }) => {\r\n    const presentation = useSelector((state) => state.presentation.presentations); // This is to populate department data\r\n    const completed = useSelector((state) => state.completed.completed); // This is to populate department data\r\n\r\n    const dispatch = useDispatch(); // this is to dispatch actions\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modalPrompt, setModalPrompt] = useState(false);\r\n    const [modalType, setModaType] = useState(null);\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n    const [presentationId, setPresentationId] = useState(null);\r\n    const [researchId, setResearchId] = useState(null);\r\n    const [titleOfResearch, setTitleOfResearch] = useState(\"\");\r\n    const [presentor, setPresentor] = useState(\"\");\r\n    const [datePresented, setDatePresented] = useState(new Date());\r\n    const [typeOfForum, setTypeOfForum] = useState(\"\");\r\n    const [venueOfForum, setVenueOfForum] = useState(\"\");\r\n    const [titleOfForum, setTitleOfForum] = useState(\"\");\r\n    const [updatedAt, setUpdatedAt] = useState(new Date());\r\n    const [updatedBy, setUpdatedBy] = useState({ \r\n        user_id: currentUser.id, \r\n        full_name: `${currentUser.first_name} ${currentUser.last_name}`, \r\n        user_type: currentUser.user_type \r\n    });\r\n\r\n    // Datatables Configuration\r\n    const dtColumns = [\r\n        {\r\n            key: \"proposal_no\",\r\n            className: \"text-center\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            // width: 100,\r\n            cell: presentation => {\r\n                if(presentation.is_completed === 'N') { \r\n                    return(\r\n                        <React.Fragment>\r\n                            <Link \r\n                                to=\"#\" \r\n                                className=\"text-secondary\" \r\n                                onClick={() => showEditForm(presentation)}\r\n                            ><i className=\"fas fa-pencil-alt ml-1\"></i>\r\n                            </Link>\r\n                            &nbsp;&nbsp;\r\n                            <Link \r\n                                to=\"#\" \r\n                                className=\"text-danger\" \r\n                                onClick={() => onClickDelete(presentation._id)}\r\n                            ><i className=\"fas fa-trash-alt ml-1\"></i>\r\n                            </Link>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            key: \"title_of_research\",\r\n            text: \"Title of Research\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"presentor\",\r\n            text: \"Presentor\",\r\n            align: \"left\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"date_presented\",\r\n            text: \"Date Presented\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: presentation => {\r\n                return (\r\n                    <React.Fragment>\r\n                        { moment(presentation.date_presented).format(\"LL\") }\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"\",\r\n            text: \"\",\r\n            align: \"left\",\r\n            sortable: true,\r\n            cell: presentation => {\r\n                if(presentation.is_completed === 'N') {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                className=\"btn btn-sm\"\r\n                                onClick={() => { onSubmitUpdateRemarks(presentation._id) }}\r\n                            >Completed\r\n                            </Button>&nbsp;\r\n                        </React.Fragment>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"badge badge-success\">COMPLETED</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    const dtConfig = {\r\n        key_column: 'id',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        button: {\r\n            // print: true,\r\n            extra: true,\r\n        }\r\n    }\r\n\r\n    const dtExtraButtons = [\r\n        {\r\n            className: \"btn btn-primary\",\r\n            title: \"Print\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => {\r\n                alert(\"Print Logic here\");\r\n            },\r\n        },\r\n        {\r\n            className: \"btn btn-warning\",\r\n            title: \"Create New\",\r\n            children: [\r\n                <span>\r\n                    <i className=\"glyphicon glyphicon-print fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            ],\r\n            onClick: () => { setModal(!modal) }\r\n        },\r\n    ]\r\n\r\n    // End of Datatables Config\r\n\r\n    useEffect(() => {\r\n        dispatch(getPresentation());\r\n        dispatch(getProposalCompleted());\r\n        // dispatch(getProposalCompletedApproved());\r\n        // dispatch(getProposalCompletedApprovedByResearchId(researchId));\r\n    }, [dispatch]);\r\n\r\n    const clearForm = () => {\r\n        setPresentationId(null);\r\n        setResearchId(null);\r\n        setTitleOfResearch(\"\");\r\n        setPresentor(\"\");\r\n        setTypeOfForum(\"\");\r\n        setVenueOfForum(\"\");\r\n        setTitleOfForum(\"\");\r\n    }\r\n\r\n    const toggleModal = () => { \r\n        setModal(!modal);\r\n        clearForm(); \r\n    }\r\n\r\n    const toggleTab = tabId => {\r\n        if(activeTab !== tabId) \r\n            setActiveTab(tabId)\r\n\r\n        clearForm();\r\n    }\r\n\r\n    const showEditForm = (data) => {\r\n        const {\r\n            _id \r\n            , research_id\r\n            , title_of_research  \r\n            , presentor\r\n            , date_presented\r\n            , type_of_forum\r\n            , venue_of_forum\r\n            , title_of_forum\r\n        } = data;\r\n        \r\n        toggleModal();\r\n\r\n        setPresentationId(_id);\r\n        setResearchId(research_id);\r\n        setTitleOfResearch(title_of_research);\r\n        setPresentor(presentor);\r\n        setDatePresented(moment(date_presented).format(\"L\"));\r\n        setTypeOfForum(type_of_forum);\r\n        setVenueOfForum(venue_of_forum);\r\n        setTitleOfForum(title_of_forum);\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            presentation_id: presentationId\r\n            , research_id: researchId\r\n            , title_of_research: titleOfResearch\r\n            , presentor: presentor\r\n            , date_presented: datePresented\r\n            , type_of_forum: typeOfForum\r\n            , venue_of_forum: venueOfForum\r\n            , title_of_forum: titleOfForum\r\n            , created_at: new Date()\r\n            , created_by: updatedBy\r\n        }\r\n\r\n        if(!presentationId) {\r\n            dispatch(createPresentation(data));\r\n        } else {\r\n            dispatch(updatePresentation(data));\r\n        } \r\n        \r\n        toggleModal();\r\n    }\r\n\r\n    const onClickDelete = (presentation_id) => {\r\n        const isDelete = window.confirm(\"Are you sure you want to delete this data?\");\r\n\r\n        if(isDelete)\r\n            dispatch(deletePresentation(presentation_id));\r\n    }\r\n\r\n    const getResearchesOptions = () => {\r\n        const currentUserId = currentUser.id;\r\n\r\n        if(completed !== undefined) {\r\n            const list_of_research = []; \r\n\r\n            for (let i = 0; i < completed.length; i++) {\r\n                let { user_id } = completed[i].created_by;\r\n\r\n                if(completed[i].is_completed === 'Y' && user_id === currentUserId ) {\r\n                    list_of_research.push(\r\n                        <option key={completed[i]._id} value={completed[i]._id}>\r\n                            { completed[i].title_of_research }\r\n                        </option>\r\n                    )\r\n                }\r\n            }\r\n\r\n            return list_of_research;\r\n        }        \r\n    }\r\n\r\n    const getPresentorsOptions = (research_id) => {\r\n        const list_of_presentor = [];\r\n\r\n        if(research_id !== '') {\r\n            for (let i = 0; i < completed.length; i++) {\r\n                if(completed[i]._id === research_id) {\r\n                    for (let j = 0; j < completed[i].author.length; j++) {\r\n                        list_of_presentor.push(\r\n                            <option key={completed[i].author[j].value} value={completed[i].author[j].label}>\r\n                                {completed[i].author[j].label}\r\n                            </option>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return list_of_presentor;\r\n    }\r\n\r\n\r\n    const getPendingPresentations = () => {\r\n        const currentUserId = currentUser.id;\r\n        \r\n        if(typeof presentation !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const pending = [];\r\n\r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    if(presentation[i].is_completed === 'N') {\r\n                        pending.push({\r\n                            _id: presentation[i]._id\r\n                            , title_of_research: presentation[i].title_of_research\r\n                            , presentor: presentation[i].presentor\r\n                            , date_presented: presentation[i].date_presented\r\n                            , title_of_forum: presentation[i].title_of_forum\r\n                            , type_of_forum: presentation[i].type_of_forum\r\n                            , venue_of_forum: presentation[i].venue_of_forum\r\n                            , is_completed: presentation[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const pending = [];\r\n                \r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = presentation[i].created_by;\r\n\r\n                    if(presentation[i].is_completed === 'N' && user_id === currentUserId) {\r\n                        pending.push({ \r\n                            _id: presentation[i]._id\r\n                            , title_of_research: presentation[i].title_of_research\r\n                            , presentor: presentation[i].presentor\r\n                            , date_presented: presentation[i].date_presented\r\n                            , title_of_forum: presentation[i].title_of_forum\r\n                            , type_of_forum: presentation[i].type_of_forum\r\n                            , venue_of_forum: presentation[i].venue_of_forum\r\n                            , is_completed: presentation[i].is_completed\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return pending;\r\n            }\r\n        }        \r\n    }\r\n\r\n    const getCompletedPresentations = () => {\r\n        const currentUserId = currentUser.id;\r\n        \r\n        if(typeof presentation !== undefined) {\r\n            if(currentUser.user_type === USER_TYPE.RH || currentUser.user_type === USER_TYPE.ADMIN) {\r\n                const completed = [];\r\n\r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    if(presentation[i].is_completed === 'Y') {\r\n                        completed.push({\r\n                            _id: presentation[i]._id\r\n                            , title_of_research: presentation[i].title_of_research\r\n                            , presentor: presentation[i].presentor\r\n                            , date_presented: presentation[i].date_presented\r\n                            , title_of_forum: presentation[i].title_of_forum\r\n                            , type_of_forum: presentation[i].type_of_forum\r\n                            , venue_of_forum: presentation[i].venue_of_forum\r\n                        })\r\n                    }\r\n                }\r\n        \r\n                return completed;\r\n            }\r\n            // Current logged in user is USER.\r\n            else {\r\n                const completed = [];\r\n                \r\n                for (let i = 0; i < presentation.length; i++) {\r\n                    // Destructure some of the details\r\n                    let { user_id } = presentation[i].created_by;\r\n\r\n                    if(presentation[i].is_completed === 'Y' && user_id === currentUserId) {\r\n                        completed.push({ \r\n                            _id: presentation[i]._id\r\n                            , title_of_research: presentation[i].title_of_research\r\n                            , presentor: presentation[i].presentor\r\n                            , date_presented: presentation[i].date_presented\r\n                            , title_of_forum: presentation[i].title_of_forum\r\n                            , type_of_forum: presentation[i].type_of_forum\r\n                            , venue_of_forum: presentation[i].venue_of_forum\r\n                        })\r\n                    }\r\n                }\r\n\r\n                return completed;\r\n            }\r\n        }\r\n    }\r\n    \r\n    const onSubmitUpdateRemarks = (presentation_id) => {\r\n        const data = {\r\n            presentation_id\r\n            , is_completed: 'Y'\r\n            , updated_at: new Date()\r\n        }\r\n\r\n        const isSubmit = window.confirm(\"Are you sure you want to update?\");\r\n\r\n        if(isSubmit) {\r\n            dispatch(updatePresentation(data));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ToastContainer \r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick={true}\r\n                rtl={false}\r\n                pauseOnFocusLoss={true}\r\n                draggable={true}\r\n                pauseOnHover={true}\r\n            />\r\n\r\n            <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" className=\"modal-dialog font-14\">\r\n                <ModalHeader className=\"bg-primary text-light\" toggle={toggleModal}>{!presentationId ? 'Add Presentation' : 'Update Presentation' }</ModalHeader>\r\n                <Form onSubmit={onSubmitForm}>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <FormGroup>\r\n                                <Input \r\n                                    type=\"hidden\"\r\n                                    name=\"presentation_id\"\r\n                                    id=\"presentation_id\"\r\n                                    value={presentationId}\r\n                                    onChange={(e) => { setPresentationId(e.target.value) }}\r\n                                />\r\n                                <Label for=\"\">Title of Research <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"research_id\"\r\n                                    id=\"research_id\"\r\n                                    value={researchId}\r\n                                    onChange={(e) => { \r\n                                        setResearchId(e.target.value); \r\n                                        setTitleOfResearch(e.target.options[e.target.selectedIndex].text);\r\n                                    }}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    { getResearchesOptions() }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Presentor <span className=\"text-danger\">*</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"presentor\"\r\n                                    id=\"presentor\"\r\n                                    value={ presentor || '' }\r\n                                    onChange={(e) => setPresentor(e.target.value) }\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Choose...</option>\r\n                                    { getPresentorsOptions(researchId) }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Date Presented</Label>\r\n                                        <DateTimePickerComponent\r\n                                            format=\"yyyy-MM-dd\"\r\n                                            id=\"datetimepicker\"\r\n                                            value={datePresented}\r\n                                            onChange={(e) => { setDatePresented(e.target.value) }}\r\n                                            required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Title of Forum</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"title_of_forum\"\r\n                                    id=\"title_of_forum\"\r\n                                    value={titleOfForum}\r\n                                    onChange={(e) => { setTitleOfForum(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                        <Label>Type of Forum</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"type_of_forum\"\r\n                                            id=\"type_of_forum\"\r\n                                            value={typeOfForum}\r\n                                            onChange={(e) => { setTypeOfForum(e.target.value) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Choose...</option>\r\n                                            <option value=\"local\">Local</option>\r\n                                            <option value=\"national\">National</option>\r\n                                            <option value=\"international\">International</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Venue of Forum</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"venue_of_forum\"\r\n                                    id=\"venue_of_forum\"\r\n                                    value={venueOfForum}\r\n                                    onChange={(e) => { setVenueOfForum(e.target.value) }}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"submit\" color=\"primary\">Save Changes</Button>\r\n                        <Button color=\"light\" onClick={toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <div className=\"page-breadcrumb\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 align-self-center\">\r\n                    <h3 className=\"page-title text-truncate text-dark font-weight-medium mb-1\">Presentation</h3>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb m-0 p-0\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"/\">Settings</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item text-muted active\" aria-current=\"page\">\r\n                                        <a href=\"/completed\">Presentation</a>\r\n                                    </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-5 align-self-center\">\r\n                        <div className=\"customize-input float-right\">\r\n                            <select className=\"custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius\">\r\n                                <option>2019</option>\r\n                                <option value={1}>2020</option>\r\n                                <option value={2}>2021</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Container fluid>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Nav tabs pills className=\"mb-3 font-14\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '1' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('1') }}\r\n                                >Pending</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"#\"\r\n                                    className={ activeTab === '2' ? \"active\" : null }\r\n                                    onClick={() => { toggleTab('2') }}\r\n                                >Completed</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={activeTab}>\r\n                            <TabPane tabId=\"1\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getPendingPresentations()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <ReactDatatable\r\n                                    className=\"table font-14\"\r\n                                    tHeadClassName=\"thead-dark font-weight-medium\"\r\n                                    config={dtConfig}\r\n                                    records={getCompletedPresentations()}\r\n                                    columns={dtColumns}\r\n                                    extraButtons={dtExtraButtons}\r\n                                />\r\n                            </TabPane>\r\n                        </TabContent> \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Presentation;\r\n\r\n\r\n\r\n","Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\dashboard\\Faculties.jsx",["613","614","615","616","617"],"Z:\\Projects\\_Backup\\react-admin\\client\\src\\components\\pages\\researches\\dashboard\\Administrator.jsx",[],"D:\\research-management-system\\client\\src\\index.js",[],"D:\\research-management-system\\client\\src\\App.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\index.js",[],"D:\\research-management-system\\client\\src\\context\\AccountContext.js",[],"D:\\research-management-system\\client\\src\\components\\layouts\\Main.js",["618","619","620","621"],"D:\\research-management-system\\client\\src\\redux\\reducers\\utilization.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\innovation.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\presentation.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\account.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\campus.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\completed.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\department.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\proposal.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\publication.js",[],"D:\\research-management-system\\client\\src\\redux\\reducers\\authentication.js",[],"D:\\research-management-system\\client\\src\\components\\layouts\\Content.js",["622"],"D:\\research-management-system\\client\\src\\components\\layouts\\SideMenu.js",[],"D:\\research-management-system\\client\\src\\components\\layouts\\Header.js",["623","624","625"],"D:\\research-management-system\\client\\src\\components\\layouts\\Footer.js",["626","627"],"D:\\research-management-system\\client\\src\\components\\pages\\manage\\Department.js",[],"D:\\research-management-system\\client\\src\\components\\pages\\manage\\Campus.js",[],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Completed.jsx",["628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Presentation.jsx",["651","652","653","654","655","656","657","658","659","660","661","662","663","664"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\dashboard\\Administrator.jsx",["665","666","667","668","669","670","671","672","673","674","675","676","677"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\dashboard\\Faculties.jsx",[],"D:\\research-management-system\\client\\src\\redux\\actions\\campus_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\account_action.js",["678"],"D:\\research-management-system\\client\\src\\redux\\actions\\innovation_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\utilization_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\completed_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\publication_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\department_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\proposal_action.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\presentation_action.js",[],"D:\\research-management-system\\client\\src\\api\\index.js",[],"D:\\research-management-system\\client\\src\\components\\pages\\error\\PageNotFound.jsx",[],"D:\\research-management-system\\client\\src\\components\\pages\\manage\\Profile.jsx",["679","680","681","682","683","684","685","686","687","688","689","690","691","692"],"D:\\research-management-system\\client\\src\\components\\pages\\manage\\ChangePassword.jsx",["693","694"],"D:\\research-management-system\\client\\src\\redux\\actions\\auth_action.js",[],"D:\\research-management-system\\client\\src\\components\\auth\\Login.jsx",["695","696","697","698","699","700","701"],"D:\\research-management-system\\client\\src\\components\\auth\\Registration.jsx",["702","703","704"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Publication.jsx",["705","706","707","708","709","710","711","712"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Utilization.jsx",["713","714","715","716","717","718"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Innovation.jsx",["719","720","721","722","723"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Proposal.jsx",["724","725","726","727","728","729","730","731","732"],"D:\\research-management-system\\client\\src\\components\\pages\\researches\\Seminar.jsx",["733","734","735","736","737","738"],"D:\\research-management-system\\client\\src\\redux\\reducers\\seminar.js",[],"D:\\research-management-system\\client\\src\\redux\\actions\\seminar_action.js",[],"D:\\research-management-system\\client\\src\\components\\pages\\manage\\Account.jsx",["739","740","741","742","743","744","745"],"D:\\research-management-system\\client\\src\\components\\layouts\\SideMenuBarUser.jsx",[],{"ruleId":"746","replacedBy":"747"},{"ruleId":"748","replacedBy":"749"},{"ruleId":"750","severity":1,"message":"751","line":10,"column":9,"nodeType":"752","endLine":10,"endColumn":88},{"ruleId":"750","severity":1,"message":"751","line":26,"column":9,"nodeType":"752","endLine":26,"endColumn":243},{"ruleId":"750","severity":1,"message":"751","line":31,"column":10,"nodeType":"752","endLine":31,"endColumn":175},{"ruleId":"750","severity":1,"message":"751","line":39,"column":13,"nodeType":"752","endLine":39,"endColumn":100},{"ruleId":"750","severity":1,"message":"751","line":49,"column":13,"nodeType":"752","endLine":49,"endColumn":100},{"ruleId":"750","severity":1,"message":"751","line":58,"column":13,"nodeType":"752","endLine":58,"endColumn":100},{"ruleId":"750","severity":1,"message":"751","line":68,"column":13,"nodeType":"752","endLine":68,"endColumn":100},{"ruleId":"750","severity":1,"message":"751","line":79,"column":12,"nodeType":"752","endLine":79,"endColumn":72},{"ruleId":"750","severity":1,"message":"751","line":88,"column":10,"nodeType":"752","endLine":88,"endColumn":159},{"ruleId":"750","severity":1,"message":"751","line":92,"column":11,"nodeType":"752","endLine":92,"endColumn":49},{"ruleId":"750","severity":1,"message":"751","line":93,"column":11,"nodeType":"752","endLine":93,"endColumn":49},{"ruleId":"750","severity":1,"message":"751","line":95,"column":11,"nodeType":"752","endLine":95,"endColumn":49},{"ruleId":"750","severity":1,"message":"751","line":99,"column":10,"nodeType":"752","endLine":99,"endColumn":43},{"ruleId":"750","severity":1,"message":"751","line":113,"column":10,"nodeType":"752","endLine":113,"endColumn":43},{"ruleId":"750","severity":1,"message":"751","line":123,"column":10,"nodeType":"752","endLine":123,"endColumn":125},{"ruleId":"753","severity":1,"message":"754","line":123,"column":10,"nodeType":"752","endLine":123,"endColumn":125},{"ruleId":"750","severity":1,"message":"751","line":128,"column":11,"nodeType":"752","endLine":128,"endColumn":49},{"ruleId":"750","severity":1,"message":"751","line":129,"column":11,"nodeType":"752","endLine":129,"endColumn":49},{"ruleId":"750","severity":1,"message":"751","line":131,"column":12,"nodeType":"752","endLine":131,"endColumn":50},{"ruleId":"750","severity":1,"message":"751","line":135,"column":12,"nodeType":"752","endLine":135,"endColumn":50},{"ruleId":"750","severity":1,"message":"751","line":140,"column":12,"nodeType":"752","endLine":140,"endColumn":56},{"ruleId":"755","severity":1,"message":"756","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":17},{"ruleId":"755","severity":1,"message":"759","line":2,"column":19,"nodeType":"757","messageId":"758","endLine":2,"endColumn":23},{"ruleId":"760","severity":1,"message":"761","line":7,"column":5,"nodeType":"762","messageId":"763","endLine":9,"endColumn":6},{"ruleId":"746","replacedBy":"764"},{"ruleId":"748","replacedBy":"765"},{"ruleId":"755","severity":1,"message":"766","line":1,"column":27,"nodeType":"757","messageId":"758","endLine":1,"endColumn":36},{"ruleId":"755","severity":1,"message":"767","line":3,"column":23,"nodeType":"757","messageId":"758","endLine":3,"endColumn":34},{"ruleId":"755","severity":1,"message":"768","line":4,"column":10,"nodeType":"757","messageId":"758","endLine":4,"endColumn":22},{"ruleId":"755","severity":1,"message":"769","line":5,"column":10,"nodeType":"757","messageId":"758","endLine":5,"endColumn":17},{"ruleId":"755","severity":1,"message":"770","line":13,"column":11,"nodeType":"757","messageId":"758","endLine":13,"endColumn":19},{"ruleId":"746","replacedBy":"771"},{"ruleId":"748","replacedBy":"772"},{"ruleId":"755","severity":1,"message":"766","line":1,"column":27,"nodeType":"757","messageId":"758","endLine":1,"endColumn":36},{"ruleId":"755","severity":1,"message":"773","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":21},{"ruleId":"755","severity":1,"message":"767","line":2,"column":23,"nodeType":"757","messageId":"758","endLine":2,"endColumn":34},{"ruleId":"755","severity":1,"message":"774","line":1,"column":17,"nodeType":"757","messageId":"758","endLine":1,"endColumn":26},{"ruleId":"755","severity":1,"message":"775","line":53,"column":12,"nodeType":"757","messageId":"758","endLine":53,"endColumn":18},{"ruleId":"755","severity":1,"message":"776","line":53,"column":20,"nodeType":"757","messageId":"758","endLine":53,"endColumn":29},{"ruleId":"755","severity":1,"message":"777","line":54,"column":12,"nodeType":"757","messageId":"758","endLine":54,"endColumn":33},{"ruleId":"755","severity":1,"message":"778","line":54,"column":35,"nodeType":"757","messageId":"758","endLine":54,"endColumn":59},{"ruleId":"755","severity":1,"message":"779","line":242,"column":11,"nodeType":"757","messageId":"758","endLine":242,"endColumn":24},{"ruleId":"746","replacedBy":"780"},{"ruleId":"748","replacedBy":"781"},{"ruleId":"755","severity":1,"message":"782","line":1,"column":38,"nodeType":"757","messageId":"758","endLine":1,"endColumn":48},{"ruleId":"755","severity":1,"message":"783","line":93,"column":23,"nodeType":"757","messageId":"758","endLine":93,"endColumn":35},{"ruleId":"755","severity":1,"message":"784","line":51,"column":7,"nodeType":"757","messageId":"758","endLine":51,"endColumn":17},{"ruleId":"755","severity":1,"message":"785","line":97,"column":12,"nodeType":"757","messageId":"758","endLine":97,"endColumn":21},{"ruleId":"755","severity":1,"message":"786","line":97,"column":23,"nodeType":"757","messageId":"758","endLine":97,"endColumn":35},{"ruleId":"755","severity":1,"message":"787","line":98,"column":23,"nodeType":"757","messageId":"758","endLine":98,"endColumn":35},{"ruleId":"755","severity":1,"message":"784","line":52,"column":7,"nodeType":"757","messageId":"758","endLine":52,"endColumn":17},{"ruleId":"755","severity":1,"message":"785","line":80,"column":12,"nodeType":"757","messageId":"758","endLine":80,"endColumn":21},{"ruleId":"755","severity":1,"message":"786","line":80,"column":23,"nodeType":"757","messageId":"758","endLine":80,"endColumn":35},{"ruleId":"755","severity":1,"message":"788","line":81,"column":12,"nodeType":"757","messageId":"758","endLine":81,"endColumn":21},{"ruleId":"755","severity":1,"message":"787","line":81,"column":23,"nodeType":"757","messageId":"758","endLine":81,"endColumn":35},{"ruleId":"755","severity":1,"message":"784","line":60,"column":7,"nodeType":"757","messageId":"758","endLine":60,"endColumn":17},{"ruleId":"755","severity":1,"message":"785","line":91,"column":12,"nodeType":"757","messageId":"758","endLine":91,"endColumn":21},{"ruleId":"755","severity":1,"message":"786","line":91,"column":23,"nodeType":"757","messageId":"758","endLine":91,"endColumn":35},{"ruleId":"755","severity":1,"message":"788","line":92,"column":12,"nodeType":"757","messageId":"758","endLine":92,"endColumn":21},{"ruleId":"755","severity":1,"message":"787","line":92,"column":23,"nodeType":"757","messageId":"758","endLine":92,"endColumn":35},{"ruleId":"755","severity":1,"message":"789","line":11,"column":9,"nodeType":"757","messageId":"758","endLine":11,"endColumn":17},{"ruleId":"755","severity":1,"message":"790","line":12,"column":9,"nodeType":"757","messageId":"758","endLine":12,"endColumn":16},{"ruleId":"755","severity":1,"message":"791","line":13,"column":9,"nodeType":"757","messageId":"758","endLine":13,"endColumn":17},{"ruleId":"750","severity":1,"message":"751","line":40,"column":7,"nodeType":"752","endLine":40,"endColumn":86},{"ruleId":"750","severity":1,"message":"751","line":56,"column":7,"nodeType":"752","endLine":56,"endColumn":241},{"ruleId":"750","severity":1,"message":"751","line":61,"column":8,"nodeType":"752","endLine":61,"endColumn":173},{"ruleId":"750","severity":1,"message":"751","line":69,"column":11,"nodeType":"752","endLine":69,"endColumn":98},{"ruleId":"750","severity":1,"message":"751","line":79,"column":11,"nodeType":"752","endLine":79,"endColumn":98},{"ruleId":"750","severity":1,"message":"751","line":88,"column":11,"nodeType":"752","endLine":88,"endColumn":98},{"ruleId":"750","severity":1,"message":"751","line":98,"column":11,"nodeType":"752","endLine":98,"endColumn":98},{"ruleId":"750","severity":1,"message":"751","line":109,"column":10,"nodeType":"752","endLine":109,"endColumn":70},{"ruleId":"750","severity":1,"message":"751","line":118,"column":8,"nodeType":"752","endLine":118,"endColumn":157},{"ruleId":"750","severity":1,"message":"751","line":122,"column":9,"nodeType":"752","endLine":122,"endColumn":47},{"ruleId":"750","severity":1,"message":"751","line":123,"column":9,"nodeType":"752","endLine":123,"endColumn":47},{"ruleId":"750","severity":1,"message":"751","line":125,"column":9,"nodeType":"752","endLine":125,"endColumn":47},{"ruleId":"750","severity":1,"message":"751","line":153,"column":8,"nodeType":"752","endLine":153,"endColumn":123},{"ruleId":"753","severity":1,"message":"754","line":153,"column":8,"nodeType":"752","endLine":153,"endColumn":123},{"ruleId":"750","severity":1,"message":"751","line":158,"column":9,"nodeType":"752","endLine":158,"endColumn":47},{"ruleId":"755","severity":1,"message":"792","line":1,"column":17,"nodeType":"757","messageId":"758","endLine":1,"endColumn":25},{"ruleId":"755","severity":1,"message":"791","line":5,"column":9,"nodeType":"757","messageId":"758","endLine":5,"endColumn":17},{"ruleId":"755","severity":1,"message":"759","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":14},{"ruleId":"755","severity":1,"message":"793","line":6,"column":13,"nodeType":"757","messageId":"758","endLine":6,"endColumn":21},{"ruleId":"755","severity":1,"message":"794","line":3,"column":10,"nodeType":"757","messageId":"758","endLine":3,"endColumn":20},{"ruleId":"746","replacedBy":"795"},{"ruleId":"748","replacedBy":"796"},{"ruleId":"755","severity":1,"message":"797","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":15},{"ruleId":"755","severity":1,"message":"798","line":35,"column":7,"nodeType":"757","messageId":"758","endLine":35,"endColumn":15},{"ruleId":"755","severity":1,"message":"799","line":36,"column":7,"nodeType":"757","messageId":"758","endLine":36,"endColumn":14},{"ruleId":"755","severity":1,"message":"800","line":39,"column":10,"nodeType":"757","messageId":"758","endLine":39,"endColumn":20},{"ruleId":"755","severity":1,"message":"801","line":39,"column":22,"nodeType":"757","messageId":"758","endLine":39,"endColumn":31},{"ruleId":"755","severity":1,"message":"802","line":39,"column":33,"nodeType":"757","messageId":"758","endLine":39,"endColumn":40},{"ruleId":"755","severity":1,"message":"803","line":39,"column":42,"nodeType":"757","messageId":"758","endLine":39,"endColumn":54},{"ruleId":"755","severity":1,"message":"804","line":39,"column":57,"nodeType":"757","messageId":"758","endLine":39,"endColumn":64},{"ruleId":"755","severity":1,"message":"805","line":40,"column":31,"nodeType":"757","messageId":"758","endLine":40,"endColumn":44},{"ruleId":"755","severity":1,"message":"806","line":40,"column":58,"nodeType":"757","messageId":"758","endLine":40,"endColumn":67},{"ruleId":"755","severity":1,"message":"807","line":40,"column":69,"nodeType":"757","messageId":"758","endLine":40,"endColumn":80},{"ruleId":"755","severity":1,"message":"808","line":42,"column":10,"nodeType":"757","messageId":"758","endLine":42,"endColumn":18},{"ruleId":"755","severity":1,"message":"809","line":91,"column":12,"nodeType":"757","messageId":"758","endLine":91,"endColumn":20},{"ruleId":"755","severity":1,"message":"810","line":93,"column":12,"nodeType":"757","messageId":"758","endLine":93,"endColumn":18},{"ruleId":"755","severity":1,"message":"811","line":93,"column":20,"nodeType":"757","messageId":"758","endLine":93,"endColumn":29},{"ruleId":"755","severity":1,"message":"787","line":96,"column":23,"nodeType":"757","messageId":"758","endLine":96,"endColumn":35},{"ruleId":"755","severity":1,"message":"812","line":110,"column":21,"nodeType":"757","messageId":"758","endLine":110,"endColumn":26},{"ruleId":"755","severity":1,"message":"813","line":260,"column":11,"nodeType":"757","messageId":"758","endLine":260,"endColumn":23},{"ruleId":"755","severity":1,"message":"802","line":44,"column":10,"nodeType":"757","messageId":"758","endLine":44,"endColumn":17},{"ruleId":"755","severity":1,"message":"784","line":52,"column":7,"nodeType":"757","messageId":"758","endLine":52,"endColumn":17},{"ruleId":"755","severity":1,"message":"814","line":73,"column":12,"nodeType":"757","messageId":"758","endLine":73,"endColumn":23},{"ruleId":"755","severity":1,"message":"815","line":73,"column":25,"nodeType":"757","messageId":"758","endLine":73,"endColumn":39},{"ruleId":"755","severity":1,"message":"816","line":74,"column":12,"nodeType":"757","messageId":"758","endLine":74,"endColumn":21},{"ruleId":"755","severity":1,"message":"817","line":74,"column":23,"nodeType":"757","messageId":"758","endLine":74,"endColumn":34},{"ruleId":"755","severity":1,"message":"785","line":85,"column":12,"nodeType":"757","messageId":"758","endLine":85,"endColumn":21},{"ruleId":"755","severity":1,"message":"786","line":85,"column":23,"nodeType":"757","messageId":"758","endLine":85,"endColumn":35},{"ruleId":"755","severity":1,"message":"787","line":86,"column":23,"nodeType":"757","messageId":"758","endLine":86,"endColumn":35},{"ruleId":"755","severity":1,"message":"818","line":15,"column":11,"nodeType":"757","messageId":"758","endLine":15,"endColumn":19},{"ruleId":"755","severity":1,"message":"819","line":17,"column":11,"nodeType":"757","messageId":"758","endLine":17,"endColumn":23},{"ruleId":"755","severity":1,"message":"820","line":18,"column":11,"nodeType":"757","messageId":"758","endLine":18,"endColumn":22},{"ruleId":"755","severity":1,"message":"821","line":19,"column":11,"nodeType":"757","messageId":"758","endLine":19,"endColumn":22},{"ruleId":"755","severity":1,"message":"822","line":20,"column":11,"nodeType":"757","messageId":"758","endLine":20,"endColumn":21},{"ruleId":"755","severity":1,"message":"823","line":8,"column":8,"nodeType":"757","messageId":"758","endLine":8,"endColumn":23},{"ruleId":"755","severity":1,"message":"791","line":13,"column":12,"nodeType":"757","messageId":"758","endLine":13,"endColumn":20},{"ruleId":"755","severity":1,"message":"824","line":15,"column":23,"nodeType":"757","messageId":"758","endLine":15,"endColumn":34},{"ruleId":"755","severity":1,"message":"825","line":16,"column":11,"nodeType":"757","messageId":"758","endLine":16,"endColumn":18},{"ruleId":"755","severity":1,"message":"766","line":1,"column":29,"nodeType":"757","messageId":"758","endLine":1,"endColumn":38},{"ruleId":"755","severity":1,"message":"789","line":18,"column":12,"nodeType":"757","messageId":"758","endLine":18,"endColumn":20},{"ruleId":"755","severity":1,"message":"790","line":21,"column":12,"nodeType":"757","messageId":"758","endLine":21,"endColumn":19},{"ruleId":"755","severity":1,"message":"791","line":24,"column":12,"nodeType":"757","messageId":"758","endLine":24,"endColumn":20},{"ruleId":"755","severity":1,"message":"759","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":14},{"ruleId":"755","severity":1,"message":"793","line":6,"column":13,"nodeType":"757","messageId":"758","endLine":6,"endColumn":21},{"ruleId":"755","severity":1,"message":"826","line":9,"column":5,"nodeType":"757","messageId":"758","endLine":9,"endColumn":28},{"ruleId":"755","severity":1,"message":"827","line":30,"column":5,"nodeType":"757","messageId":"758","endLine":30,"endColumn":10},{"ruleId":"755","severity":1,"message":"828","line":36,"column":5,"nodeType":"757","messageId":"758","endLine":36,"endColumn":8},{"ruleId":"755","severity":1,"message":"829","line":37,"column":5,"nodeType":"757","messageId":"758","endLine":37,"endColumn":8},{"ruleId":"755","severity":1,"message":"798","line":39,"column":5,"nodeType":"757","messageId":"758","endLine":39,"endColumn":13},{"ruleId":"755","severity":1,"message":"799","line":40,"column":5,"nodeType":"757","messageId":"758","endLine":40,"endColumn":12},{"ruleId":"755","severity":1,"message":"830","line":100,"column":12,"nodeType":"757","messageId":"758","endLine":100,"endColumn":27},{"ruleId":"755","severity":1,"message":"831","line":101,"column":12,"nodeType":"757","messageId":"758","endLine":101,"endColumn":26},{"ruleId":"755","severity":1,"message":"832","line":102,"column":12,"nodeType":"757","messageId":"758","endLine":102,"endColumn":18},{"ruleId":"755","severity":1,"message":"833","line":103,"column":12,"nodeType":"757","messageId":"758","endLine":103,"endColumn":27},{"ruleId":"755","severity":1,"message":"834","line":104,"column":12,"nodeType":"757","messageId":"758","endLine":104,"endColumn":24},{"ruleId":"755","severity":1,"message":"835","line":106,"column":22,"nodeType":"757","messageId":"758","endLine":106,"endColumn":33},{"ruleId":"755","severity":1,"message":"836","line":107,"column":25,"nodeType":"757","messageId":"758","endLine":107,"endColumn":39},{"ruleId":"755","severity":1,"message":"837","line":108,"column":27,"nodeType":"757","messageId":"758","endLine":108,"endColumn":43},{"ruleId":"755","severity":1,"message":"838","line":109,"column":22,"nodeType":"757","messageId":"758","endLine":109,"endColumn":33},{"ruleId":"755","severity":1,"message":"839","line":110,"column":12,"nodeType":"757","messageId":"758","endLine":110,"endColumn":16},{"ruleId":"755","severity":1,"message":"840","line":110,"column":18,"nodeType":"757","messageId":"758","endLine":110,"endColumn":25},{"ruleId":"755","severity":1,"message":"841","line":111,"column":12,"nodeType":"757","messageId":"758","endLine":111,"endColumn":20},{"ruleId":"755","severity":1,"message":"809","line":112,"column":12,"nodeType":"757","messageId":"758","endLine":112,"endColumn":20},{"ruleId":"755","severity":1,"message":"787","line":117,"column":23,"nodeType":"757","messageId":"758","endLine":117,"endColumn":35},{"ruleId":"755","severity":1,"message":"842","line":317,"column":11,"nodeType":"757","messageId":"758","endLine":317,"endColumn":20},{"ruleId":"755","severity":1,"message":"813","line":351,"column":11,"nodeType":"757","messageId":"758","endLine":351,"endColumn":23},{"ruleId":"755","severity":1,"message":"843","line":479,"column":11,"nodeType":"757","messageId":"758","endLine":479,"endColumn":27},{"ruleId":"755","severity":1,"message":"844","line":1,"column":38,"nodeType":"757","messageId":"758","endLine":1,"endColumn":44},{"ruleId":"755","severity":1,"message":"827","line":28,"column":5,"nodeType":"757","messageId":"758","endLine":28,"endColumn":10},{"ruleId":"755","severity":1,"message":"759","line":38,"column":10,"nodeType":"757","messageId":"758","endLine":38,"endColumn":14},{"ruleId":"755","severity":1,"message":"802","line":39,"column":10,"nodeType":"757","messageId":"758","endLine":39,"endColumn":17},{"ruleId":"755","severity":1,"message":"845","line":39,"column":19,"nodeType":"757","messageId":"758","endLine":39,"endColumn":34},{"ruleId":"755","severity":1,"message":"784","line":47,"column":7,"nodeType":"757","messageId":"758","endLine":47,"endColumn":17},{"ruleId":"755","severity":1,"message":"814","line":81,"column":12,"nodeType":"757","messageId":"758","endLine":81,"endColumn":23},{"ruleId":"755","severity":1,"message":"815","line":81,"column":25,"nodeType":"757","messageId":"758","endLine":81,"endColumn":39},{"ruleId":"755","severity":1,"message":"816","line":82,"column":12,"nodeType":"757","messageId":"758","endLine":82,"endColumn":21},{"ruleId":"755","severity":1,"message":"817","line":82,"column":23,"nodeType":"757","messageId":"758","endLine":82,"endColumn":34},{"ruleId":"755","severity":1,"message":"785","line":93,"column":12,"nodeType":"757","messageId":"758","endLine":93,"endColumn":21},{"ruleId":"755","severity":1,"message":"786","line":93,"column":23,"nodeType":"757","messageId":"758","endLine":93,"endColumn":35},{"ruleId":"755","severity":1,"message":"787","line":94,"column":23,"nodeType":"757","messageId":"758","endLine":94,"endColumn":35},{"ruleId":"755","severity":1,"message":"846","line":326,"column":11,"nodeType":"757","messageId":"758","endLine":326,"endColumn":23},{"ruleId":"755","severity":1,"message":"847","line":19,"column":7,"nodeType":"757","messageId":"758","endLine":19,"endColumn":16},{"ruleId":"755","severity":1,"message":"848","line":45,"column":12,"nodeType":"757","messageId":"758","endLine":45,"endColumn":25},{"ruleId":"755","severity":1,"message":"849","line":45,"column":27,"nodeType":"757","messageId":"758","endLine":45,"endColumn":43},{"ruleId":"755","severity":1,"message":"850","line":46,"column":12,"nodeType":"757","messageId":"758","endLine":46,"endColumn":26},{"ruleId":"755","severity":1,"message":"851","line":46,"column":28,"nodeType":"757","messageId":"758","endLine":46,"endColumn":45},{"ruleId":"755","severity":1,"message":"852","line":47,"column":12,"nodeType":"757","messageId":"758","endLine":47,"endColumn":29},{"ruleId":"755","severity":1,"message":"853","line":47,"column":31,"nodeType":"757","messageId":"758","endLine":47,"endColumn":51},{"ruleId":"755","severity":1,"message":"854","line":48,"column":12,"nodeType":"757","messageId":"758","endLine":48,"endColumn":28},{"ruleId":"755","severity":1,"message":"855","line":48,"column":30,"nodeType":"757","messageId":"758","endLine":48,"endColumn":49},{"ruleId":"755","severity":1,"message":"856","line":49,"column":12,"nodeType":"757","messageId":"758","endLine":49,"endColumn":28},{"ruleId":"755","severity":1,"message":"857","line":49,"column":30,"nodeType":"757","messageId":"758","endLine":49,"endColumn":49},{"ruleId":"755","severity":1,"message":"858","line":50,"column":12,"nodeType":"757","messageId":"758","endLine":50,"endColumn":27},{"ruleId":"755","severity":1,"message":"859","line":50,"column":29,"nodeType":"757","messageId":"758","endLine":50,"endColumn":47},{"ruleId":"755","severity":1,"message":"794","line":3,"column":10,"nodeType":"757","messageId":"758","endLine":3,"endColumn":20},{"ruleId":"755","severity":1,"message":"827","line":16,"column":5,"nodeType":"757","messageId":"758","endLine":16,"endColumn":10},{"ruleId":"755","severity":1,"message":"860","line":37,"column":20,"nodeType":"757","messageId":"758","endLine":37,"endColumn":29},{"ruleId":"755","severity":1,"message":"861","line":38,"column":23,"nodeType":"757","messageId":"758","endLine":38,"endColumn":35},{"ruleId":"755","severity":1,"message":"862","line":39,"column":27,"nodeType":"757","messageId":"758","endLine":39,"endColumn":43},{"ruleId":"755","severity":1,"message":"863","line":42,"column":22,"nodeType":"757","messageId":"758","endLine":42,"endColumn":33},{"ruleId":"755","severity":1,"message":"864","line":43,"column":12,"nodeType":"757","messageId":"758","endLine":43,"endColumn":20},{"ruleId":"755","severity":1,"message":"865","line":43,"column":22,"nodeType":"757","messageId":"758","endLine":43,"endColumn":33},{"ruleId":"755","severity":1,"message":"866","line":44,"column":22,"nodeType":"757","messageId":"758","endLine":44,"endColumn":33},{"ruleId":"755","severity":1,"message":"867","line":45,"column":21,"nodeType":"757","messageId":"758","endLine":45,"endColumn":31},{"ruleId":"755","severity":1,"message":"775","line":46,"column":12,"nodeType":"757","messageId":"758","endLine":46,"endColumn":18},{"ruleId":"755","severity":1,"message":"776","line":46,"column":20,"nodeType":"757","messageId":"758","endLine":46,"endColumn":29},{"ruleId":"755","severity":1,"message":"778","line":47,"column":35,"nodeType":"757","messageId":"758","endLine":47,"endColumn":59},{"ruleId":"755","severity":1,"message":"868","line":50,"column":35,"nodeType":"757","messageId":"758","endLine":50,"endColumn":59},{"ruleId":"755","severity":1,"message":"869","line":85,"column":11,"nodeType":"757","messageId":"758","endLine":85,"endColumn":22},{"ruleId":"755","severity":1,"message":"827","line":18,"column":5,"nodeType":"757","messageId":"758","endLine":18,"endColumn":10},{"ruleId":"755","severity":1,"message":"825","line":37,"column":11,"nodeType":"757","messageId":"758","endLine":37,"endColumn":18},{"ruleId":"755","severity":1,"message":"766","line":1,"column":27,"nodeType":"757","messageId":"758","endLine":1,"endColumn":36},{"ruleId":"755","severity":1,"message":"773","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":21},{"ruleId":"755","severity":1,"message":"767","line":2,"column":23,"nodeType":"757","messageId":"758","endLine":2,"endColumn":34},{"ruleId":"755","severity":1,"message":"759","line":9,"column":10,"nodeType":"757","messageId":"758","endLine":9,"endColumn":14},{"ruleId":"755","severity":1,"message":"870","line":10,"column":10,"nodeType":"757","messageId":"758","endLine":10,"endColumn":16},{"ruleId":"755","severity":1,"message":"871","line":10,"column":18,"nodeType":"757","messageId":"758","endLine":10,"endColumn":24},{"ruleId":"755","severity":1,"message":"872","line":21,"column":5,"nodeType":"757","messageId":"758","endLine":21,"endColumn":11},{"ruleId":"755","severity":1,"message":"844","line":1,"column":48,"nodeType":"757","messageId":"758","endLine":1,"endColumn":54},{"ruleId":"755","severity":1,"message":"873","line":21,"column":5,"nodeType":"757","messageId":"758","endLine":21,"endColumn":15},{"ruleId":"755","severity":1,"message":"874","line":23,"column":5,"nodeType":"757","messageId":"758","endLine":23,"endColumn":15},{"ruleId":"755","severity":1,"message":"827","line":28,"column":5,"nodeType":"757","messageId":"758","endLine":28,"endColumn":10},{"ruleId":"755","severity":1,"message":"759","line":38,"column":10,"nodeType":"757","messageId":"758","endLine":38,"endColumn":14},{"ruleId":"755","severity":1,"message":"784","line":46,"column":7,"nodeType":"757","messageId":"758","endLine":46,"endColumn":17},{"ruleId":"755","severity":1,"message":"875","line":91,"column":9,"nodeType":"757","messageId":"758","endLine":91,"endColumn":14},{"ruleId":"755","severity":1,"message":"876","line":92,"column":9,"nodeType":"757","messageId":"758","endLine":92,"endColumn":14},{"ruleId":"755","severity":1,"message":"830","line":102,"column":12,"nodeType":"757","messageId":"758","endLine":102,"endColumn":27},{"ruleId":"755","severity":1,"message":"877","line":103,"column":12,"nodeType":"757","messageId":"758","endLine":103,"endColumn":30},{"ruleId":"755","severity":1,"message":"787","line":110,"column":23,"nodeType":"757","messageId":"758","endLine":110,"endColumn":35},{"ruleId":"755","severity":1,"message":"827","line":28,"column":5,"nodeType":"757","messageId":"758","endLine":28,"endColumn":10},{"ruleId":"755","severity":1,"message":"784","line":45,"column":7,"nodeType":"757","messageId":"758","endLine":45,"endColumn":17},{"ruleId":"755","severity":1,"message":"875","line":74,"column":60,"nodeType":"757","messageId":"758","endLine":74,"endColumn":65},{"ruleId":"755","severity":1,"message":"876","line":74,"column":67,"nodeType":"757","messageId":"758","endLine":74,"endColumn":72},{"ruleId":"755","severity":1,"message":"787","line":87,"column":23,"nodeType":"757","messageId":"758","endLine":87,"endColumn":35},{"ruleId":"755","severity":1,"message":"846","line":303,"column":11,"nodeType":"757","messageId":"758","endLine":303,"endColumn":23},{"ruleId":"755","severity":1,"message":"784","line":55,"column":7,"nodeType":"757","messageId":"758","endLine":55,"endColumn":17},{"ruleId":"755","severity":1,"message":"875","line":92,"column":60,"nodeType":"757","messageId":"758","endLine":92,"endColumn":65},{"ruleId":"755","severity":1,"message":"786","line":107,"column":23,"nodeType":"757","messageId":"758","endLine":107,"endColumn":35},{"ruleId":"755","severity":1,"message":"787","line":108,"column":23,"nodeType":"757","messageId":"758","endLine":108,"endColumn":35},{"ruleId":"755","severity":1,"message":"846","line":406,"column":11,"nodeType":"757","messageId":"758","endLine":406,"endColumn":23},{"ruleId":"755","severity":1,"message":"782","line":1,"column":38,"nodeType":"757","messageId":"758","endLine":1,"endColumn":48},{"ruleId":"755","severity":1,"message":"827","line":29,"column":5,"nodeType":"757","messageId":"758","endLine":29,"endColumn":10},{"ruleId":"755","severity":1,"message":"878","line":40,"column":5,"nodeType":"757","messageId":"758","endLine":40,"endColumn":13},{"ruleId":"755","severity":1,"message":"805","line":41,"column":5,"nodeType":"757","messageId":"758","endLine":41,"endColumn":18},{"ruleId":"755","severity":1,"message":"879","line":48,"column":10,"nodeType":"757","messageId":"758","endLine":48,"endColumn":33},{"ruleId":"755","severity":1,"message":"811","line":123,"column":20,"nodeType":"757","messageId":"758","endLine":123,"endColumn":29},{"ruleId":"755","severity":1,"message":"783","line":124,"column":23,"nodeType":"757","messageId":"758","endLine":124,"endColumn":35},{"ruleId":"755","severity":1,"message":"880","line":438,"column":11,"nodeType":"757","messageId":"758","endLine":438,"endColumn":19},{"ruleId":"755","severity":1,"message":"881","line":480,"column":15,"nodeType":"757","messageId":"758","endLine":480,"endColumn":25},{"ruleId":"755","severity":1,"message":"882","line":14,"column":10,"nodeType":"757","messageId":"758","endLine":14,"endColumn":30},{"ruleId":"755","severity":1,"message":"784","line":39,"column":7,"nodeType":"757","messageId":"758","endLine":39,"endColumn":17},{"ruleId":"755","severity":1,"message":"875","line":71,"column":60,"nodeType":"757","messageId":"758","endLine":71,"endColumn":65},{"ruleId":"755","severity":1,"message":"876","line":71,"column":67,"nodeType":"757","messageId":"758","endLine":71,"endColumn":72},{"ruleId":"755","severity":1,"message":"787","line":84,"column":23,"nodeType":"757","messageId":"758","endLine":84,"endColumn":35},{"ruleId":"755","severity":1,"message":"883","line":264,"column":11,"nodeType":"757","messageId":"758","endLine":264,"endColumn":20},{"ruleId":"755","severity":1,"message":"884","line":15,"column":7,"nodeType":"757","messageId":"758","endLine":15,"endColumn":20},{"ruleId":"755","severity":1,"message":"885","line":53,"column":12,"nodeType":"757","messageId":"758","endLine":53,"endColumn":21},{"ruleId":"755","severity":1,"message":"886","line":54,"column":12,"nodeType":"757","messageId":"758","endLine":54,"endColumn":21},{"ruleId":"755","severity":1,"message":"887","line":55,"column":12,"nodeType":"757","messageId":"758","endLine":55,"endColumn":20},{"ruleId":"755","severity":1,"message":"888","line":56,"column":12,"nodeType":"757","messageId":"758","endLine":56,"endColumn":25},{"ruleId":"755","severity":1,"message":"775","line":60,"column":12,"nodeType":"757","messageId":"758","endLine":60,"endColumn":18},{"ruleId":"755","severity":1,"message":"776","line":60,"column":20,"nodeType":"757","messageId":"758","endLine":60,"endColumn":29},"no-native-reassign",["889"],"no-negated-in-lhs",["890"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["889"],["890"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'createCampus' is defined but never used.","'useForm' is defined but never used.","'dispatch' is assigned a value but never used.",["889"],["890"],"'useDispatch' is defined but never used.","'Component' is defined but never used.","'campus' is assigned a value but never used.","'setCampus' is assigned a value but never used.","'fieldOfSpecialization' is assigned a value but never used.","'setFieldOfSpecialization' is assigned a value but never used.","'onClickDelete' is assigned a value but never used.",["889"],["890"],"'useContext' is defined but never used.","'setCreatedBy' is assigned a value but never used.","'MODAL_TYPE' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'setUpdatedAt' is assigned a value but never used.","'setUpdatedBy' is assigned a value but never used.","'updatedBy' is assigned a value but never used.","'position' is assigned a value but never used.","'college' is assigned a value but never used.","'userType' is assigned a value but never used.","'Fragment' is defined but never used.","'userData' is assigned a value but never used.","'useHistory' is defined but never used.",["889"],["890"],"'toast' is defined but never used.","'Progress' is defined but never used.","'Spinner' is defined but never used.","'FaDownload' is defined but never used.","'FaFilePdf' is defined but never used.","'FaCheck' is defined but never used.","'FaRegFilePdf' is defined but never used.","'FaTrash' is defined but never used.","'MdKeyboardTab' is defined but never used.","'MdThumbUp' is defined but never used.","'MdThumbDown' is defined but never used.","'Document' is defined but never used.","'filePath' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'count' is assigned a value but never used.","'showModalPdf' is assigned a value but never used.","'modalPrompt' is assigned a value but never used.","'setModalPrompt' is assigned a value but never used.","'modalType' is assigned a value but never used.","'setModaType' is assigned a value but never used.","'proposal' is assigned a value but never used.","'presentation' is assigned a value but never used.","'publication' is assigned a value but never used.","'utilization' is assigned a value but never used.","'innovation' is assigned a value but never used.","'SideMenuBarUser' is defined but never used.","'setUserData' is assigned a value but never used.","'history' is assigned a value but never used.","'createProposalCompleted' is defined but never used.","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'titleOfResearch' is assigned a value but never used.","'typeOfResearch' is assigned a value but never used.","'author' is assigned a value but never used.","'sourceOfFunding' is assigned a value but never used.","'nameOfAgency' is assigned a value but never used.","'setAbstract' is assigned a value but never used.","'setDateStarted' is assigned a value but never used.","'setDateCompleted' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'fileName' is assigned a value but never used.","'clearForm' is assigned a value but never used.","'getAuthorsOption' is assigned a value but never used.","'useRef' is defined but never used.","'FaLessThanEqual' is defined but never used.","'onSubmitForm' is assigned a value but never used.","'USER_TYPE' is assigned a value but never used.","'totalProposal' is assigned a value but never used.","'setTotalProposal' is assigned a value but never used.","'totalCompleted' is assigned a value but never used.","'setTotalCompleted' is assigned a value but never used.","'totalPresentation' is assigned a value but never used.","'setTotalPresentation' is assigned a value but never used.","'totalPublication' is assigned a value but never used.","'setTotalPublication' is assigned a value but never used.","'totalUtilization' is assigned a value but never used.","'setTotalUtilization' is assigned a value but never used.","'totalInnovation' is assigned a value but never used.","'setTotalInnovation' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'setmiddleInitial' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'fullName' is assigned a value but never used.","'setFullName' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'setCollege' is assigned a value but never used.","'setEducationalAttainment' is assigned a value but never used.","'getColleges' is assigned a value but never used.","'FaUser' is defined but never used.","'FaLock' is defined but never used.","'Button' is defined but never used.","'CardHeader' is defined but never used.","'CardFooter' is defined but never used.","'reset' is assigned a value but never used.","'watch' is assigned a value but never used.","'titleOfPublication' is assigned a value but never used.","'MdDelete' is defined but never used.","'DateTimePickerComponent' is defined but never used.","'printPDF' is assigned a value but never used.","'dateFormat' is assigned a value but never used.","'getProposalCompleted' is defined but never used.","'toggleTab' is assigned a value but never used.","'createAccount' is defined but never used.","'accountId' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'middleInitial' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]